@DATABASE YAM.guide
@$VER: YAM.guide 2.7 (24.12.2011)
/***************************************************************************

 YAM - Yet Another Mailer
 Copyright (C) 1995-2000 by Marcel Beck <mbeck\@yam.ch>
 Copyright (C) 2000-2022 YAM Open Source Team

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 YAM Official Support Site :  http://yam.ch/

 $Id$

***************************************************************************/

/*
**  TO DO...
**
** - Explain the NListtree tricks for the folder list
** - Explain how to get the most of Message preselection
** - Explain how to use "Avoid duplicates" properly
** - More detailed info about which MUI settings affect what part of YAM
**   (especially fonts)
** - Quick mention of PrintMethod in the FAQ (assuming it doesn't make it
**   into 2.4), maybe rename the "Tips & Tricks" node as such
** - Postscript / PDF editions of this manual
** - ...
**
*/

@INDEX "Index"

@NODE "Main" "YAM - English documentation"


            @{b}=============================================
             Y A M    (Yet Another Mailer)   VERSION 2.7
            =============================================@{ub}

                      © 1995-2000 by Marcel Beck
                 © 2000-2011 by YAM Open Source Team


      @{" Legal stuff     " link "COPY"}  - Legal information
      @{" Getting started " link "BEGI"}  - Requirements, installation
      @{" What is e-mail? " link "MAIL"}  - Introduction to electronic mail

      @{" Configuration   " link "CO_W"}  - Configuring YAM to suit your own needs
      @{" Windows         " link "WI_W"}  - The main windows used by YAM
      @{" Reference       " link "RF_W"}  - File formats, ARexx commands, etc.

      @{" Tips & tricks   " link "TIPS"}  - Some useful hints
      @{" Known problems  " link "PROB"}  - Things that you should be aware of
      @{" Support         " link "INFO"}  - Some useful contact links
      @{" The future      " link "PLAN"}  - Planned improvements
      @{" Credits         " link "CRED"}  - Those who supported the development of YAM

@endnode

@node "COPY" "Legal stuff"
@next "BEGI"
@prev "Main"
@toc "Main"

Legal stuff
***********


YAM - Yet Another Mailer
Copyright (C) 1995-2000 Marcel Beck
Copyright (C) 2000-2022 YAM Open Source Team

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the  Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
USA

@endnode

@node "BEGI" "Getting started"
@next "MAIL"
@prev "COPY"
@toc "Main"

Getting started
***************


 @{" Introduction " link "INTR"}  - About YAM
 @{" Requirements " link "REQS"}  - System requirements and software needed
 @{" Installation " link "INST"}  - Installing YAM on a hard disk
 @{" Quickstart   " link "TUTO"}  - Getting YAM started in 5 minutes

@endnode

@node "INTR" "Introduction"
@next "REQS"
@prev "COPY"
@toc "BEGI"

Introduction
============


   YAM (Yet Another Mailer) lets you send and receive @{" electronic mail " link "MAIL"}
over the Internet and maintain archives of messages in your computer.

   The idea for YAM came to me in 1995, when I first tried using E-mail.
The programmes available then were either powerful but complicated to
configure, or else used a graphical interface but with few functions.
The goal, therefore, was to program a cross between AdMail and AirMail,
with a few ideas from Pegasus Mail.

   The unexpectedly enthusiastic response to Version 1.2 led to a steady
development of YAM culminating in Version 2.2, which is much more than
just an upgrade for the popular Version 1.3.5.

   As of YAM 2.3, YAM is maintained by the YAM Open Source Team.


Marcel Beck
November 2000





Features of YAM
===============

* Straightforward @{" installation " link "INST"} and @{" configuration " link "TUTO"}, taking only a
  few minutes.

* Easy operation using buttons, menus, keyboard and @{" drag&drop " link "DRAG"}.

* Context-sensitive online help system, using help bubbles and AmigaGuide®.

* Provision for up to 16 different @{" users " link "US_W"}, who can each have their
  own folders and define their own preferences.

* Any number of @{" user-defined folders " link "FO_W"}, which can be compressed and/or
  have passwords set, and be arranged in groups.

* Hierarchical @{" address book " link "AB_W"} with groups and distribution lists as
  well as comprehensive descriptions for each entry.

* Embedded read pane in main window, allows for easier reading of your mail.

* Freely customisable interface, thanks to @{" MUI " link "MUI"}.

* Themes, allows easy switching between different icon themes.

* Built-in @{" POP3 " link "PROT"} client, which can check up to 16 different POP3
  accounts in one connection and also allows prior selection of the
  messages to be downloaded.

* Messages can be written or answered offline and then sent to the
  mail server using the built-in @{" SMTP " link "PROT"} client.

* Powerful @{" text editor " link "EDIT"} for writing E-mails providing several type
  styles, @{" glossary " link "DI_W"} and spellchecking.

* Comprehensive @{" search capabilities " link "FI_W"}, for example a full text search
  through all articles using a single query.

* Automatic sorting of the post with a theoretically unlimited
  amount of @{" filters " link "CO03"}.
  Archiving or diversion of specified articles, automatic replies or
  the deletion of advertising are just a few of the possible
  applications of the filters.

* Support for @{" PGP " link "PGP"} encryption and signing of messages as well as
  read and receive authentication.

* Built-in support for UUencode and @{" MIME " link "MIME"} for sending and receiving
  binary data and automatic recognition of over 20 datatypes.

* Event-sensitive starting of @{" macros " link "CO13"} and comprehensive @{" ARexx " link "REXX"}
  support.

* TLSv1/SSLv3 secure connections (POP3/SMTP) via AmiSSL.library.

* Spam filter ported from Thunderbird.

* Localized to many languages.

@endnode

@node "REQS" "Requirements"
@next "INST"
@prev "INTR"
@toc "BEGI"

Requirements
============


Hardware
--------

   * Amiga computer
   * at least 2 MB RAM
   * 68020 CPU or higher


Software
--------

   * AmigaOS 3.0 (Kickstart V39) or higher
   * @{" MUI " link "MUI"} 3.8 or higher
   * 3rd party MUI custom classes:

        - BetterString 11.21+
            http://sf.net/projects/bstring-mcc/files/latest/download
        - NList 0.111+
            http://sf.net/projects/nlist-classes/files/latest/download
        - TextEditor 15.37+
            http://sf.net/projects/texteditor-mcc/files/latest/download
        - TheBar 26.8+
            http://sf.net/projects/thebar-mcc/files/latest/download

   * Codesets Library 6.13+
   * AmiTCP compatible TCP/IP stack (AmiTCP, Miami[DX], TermiteTCP, RoadShow)
   * optional: XPK for compression of articles
   * optional: PGP 2.6 or 5.0 for encryption and signing messages
   * optional: AmiSSL v3 for TLSv1/SSLv3 security layers over SMTP/POP
   * optional: Archiver for attachment compression, e.g.  LhA
   * optional: Program for spell-checking, e.g.  AlphaSpell
   * optional: @{" AutoDST " link "TIP5"} handling tool, e.g.  SetDST, FACTS, SummerTimeGuard

@endnode

@node "INST" "Installation"
@next "TUTO"
@prev "COPY"
@toc "BEGI"

Installation
============


   YAM 2.7 is distributed in six LhA archives:

@{b}YAM27-AmigaOS4.lha@{ub}
     YAM for AmigaOS 4

@{b}YAM27-AmigaOS3.lha@{ub}
     YAM for AmigaOS 3

@{b}YAM27-MorphOS.lha@{ub}
     YAM for MorphOS

@{b}YAM27-AROS-i386.lha@{ub}
     YAM for AROS-i386

@{b}YAM27-AROS-ppc.lha@{ub}
     YAM for AROS-ppc

@{b}YAM27-AROS-x86_64.lha@{ub}
     YAM for AROS-x86_64


Installation by using the installer
-----------------------------------

   Open the 'Install' folder, double-click the 'Install-YAM' icon and
follow the instructions given by the installer.  If you have already
installed an older version of YAM, please restart your Amiga after the
installation of YAM 2.7.


Manual installation
-------------------

   If you don't have the Amiga Installer or for some reason you are
unable or unwilling to use it, proceed as follows:

- Copy the whole "YAM 2.7" directory path to your destination directory.

- Copy all MUI libraries (mcc/mcp) from the directory @{b}Install/MUI@{ub} to
  @{b}MUI:libs/MUI@{ub}.

- Copy all Libraries located in the @{b}Install/Libs@{ub} directory to
  @{b}LIBS:@{ub}

- Delete the "Install" directory within the "YAM 2.7" path as you don't
  need it anymore.

- Reboot your Amiga and start YAM from the new path by doubleclicking its
  icon.


@endnode

@node "TUTO" "Quickstart"
@next "INTR"
@prev "INST"
@toc "BEGI"

Quickstart
==========


   This chapter is meant to be a step-by-step guide to the way YAM
works.  It is assumed that you already have YAM installed on your
system and that you're using Miami as your TCP/IP software.

   If you have used YAM before, you probably can skip this chapter.


 1. Get the following information from your Internet provider:

    - your e-mail address
    - the Internet address of the mail server (so called POP- or
      SMTP server)
    - your password, required to log in on the mail server

    As an example here's the setup for a fictitious user named 'John
    Doe' living in Britain.  His e-mail address is 'jdoe\@example.com'
    and the address of his mail server is 'mail.example.com'.  His
    password is 'nguz56'.

 2. Start YAM by double-clicking its icon.  After the copyright window
    has closed, the main window should open with two listings (folder
    list & message list) and a row of buttons.

 3. The program must be configured before you can do anything else.
    Choose 'Configuration' from the 'Settings' menu or simply click
    the button with the question mark to open the configuration
    window.  The sheet which then appears is called 'First  Steps',
    and this is where you must enter the information needed for data
    transfer.  Following our example this is:

                      Real Name:     John Doe
                      Email address: jdoe\@example.com
                      POP3 server:   mail.example.com
                      Password:      nguz56
                      Time zone:     GMT

    For security reasons the password textfield only shows stars, one
    for each character you type.  If daylight saving time applies to
    you at the time of installation, switch on the adjustment for it
    (right beneath the time zone).

 4. YAM allows you to define a text passage which will be appended to
    all of your e-mail as a complimentary closing phrase.  To define it
    you have to click on 'Write' in the list on the left hand side of
    the configuration window.  On the page appearing now select the
    text field 'Welcome phrase', delete the original text by hitting
    RAmiga-X and insert something such as:

                           Kind regards,\\n  Joe

    The control string \\n forces a new line after the word
    'regards'.

 5. Save the settings now by clicking on [Save].  YAM now has sufficient
    data to allow you to write your first message.

 6. After saving the settings you're back in the main window.  Click
    the button 'Write' (sixth button from the left) or choose 'New'
    from the 'Message' menu.  The editor window will open.  Insert
    the e-mail address of the recipient into the 'To' textfield (e.g.
    'jdoe\@example.com').  Normally of course you would put someone
    else's address, but right now you want to test the system, so put
    your own address instead.  Insert two or three words to indicate
    the subject into the 'Subject' text field ('test' will do nicely
    for this one!).  Now click in the large blank area and type the
    actual message.

    If you were using YAM in a normal way, and wished to send copies
    (including hidden copies) to anyone, this could be done by clicking
    on 'Options', thus activating the third of the three sheets
    (Message, Attachments, Options) in the Write window.

 7. Assuming you are not currently online (Miami is not running),
    click on [Send later].  This sends the message to the 'Outgoing'
    folder as opposed to transmitting the message right away [Send
    now].

 8. Now start Miami and connect to the Internet.  Open the 'Outgoing'
    folder by clicking on 'Outgoing' in the folder list contained in
    the main window.  Send the message by clicking the 'Send' button
    (fifth button from the right hand  side).  The transfer status
    window will appear and report progress as YAM logs in on the
    mail server and sends the message.

 9. As you've probably noticed the mail has vanished from the
    'Outgoing' folder.  Don't panic!  It has been moved to the 'Sent'
    folder.  The letter symbol in the list has a little stamp on it
    now, which means that the message has been sent successfully.

10. When you double-click the message, the read window will open.
    You should be able to recognize the text written by you. The lines
    in the upper part of the message have been inserted by YAM and
    contain data needed for mail transfer (the so-called "headers").

11. Since you've written the mail to yourself you should start looking
    for new mail now.  Click the read window to the background or close
    it, then click on the 'Get' button (sixth button from the right
    hand side).

12. The transfer status window you saw before opens again and you can
    watch how YAM downloads your mail from the mail server.  Provided
    that everything runs as it should, a requester will open up with
    the message that you  have received new mail.  You can read the
    mail in the 'Incoming' folder.


   If you've made it this far without major problems, you now know the
essential functions of YAM.  For further explanations and more detailed
information on single topics, please read the following chapters.

@endnode

@node "MAIL" "Basics - what is e-mail?"
@next "CO_W"
@prev "BEGI"
@toc "Main"

Basics - what is e-mail?
************************


   E-mail was the first service to be implemented on the Internet and
is still the most popular method of communication over the Internet.
A substantial proportion of the people on the Internet use only this
service.  It is predicted that in the next few years e-mail will replace
the traditional forms of communication like letters and fax for many
purposes.  At the present time one can in a matter of minutes reach
several million people world-wide by e-mail.  Users of other networks,
such as Compuserve and T-Online, are connected to the Internet through
"gateways".


   Related topics:

 @{" Make up of a message header    " link "HEAD"}
 @{" Mail protocols (POP3 and SMTP) " link "PROT"}
 @{" What is MIME?                  " link "MIME"}
 @{" Encrypting with PGP            " link "PGP"}
 @{" Golden rules (Netiquette)      " link "NETI"}

@endnode

@node "HEAD" "Basics - make up of a message header"
@next "PROT"
@prev "NETI"
@toc "MAIL"

Basics - make up of a message header
====================================


   Every e-mail starts with a header which is separated from the
actual message body by a blank line.  YAM constructs this header
automatically following the settings specified in the configuration.

   The header of an e-mail is divided into fields which each start on
a new line and have the general form 'Field: contents'.  Fields which
are too long to fit in a single line can be split to run over several
lines.  The majority of the header lines can be omitted but are added to
provide the recipient's mail program with additional information about
the message or to give data needed to check for errors caused by
transmission problems.  A few of the important fields are explained by
means of the following example.


  Return-Path: <just\@zfn.uni-bremen.de>

   This field is added by the recipient's mail server and contains
the e-mail address of the sender to allow the recipient's computer to
send a reply by e-mail.


  Received: from ina.zfn.uni-bremen.de by atlantica.access.ch
            (8.8.5/INA-1.05pri) id XAA29100;
            Tue, 23 Dec 1997 23:40:45 +0100 (MET)
  Received: from moritz37.zfn.uni-bremen.de by
            ina.zfn.uni-bremen.de (AIX 3.2/UCB 5.64/ZFNserver) id AA26355;
            Tue, 23 Dec 1997 23:40:13 +0100

   Each computer which sends the message on the next stage of its
journey, and also the recipient's own system, adds on a "Received:"
field to the header to say when the message arrived and where it
came from.  This allows one to reconstruct transmission problems
which may have affected the message along its route.


  From: Christian Just <just\@example.net>

   E-mail address and real name of the sender.


  Reply-To: just\@example.org

   The address to which any reply to this message should be sent.
This is used if the message is despatched from a computer which the
sender cannot use to read mail, for whatever reason.  Then he can use
this field to say where a reply should be sent.  In the absence of a
@{b}Reply-To:@{ub} field, replies go to the address given in the @{b}From:@{ub} field.


  To: "Marcel Beck (Yet another Mailer-author)" <mbeck\@example.com>

   The address of the recipient; additional names can be given,
separated by commas.  This field may contain simply the address
in the form name\@domain or else it may be prefaced by an additional
comment, such as the recipient's name -- in this case, the address
must be enclosed in pointed brackets.


  Date: Tue, 23 Dec 1997 23:28:30 +0200

   Date and time of despatch of the message.  The figure after the time
represents the timezone, expressed as the difference from Greenwich Mean
Time.  Here the first two digits show the hours, and the next two the
minutes.


  Message-ID: <YAM7296.1549.122414920\@zfn.uni-bremen.de>

   An unique identifier, created automatically on despatch.  Using
this it is possible unequivocally to cancel any particular message.


  In-Reply-To: <YAM7296.263.121102896\@mail.access.ch>

   A precise reference to the message being replied, such as its
Message-ID


  X-Mailer: YAM 2.0beta4 - Amiga Mailer by Marcel Beck - http://yam.ch

   Name and Version of the sender's mail program.


  Subject: Re: YAM2beta5

   This field should state concisely the topic of the message.  Giving
a clear and informative Subject is a mark of good style (@{" Netiquette " link "NETI"}).


 Mime-Version: 1.0
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain; charset=iso-8859-1

   These fields indicate that the message is set out in MIME format.
In this example, it contains plain text in the ISO-Latin-1 character
set and characters which cannot be represented using 7 bits are encoded
as @{" Quoted-printable " link "MIME"}.


@endnode

@node "PROT" "Basics - mail protocols"
@next "MIME"
@prev "HEAD"
@toc "MAIL"

Basics - mail protocols
=======================


   YAM uses the Simple Mail Transfer Protocol (SMTP) in order to send
your mail to the SMTP server, which also uses SMTP to transmit your
mail across the whole world.  Incoming mail arrives at your Post Office
Protocol (POP) server, where it waits until YAM downloads it to your
computer, using the POP3 (POP version 3) protocols.  The messages which
YAM sends and receives conform to the conventions set out in RFC 822
and RFC 1521 (MIME).


Outgoing mail
-------------

   If you want to send an e-mail message to anyone, YAM transfers the
message by SMTP to your local SMTP server.  This computer forwards the
message to the recipient's computer, generally also by SMTP.

   Why does YAM not deal directly with the recipient's server?
Firstly, it would take quite a long time for your Amiga to get a
connection to one particular computer and then transmit the message.
Secondly, many computers are hard to find; it is much better to let the
mail server look for the address, instead of burdening your Amiga.
Thirdly, quite frequently the recipient's server will not be available
at the time you want to send the mail.  The SMTP server solves these
problems, holding back the message until the other computer is ready to
receive it.


Incoming mail
-------------

   If someone sends you email, the other computer transfers it using
the SMTP protocol as far as your POP server.  This stores the message
in a sort of mailbox, where it remains until YAM collects it.  When you
look for new mail, YAM downloads the message to your Amiga using POP3.

   Why doesn't YAM use SMTP for incoming mail?  SMTP works best if
both computers are ready to receive messages.  Unless you run YAM and
your Amiga 24 hours a day and seven days a week, SMTP would not be
particularly suitable for you.

@endnode

@node "MIME" "Basics - what is MIME?"
@next "PGP"
@prev "PROT"
@toc "MAIL"

Basics - what is MIME?
======================


   MIME stands for @{i}Multipurpose Internet Mail Extensions@{ui}.  MIME serves
two main purposes: it allows one mail application to tell another what
sort of data is contained in a message, and it also provides
standardised rules by which mail applications can encode data, so that
it can be sent through the Internet mail system.


MIME Encoding
-------------

   The Internet uses the SMTP protocol to move mail around.  SMTP is
limited to the US-ASCII character set.  This is a problem for people
who speak languages other than American English and so need accented
characters or non-American letters, or for people who want to use
special symbols like the bullet.  Even more difficult is the
transmission of binary files, as it is often the case with attachments.
MIME provides a way around this restriction by offering two
encodings: @{b}quoted-printable@{ub} and @{b}base64@{ub}.

   These encodings use US-ASCII character codes to represent any sort
of data you like, including special characters or even non-text data.
Quoted-printable is used for data that is mostly text, but has special
characters for very long lines.

   Quoted-printable looks just like regular text, except when a
special character is used -- the special character is replaced with
a "@{b}=@{ub}" (dash) and two more characters that represent the (hexadecimal)
character code of the special character.  Thus, a bullet in
quoted-printable looks like @{b}=95DA@{ub}.

   No line in quoted-printable is allowed to be more than 76 characters
long.  If your mail has some line longer than 76 characters, the
quoted-printable encoding will break your line in two, and put a "@{b}=@{ub}"
at the end of the first line, to notify the mail reader at the other
end that the two lines are really supposed to be one.

@{b}   Base64@{ub} encoding is another way to protect binary data from the
SMTP mail system.  However, Base64 makes no attempt to be readable,
and is more appropriate for non-text data.  It is equivalent to the
older UUencode, but more reliable in use.


Content type
------------

   The other important function of MIME is to allow mail programs to
exchange information about what kind of data is in a message (or part
of a message).  The primary mechanism used for this is the @{b}Content-Type:@{ub}
header.  The main content types are:


  text        readable text
  image       pictures and graphics
  audio       sound
  video       animations
  message     messages or parts of messages
  multipart   several different kinds of data in a single message


   The subtype gives additional information about the type of data:

  text/plain   plain text
  text/html    text in HTML format
  image/gif    image in GIF format
  etc.

   By looking at the @{b}Content-Type:@{ub} header, a mail program can select
the most suitable utility to display an attached file.

@endnode

@node "PGP" "Basics - encrypting with PGP"
@next "NETI"
@prev "MIME"
@toc "MAIL"

Basics - encrypting with PGP
============================


   In order to ensure that the e-mail cannot be read by anyone other
than the recipient, it is necessary to encrypt the transmission.  Is
this important?  Sometimes very much so!  It is not possible to say in
advance what route electronic mail will take through the Net and along
the way it is possible for someone to read your mail unauthorised,
admittedly with more trouble than one would normally bother to take.
In particular, encrypting e-mail is a wise precaution if you want to
send passwords, credit card numbers or some such over the Net.  Such
encrypted data is then often transmitted more safely than if sent by
normal letter post.  A simple, effective and widely used tool for this
sort of encryption is @{b}PGP@{ub}, short for @{b}Pretty Good Privacy@{ub}.

   PGP was developed by Phil Zimmermann and employs the @{i}public key @{ui}
method.  Using this PGP program, one can be sure that the message is
the one actually written by the sender, and that only the intended
recipient can read it.  The so called @{i}public keys @{ui}offer the highest
possible level of security.

   There are two kinds of key:

  - One is a private key, used on your computer and never revealed
    elsewhere.

  - The other sort is the public key.  You can make as many copies of
    this as you like, and send the copies to other users so that they
    can send you encrypted mail.

   You need both types of key, public and private, because they are
inherently connected together.  You can distribute your public key as
often as needed, but it will only work when matched up with its exact
counterpart.  Hence, both public and private keys are involved in
locking and (generally) unlocking information.

   PGP keys are used in two distinct ways:

   1. Another person can encrypt information using your public key and
      send the encrypted file to you, to decipher with your private key.

   2. You can encrypt information with your private key and send it
      safely over the Net.  Anyone in possession of your public key
      can read your communication.  The recipient can be sure that
      the communication is genuinely from you (your digital signature
      proves its authenticity) and that it has not been altered.


   PGP is obtainable as freeware and the International PGP homepage
is easy to find on the Internet at http://www.pgpi.org/


   Related topics:

 @{" Installing PGP 2.6.x " link "PGP0"}
 @{" Installing PGP 5.0i  " link "PGP1"}

@endnode

@node "PGP0" "Installing PGP 2.6.x"
@next "PGP1"
@prev "PGP1"
@toc "PGP"

Installing PGP 2.6.x
--------------------

   1. To begin with, download PGP2 from a reliable source.  For instance,
      you can use the International PGP homepage visiting

       http://www.pgpi.org/cgi/download.cgi?filename=PGPAmiga-2.6.3is.lha

      and then selecting the site which is closest to you.

   2. Install PGP in e.g. "Work:PGP/" and create your key pair entering
      "pgp -kg" in a shell window.  The PGP2 directory has the following
      structure:

       PGP2 (dir)
         bin (dir)
            pgp
            config.txt
            language.idx
            language.txt
            pubring.pgp
            randseed.bin
            secring.pgp

   3. Add an assign to your s:User-startup file to assign PGP: to the
      PGP2 directory, then set the environment variable "PGPPath" to
      PGP:bin in a permanent way.  For instance,

       1.> SetENV PGPPath SAVE Work:PGP/bin

   4. In Configuration/Security, set the "PGP's directory" option
      to the directory where the PGP executable may be found, e.g.
      "Work:PGP/bin/".

   5. If you want to be able to edit or read outgoing messages that have
      been encrypted already, switch the "Encrypt to self" option on.

   6. In "PGP:bin/config.txt" the following changes should be made:

@REMARK *** NOTE FOR TRANSLATORS ***
@REMARK Please specify the correct "Language = XX" parameter for
@REMARK your language, if it is officially supported by PGP

       Language = en
       EncryptToSelf = off
       PubRing = "PGP:bin/pubring.pgp"
       SecRing = "PGP:bin/secring.pgp"
       RandSeed = "PGP:bin/randseed.bin"

@endnode

@node "PGP1" "Installing PGP 5.0i"
@next "PGP0"
@prev "PGP0"
@toc "PGP"

Installing PGP 5.0i
-------------------

   1. To begin with, download PGP5 from a reliable source.  A good
      starting point is

       http://www.amigau.com/amigarealm/pgp5/pgp6.html

   2. Install PGP in e.g. "Work:PGP/" and create your key pair entering
      "pgpk -g" in a shell window.  The PGP5 directory has the following
      structure:

       PGP5 (dir)
         bin (dir)
            pgpe
            pgpk
            pgps
            pgpv
         keys50 (dir)
            pubring.pkr
            randseed.bin
            secring.skr
            language50.txt
            pgp.cfg
            randseed.bin

   (yes, there are two copies of randseed.bin!)

   3. Add an assign to your s:User-startup file to assign PGP: to the
      PGP5 directory, then set the environment variable "PGPPath" to
      PGP:bin in a permanent way.  For instance,

       1.> SetENV PGPPath SAVE Work:PGP/bin

   4. In Configuration/Security, set the "PGP's directory" option
      to the directory where the PGP executable may be found, e.g.
      "Work:PGP/bin/".

   5. If you want to be able to edit or read outgoing messages that have
      been encrypted already, switch the "Encrypt to self" option on.

   6. In "PGP:keys50/pgp.cfg" the following changes should be made:

@REMARK *** NOTE FOR TRANSLATORS ***
@REMARK Please specify the correct "Language = XX" parameter for
@REMARK your language, if it is officially supported by PGP

       Language = en
       EncryptToSelf = off
       PubRing = "PGP:keys50/pubring.pkr"
       SecRing = "PGP:keys50/secring.skr"
       RandSeed = "PGP:keys50/randseed.bin"

   7. Check the validity of the keys in your public keyring with "pgpk -e",
      then validate them with "pgpk -s <UserID>".  Bear in mind you can't
      send encrypted mail to anyone whose key hasn't been trusted.


IMPORTANT! BUG in PGP5
......................

   If a message is encrypted for more than one recipient (including you),
PGP doesn't set an error code as long as there is a valid key for at
least one of the recipients.

   For example, you try to encrypt a message for John and yourself;
there's no valid key for John, but there's one for you and PGP doesn't
tell YAM that encryption wasn't successful.  The resulting message can
be read by you, but not by John!

@endnode

@node "NETI" "Basics - e-mail netiquette"
@next "HEAD"
@prev "PGP"
@toc "MAIL"

Basics - e-mail netiquette
==========================


- Keep your messages short and to the point.

- Give the message a concise and meaningful @{b}Subject:@{ub} header, so that
  it can easily be found again.

- Put a signature at the end of the message.  This should contain
  your name and e-mail address and should not be longer than five
  lines.  Signatures often also give the postal address, telephone
  number, website and instructions about sending PGP messages.

- Only write in block capitals if you want to give particular
  emphasis to a point.  *Stars* are also used for emphasis (YAM
  interprets this by using bold type).  Remember, block capitals
  are generally taken as equivalent to SHOUTING.

- Set up YAM to use a line length of less than 80 characters and
  don't use any control characters.

- Don't use non-ASCII characters unless you are sure that the
  recipient's software interprets them correctly.

- It is regarded as extremely impolite to forward a private message
  to a mailing list without the permission of the original sender.

- Abbreviations and @{i}TLAs@{ui} (Three Letter Acronyms) can be useful
  provided that they don't make the message unintelligible.
  The following are often used:

            IMHO   (in my humble opinion)
            BTW    (by the way)
            FYI    (for your information)
            AFAIK  (as far as I know)
            ASAP   (as soon as possible)
            CU     (see you)

- Use the ;-) smiley (winky?) to denote a touch of irony which could
  otherwise easily be misinterpreted.

- Be tolerant of people's failings, e.g. in spelling, grammar, expression
  or familiarity with e-mail.

- If you join a mailing list, read the messages for a while to get a
  feel of the general style, what questions are asked and what is
  not suitable.

- Study the @{i}FAQs@{ui} (lists of Frequently Asked Questions).  It is
  annoying for the members of a group if the same questions are
  being asked repeatedly.

- If someone posts a message which is "off-topic", (i.e. it does not
  belong in the mailing list), reply privately and NOT in the list.

- If you quote another message, then cut all the bits which are not
  relevant to your answer.  No-one wants to read the same message
  three or four times, especially when all that is added is "Yes, me
  too".

- Resist the temptation to flame in the mailing list.  ("Flame" =
  write abusively, generally when provoked by idiocy.)  Remember that
  the list is public and meant for constructive discussion.  Do as
  you would be done by!

- If you are replying to a message coming from a mailing list, think
  carefully whether to send it direct to the sender or to the list,
  and check that the @{b}To:@{ub} address is correct.  It can be very
  irritating when a letter addressed to a particular person appears
  on the list, unintentionally.

- When replying to a message coming from a mailing list, it is usually
  a good idea to mention the person who wrote that message as part of
  your welcome phrase, to avoid confusion.

@endnode

@node "CO_W" "Configuration"
@next "WI_W"
@prev "MAIL"
@toc "Main"

Configuration
*************


   YAM has a huge number of options, which can be set up in the
configuration window.  The program options are divided into 15 sheets
which can be selected by clicking on the corresponding word in the left
part of the configuration window.  There are also three menus available.


 @{" First Steps    " link "CO00"}  - Essential information for YAM to work:
                      your e-mail address, mail server & timezone
 @{" TCP/IP         " link "CO01"}  - SMTP and POP3 settings for mail transfer
 @{" New Mail       " link "CO02"}  - Controlling the way mail is downloaded
 @{" Filters        " link "CO03"}  - Automated sorting and filing of messages
 @{" Spam           " link "CO15"}  - Setup of the spam filter
 @{" Read           " link "CO04"}  - Layout options
 @{" Write          " link "CO05"}  - Headers, stock phrases and editor settings
 @{" Reply          " link "CO06"}  - Options for quoting messages
 @{" Signature      " link "CO07"}  - Signatures... and taglines!
 @{" Lists          " link "CO08"}  - Columns, sizes, time unit, context menus
 @{" Security       " link "CO09"}  - Encrypting with @{" PGP " link "PGP"} and use of remailers
 @{" Start/End      " link "CO10"}  - Options for actions at start up and termination
 @{" MIME           " link "CO11"}  - @{" MIME " link "MIME"} viewers for attachments
 @{" Address book   " link "CO12"}  - Visible columns, personal data exchange
 @{" ARexx          " link "CO13"}  - Setting up your macros
 @{" Miscellaneous  " link "CO14"}  - Paths, AppIcon, save/delete, tracking & packing
 @{" Look & Feel    " link "CO16"}  - Change the Icon theme amongst others
 @{" Updates        " link "CO17"}  - Update settings

 @{" Hidden Options " link "CO_H"}  - You can't see them :-)
 @{" Menus          " link "CO_M"}  - The Project, Edit and Extras menus


   The same three buttons appear on each sheet:

@{b}Save@{ub}
     Use this to save all changes to the hard disk, so they will
     survive a reboot of the computer.

@{b}Use@{ub}
     With this the changes are temporary and apply only until YAM is
     closed.

@{b}Cancel@{ub}
     Discard any changes.

@endnode

@node "CO00" "Configuration - First steps"
@next "CO01"
@prev "CO_W"
@toc "CO_W"

Configuration - First steps
***************************


   This sheet contains some essential information needed for YAM to work.


---- Minimal configuration -----------------------------------------------

@{b}Full Name@{ub}
     Your real name and surname.  Please take care that this field is
     filled in correctly.  DO NOT use quotation marks in your name.

     Example:  John Doe


@{b}E-mail address@{ub}
     This is your e-mail address, consisting of your <username>\@<domain
     name>.

     Example:  jdoe\@example.com


@{b}POP3 server@{ub}
     The Internet address of your system's mail server.  This server,
     which normally is a computer of your ISP (Internet Service
     Provider), must be capable of working with the POP3 protocol.
     If you don't fill in this entry, YAM will use the address of
     the SMTP server.

     Example:  mail.example.com


@{b}Password@{ub}
     The password which is asked from you by your mail server.  This
     password is possibly but not necessarily identical to the password
     you use to log in on your ISP (e.g. using PPP), and is case
     sensitive.

     Example:  nguz56


---- Time zone -----------------------------------------------------------

@{b}Timezone@{ub}
     The time and date displayed by YAM in the message list is always
     converted to your local time.  This guarantees correct sorting of
     messages from all over the world sent out from different time
     zones.  The time zone is part of the message's date and specifies
     the difference between local time and Greenwich Mean Time (GMT).

     Examples:  GMT+01:00 (for Germany)
                GMT 00:00 (for the U.K.)
                GMT-05:00 (for U.S. EST e.g.  New York City)

     Normally YAM will get the time zone from your Locale settings, and
     this selector will be ghosted.


@{b}Add adjustment for daylight saving time@{ub}
     This option is to be activated during daylight saving time.
     By doing so, one hour will be added to the time zone value.

     YAM automatically changes to/from daylight saving time if
     a @{" AutoDST " link "TIP5"} tool like @{b}SetDST@{ub}, @{b}FACTS@{ub} or
     @{b}SummertimeGuard@{ub} is installed. This is indicated by ghosting
     this checkbox.

@endnode

@node "CO01" "Configuration - TCP/IP"
@next "CO02"
@prev "CO00"
@toc "CO_W"

Configuration - TCP/IP
**********************


   Here you can enter the information needed to actually send email,
as well as define additional POP3 accounts.


---- Send mail (SMTP) ----------------------------------------------------

@{b}Server@{ub}
     The Internet address of the system you're sending your mail to.
     This server, which usually is a computer of your ISP (Internet
     Service Provider), must be capable of processing the SMTP
     protocol.

     Example:  mail.example.com


@{b}Port@{ub}
     The port number of the SMTP service is 25 in most cases.  If it's
     different from that, enter the number here.


@{b}Domain@{ub}
     To able to send email, your Amiga has to identify itself to the
     SMTP server by giving its address (HELO command).  The SMTP server
     decides whether you are allowed to use it by checking this
     address.  Normally YAM identifies itself by sending the domain part
     of your e-mail address, which will work just fine in most cases;
     however, if you encounter some trouble and get an error message
     from your SMTP server when trying to send mail, you may need to
     edit your domain setting, e.g. by inserting a name for your
     computer.

     Example:  mYAMiga.example.com


@{b}SMTP server allows 8bit@{ub}
     Originally only the US-ASCII character set was allowed for use in
     e-mail, which meant that users were forced to do without modified
     vowels (e.g., they had to use 'ae' instead of 'ä').  The reason for
     that was that many servers only processed the first 7 bits and
     simply cut off the 8th bit, crippling the e-mail while doing so.
     This problem was solved by introducing the MIME quoted-printable
     standard, which converts all 'unauthorized' characters to 7 bit
     before transfer and reconverts them to the original characters on
     delivery.  Modern mail servers don't have problems with
     non-US-ASCII characters any more, so messages do not necessarily
     have to be converted.  If you are absolutely sure that your server
     supports 8 bit transfers, you can switch this option on and save a
     few bits when transferring.  The best way to find out if your mail
     server supports this is to write a message to yourself containing
     modified vowels and see what happens.


@{b}Use SMTP AUTH@{ub}
     Enable this if you want to use SMTP Authentication, whereby YAM
     will request your mail server to use an extra authentication layer
     as documented in RFC 2554.  You will need to fill in another couple
     of UserID/Password fields in this case.

     If your ESMTP server does not support SMTP AUTH, you will receive
     an error message when trying to send email.  Ask your ISP if in
     doubt.


@{b}Use SMTP TLSv1/SSLv3@{ub}
     Enable this if your SMTP server supports TLSv1/SSLv3 secure
     connections.  If enabled, YAM will connect via the AmiSSL library
     with the SMTP server and encrypts every transfer.


---- Receive mail (POP3) -------------------------------------------------

   Apart from the primary POP3 server already defined in @{" First steps " link "CO00"},
you can set upto 15 extra POP3 accounts here; the names appear in the
list on the left and clicking on a name brings up the relevant details
on the right.  Note that these accounts can be for the same user on a
different server, or a different user on the same server.  Either way,
you can check for new mail with a single mouse click.  Click on [New] to
insert the data required for a new e-mail account.  With [Delete] you
can (obviously) delete accounts.


@{b}POP3 server@{ub}
     The Internet address of the system you wish to fetch mail from.
     This server, which will be a computer of your ISP (Internet
     Service Provider) in most cases, must be capable of processing the
     POP3 protocol.

     Example:  pop.example.com


@{b}Port@{ub}
     The port number of a POP3 server is usually 110.  If your server
     uses a different port, enter that number here.

     Example:  109


@{b}User ID@{ub}
     Insert the User ID for the POP3 server here.  In most cases this will
     be identical to the username in your e-mail address.  However, there
     are exceptions, so check the instructions from your ISP (YAM then
     constructs the full account name in the form <User ID>\@<server>).

     Example:  jdoe


@{b}Password@{ub}
     The password which has to be sent to the mail server at login time.
     You can leave this field empty for security reasons -- if you do,
     the password will be asked to you whenever YAM checks for new mail.
     Also, remember the password is case sensitive.

     Example:  nguz56


@{b}Active@{ub}
     Switch this option on to have the selected POP3 account checked for
     new mail whenever you use the @{b}Get new mail@{ub} button in the toolbar,
     or the equivalent item in the "Folder" menu.  If you don't want
     this email account to be checked automatically, switch this option
     off and use the menu item @{b}Folder/Check single account@{ub} from the
     main window instead.


@{b}Use POP3 TLSv1/SSLv3@{ub}
     Activate this option to use SSL based encryption under the TLS
     protocol as described in RFC 2595.  This adds extra security to
     prevent the typical eavesdropping and hijacking attacks which POP
     is commonly subject to, and will use port 995 instead of the usual
     110.

     The @{b}with STLS@{ub} option will force the use of the POP3 @{i}STARTTLS @{ui}
     extension, adding another layer of security to the communication,
     using again port 110.

     If your POP3 server doesn't support any of this, you will receive
     an error message when checking for new mail.  Also, AmiSSL is
     required.


@{b}Login using APOP@{ub}
     Normally the User ID and the password are transmitted as plain text
     when connecting to a POP3 server.  Under certain circumstances,
     this could be a security risk, and for this reason modern POP3
     servers support the APOP authentication, which transmits the data
     encrypted with a key which is delivered by the server.  If your
     POP3 server does not support APOP you'll receive an error message
     when checking for new mail; in that case, switch this option off.


@{b}Delete mail on server@{ub}
     If this option is activated, new mail will be deleted after
     downloading it from the mail server.  The messages will be deleted
     only after they have been successfully saved to your computer.
     If the POP3 account is used by several people, or if you'd like
     to access your account again later from another computer, this
     option can be deactivated.


@endnode

@node "CO02" "Configuration - New mail"
@next "CO03"
@prev "CO01"
@toc "CO_W"

Configuration - New mail
************************


---- Download ------------------------------------------------------------

@{b}Pre-selection@{ub}
     After establishing a link with the POP3 server, a @{" preselection window " link "TR_W"}
     may open showing a list of all new mail in the POP3 mailbox.  This
     allows you to decide whether to download, delete or leave a
     message on the server, according to its size, topic or sender.
     For pre-selection to work properly, the server must support
     the TOP command (most of them do).


      never:              pre-selection is deactivated
      large messages:     only messages bigger than a size defined by you will
                          be displayed in pre-selection
      always:             every message will be displayed in pre-selection
      always, only sizes: all messages will be displayed but only their sizes
                          will be shown.  The advantage of this method is that
                          it is pretty fast.


@{b}Size limit@{ub}
     If pre-selection is activated, messages which exceed the size
     given here will be highlighted.  This way you can avoid downloading
     messages with huge attachments.  The size is given in kilobytes.
     If you don't want to use any limit, just insert '0'.

     In everyday use, the settings 'pre-selection = large messages' and
     'size limit=100 kB' have proved to be advantageous.  With these
     settings, the pre-selection window will only appear if at least
     one of the new messages exceeds 100 kilobytes in size.


@{b}Transfer window@{ub}
     Here you can decide if you want to see the @{" transfer window " link "TR_W"} while
     receiving or sending mail.  With @{b}automatic@{ub} it only opens if you
     manually initialize the transfer, staying closed while YAM
     automatically checks for new mail.


@{b}Avoid duplicates@{ub}
     If you choose not to have YAM delete the mail on the server after
     downloading, it will be downloaded again next time YAM gets your
     mail, so every message will appear twice in your mail folder.  To
     prevent this, switch the @{b}Avoid duplicates@{ub} option on -- as long as
     this option is activated, YAM will keep track of all your
     downloaded messages in the @{i}.uidl@{ui} file and use special commands of
     the POP3 server to avoid downloading the same message twice.
     If the POP3 server supports these UIDL commands, this check
     will be done rather quickly.  If the server doesn't support these
     commands, YAM will try to read the Message-ID using the TOP command
     instead of the UIDL commands.  In case the mail server doesn't
     support any of these commands, this option must be turned off.


@{b}Update message status@{ub}
     If this option is activated, new messages in the 'Incoming' folder
     will be marked as 'unread' before downloading new mail.  This way
     you can instantly recognize the new mail that was downloaded the
     last time you've fetched mail.


---- Automatic operation -------------------------------------------------

@{b}Check for new mail every [xx] minutes@{ub}
     Here you can specify a time interval after which YAM will
     automatically recheck your mail server for new mail.  To deactivate
     this option, simply select zero.

     Example:  15 minutes


@{b}Download large messages@{ub}
     Whenever new mail is downloaded automatically (every x minutes or
     using ARexx), the selection window won't pop up since the user is
     likely to be working with another program at the time, or not in
     front of the computer at all.  Mails exceeding the size limit won't
     be downloaded and will remain on the server if this option is not
     activated.


---- Notification --------------------------------------------------------

@{b}Requester@{ub}
     Once YAM has downloaded new mail, it will display a requester
     showing the number of new and deleted messages.


@{b}Sound@{ub}
     Once YAM has downloaded new mail, it will play a sound file.  The
     datatypes library is used for playing, so the sound file can be of
     any format (like AIFF or WAVE), as long as you have installed the
     appropriate datatypes.  Click the small arrow (PLAY symbol) to
     test the sound.

     Example:  Data:Audio/Newmail.snd


@{b}Command@{ub}
     This is a program to be executed when new mail arrives.  Insert the
     command as you'd do at a command line interface.  If it is an Arexx
     script, you have to put the 'RX' command in front of the name of
     the script.

     Example:  RX PROGDIR:rexx/Newmail.YAM

@endnode

@node "CO03" "Configuration - Filters"
@next "CO15"
@prev "CO02"
@toc "CO_W"

Configuration - Filters
***********************


   The purpose of a mail filter is to process mail according to criteria
defined by the user.  Whenever a mail matches a specified pattern, it can
trigger certain actions.  Applications for the use of filters include

- automatically moving mail from a mailing list to a specified folder

- automatic processing of incoming inquiries by sending pre-defined
  answers

- automatic deletion of unwanted spam (advertising by e-mail, a real
  pest nowadays)

- automatic re-directing of mails to another recipient.

   You can define theoretically an unlimited number of filters.
The list on the left shows the names of all the filters defined so far.
Click on a name to bring up its details on the right, spread across
three sheets -- @{b}Options@{ub}, @{b}Comparison@{ub} and @{b}Action@{ub}.
Click on [New] to create a new filter or use [Delete] to delete one.
Filters are executed in top-to-bottom order, therefore you should place
filters that delete or move messages at the bottom of the list.


---- Options sheet -------------------------------------------------------

@{b}Name@{ub}
     The filter's name is merely for recognition and not of any other
     use.


@{b}Remote filter@{ub}
     With a remote filter, new email can be checked on the POP3 server
     without being downloaded completely.  The POP3 server must support
     the TOP command to be able to process this kind of filter.

     In contrast to 'normal' filters, only the contents of the e-mail
     headers can be searched for certain patterns.  For obvious reasons,
     functions like forwarding or moving e-mails cannot be used with
     remote filters.  If remote filters are activated they might slow
     down downloading e-mail, but they are handy as a protection
     against spam or 'mailbombs'.


@{b}Apply to new mail@{ub}
     Activate this option to have all new mail processed by this filter.
     Processing will start automatically after receiving new mail.


@{b}Apply to sent mail@{ub}
     Activate this option to have all sent mail processed by this
     filter.  Processing will be initiated automatically after sending
     mail.


@{b}Apply on request@{ub}
     If this option is activated, the filtering process will be started
     by clicking on the @{b}Filter@{ub} button in the main window or by choosing
     'Filter' from the 'Folder' menu.  This way you can also process old
     messages which do not necessarily have to be in the Incoming
     folder.


---- Comparison sheet ----------------------------------------------------

@{b}Search in@{ub}
     Here you can define what part of the e-mail should be scanned for
     the search pattern.  If you want a field of the message header to
     be searched, you can choose one from the list which appears when
     clicking on the cycle gadget, or select 'Other field' and insert
     the name of the header field into the text field on the right side
     of the cycle gadget.  If 'Message body' is selected, the whole
     message -except for the headers- will be searched.  Please note
     that this type of full text search may take quite a long time when
     big mails are processed (YAM will have to decode mails in MIME
     format).

     Example:  Other field:  X-Mailer


@{b}Comparison@{ub}
     The instruction comprises the comparison operator and the search
     pattern.

     YAM supports the following comparison operators:

      =   the text which is compared must match the search pattern
      <   the text must be "less" than the search pattern
      >   the text must be "greater than" the search pattern
      <>  the text must be different from the search pattern
      IN  the text must match pattern contained in the file which is
          specified in the text field to the right side of the comparison
          cycle gadget.  Instead of a search pattern itself, the name of a
          file has to be inserted here, containing one or several lines
          of search patterns.  In this way it is possible to create a
          so-called 'Killfile' containing a list of e-mail addresses.
          Click on the page icon to edit the file.

     Note that the comparison operators '<' and '>' work differently
     according to the type of field.  YAM knows that a message size or
     date is numeric and sorts these in numerical order, but for fields
     such as "Subject:", alphanumeric order is used as in a telephone
     directory, so James < Jim and 12 < 2.

     The search pattern may contain @{" AmigaDOS wildcards " link "DOSW"} such as @{b}?@{ub}, @{b}#?@{ub},
     @{b}(a|b)@{ub} or @{b}[abc]@{ub}.  Please note that the search pattern @{b}[YAM]#?@{ub} will
     filter all messages beginning with Y, A or M.  For filtering mails
     coming from a mailing list (for example, a mailing list related to
     YAM), you'd better use the search pattern @{b}#?YAM#?@{ub} or have the
     filter compare the @{b}Reply-To:@{ub} field with the address of the
     mailing list.

     Example:  = YAM 1.3.#?


@{b}Address/Name@{ub}
     If you make the filter search a header field containing an e-mail
     address, you can specify here whether the search pattern should be
     processed on the actual address (e.g. @{b}jdoe\@example.com@{ub}) or the
     author's name (e.g. 'John Doe').


@{b}Case sensitive@{ub}
     Activate this option if you want the filtering process to
     distinguish between normal and capital letters.


@{b}Substring search@{ub}
     If the search pattern consists of only a part of the header field
     which is to be searched through, you must activate this option -
     YAM will then complete the search pattern with #? internally.

     It is possible to combine two search criteria.  The cycle gadget
     lets you select how this is to be done:

      none            don't use a second criterion
      and             both criteria must be satisfied
      or              at least one of the two criteria must be met
      exclusive or    either one or the other of the two criteria must
                      apply, but not both


---- Action sheet --------------------------------------------------------

@{b}Bounce@{ub}
     Activate this option to have mail matching the search criteria
     bounced to another recipient -- for instance, you might use this
     to automatically resend certain email to your mailbox at work.

     The new recipient's e-mail address must be inserted into the text
     field next to the option.

     Example:  jdoe\@example.net


@{b}Forward@{ub}
     Activate this option when you want e-mail matching the search
     criteria to be forwarded to another person.  The new recipient's
     e-mail address must be inserted into the text field next to the
     option.


@{b}Reply@{ub}
     If this option is activated, YAM will send an automatic reply
     to any mail matching the search pattern.  Enter the filename
     containing the auto-answer text into the text field next to this
     option.

     Example:  PROGDIR:Auto-Texts/Answer1.txt


@{b}Execute@{ub}
     If this option is activated, an external program will be executed
     whenever an email matches the search criterion.  YAM will send
     the path of the e-mail to the external program as a starting
     parameter.  Insert the command line into the text field next to
     this option.

     Please note that if you want an ARexx script to be executed, you
     will have to explicitely put the 'RX' command first.

     Example:  rx PROGDIR:Rexx/Subscribe.rexx


@{b}Play sound@{ub}
     Activate this option to have a sound played whenever a message
     matches the search pattern.  The sound file name is to be inserted
     into the text field next to this option.  YAM uses the datatypes
     library for playing the sound.  Click the small arrow (PLAY
     symbol) to test the sound.

     Example:  Data:Audio/Ihatespam.wav


@{b}Move@{ub}
     If you activate this option, YAM will move any email matching the
     search pattern to another folder.  You can select the folder with
     the pop-up button.


@{b}Delete@{ub}
     If this option is activated, all messages matching the search
     pattern will be deleted.  (You probably guessed that... ;) )


@{b}Don't download@{ub}
     If this option is activated, any message matching the search
     pattern will not be downloaded from the mail server.  You can use
     a remote filter together with this option if several people share
     the same POP3 account.

@endnode

@node "CO15" "Configuration - Spam"
@next "CO04"
@prev "CO03"
@toc "CO_W"

Configuration - Spam
********************


@{b}Activate spam filter@{ub}
     Activates the spam filter, believe it or not :)

     @{b}Reset Spam training data@{ub}
      Resets the Spam training data.
      Should only be necessary in rare circumstances.

@{b}Check new mail for spam content@{ub}
     Automatically checks new mail for spam content.


@{b}Addressbook whitelisted@{ub}
     If a mail has an From: address that exist in your addressbook,
     it will never be considered as spam.


@{b}Mark mail as spam when moved to Spam folder@{ub}
     Any mail that is manually moved to the Spam folder are
     automatically marked as spam.


@{b}Mark new spam as read@{ub}
     This option will automatically mark new spam mails as read.


@{b}Move 'Not Spam' back to 'Incoming'@{ub}
     Will move mails that has been wrongfully detected as spam
     or mails that have manually been marked as 'Not Spam' back
     to 'Incoming' folder.


@{b}Apply filters@{ub}
     Applies all your defined filters to mail that is moved back
     to the 'Incoming' folder.

@endnode

@node "CO04" "Configuration - Read"
@next "CO05"
@prev "CO15"
@toc "CO_W"

Configuration - Read
********************


---- Message header layout -----------------------------------------------

@{b}Header@{ub}
     If 'full' is selected, all the headers will be displayed.  Select
     'none' if you don't want to see any header.  When you switch to
     'selected', you can specify yourself which header fields should be
     visible in the Read window.  For specifying the fields you can use
     any @{" AmigaDOS pattern " link "DOSW"}.  The FROM, TO, DATE and SUBJECT fields are
     displayed by default.  The header layout can also be changed
     (temporarily) in the Read window itself.

     Example:  (From|Subject|Date|X-Mailer)


@{b}Sender info@{ub}
     If a mail's sender is found in YAM's address book, YAM can display
     additional information in the header part of the Read window.
     If 'data only' is selected, YAM will show some information such as
     the name, date of birth, snail mail address, description, etc. as
     found in the address book for this entry.  Select 'data and image'
     to make YAM display a picture of the sender (of course there's got
     to be one in the address book ;)) in addition to the other data.


@{b}Wrap headers@{ub}
     Choose whether to show long headers on one line or to break them
     on two or more.  In the first case, you will need to use the
     horizontal scrollbar in order to see all the information.


---- Message body layout -------------------------------------------------

@{b}Separate sig.@{ub}
     It has become a custom to separate the signature from the text of
     an e-mail using two dashes and a space.  If you don't like this
     kind of separation, you can define another here.  Apart from the
     setting 'two dashes' you can select between 'separator bar',
     'blank line' or even 'no signature' to have no signature at all.


@{b}Colored text@{ub}
     Text passages embedded in # characters will be highlighted by YAM
     in a special color both in the internal editor and in the Read
     window.  Here you can define the color used for that purpose.


@{b}Old quotes@{ub}
     Select here the color used for the several levels of quoting.


@{b}Use fixed font@{ub}
     It often makes more sense to use a non-proportional font to read
     messages, since the layout of any tables will be distorted when
     using proportional fonts.  Don't forget to specify the font of your
     choice in the 'TextEditor' module of YAM's MUI settings, under
     'Fonts/fixed'.


@{b}Display all texts@{ub}
     If this option is activated and the message contains attachments,
     not only the actual body of the message will be displayed, but
     also those attachments themselves, as long as they are of the
     'text' type.


@{b}Text styles@{ub}
     YAM uses the characters '_', '/', '*' and '#' to indicate
     underlined, italic, bold and colored text.  For certain special
     documents, as it is the case with source code, this can make
     things difficult because some characters are suppressed.  So you
     have the option of switching the rendering of text styles on or
     off.


---- Other options -------------------------------------------------------


@{b}Multiple windows@{ub}
     With this option selected, each message which you choose to read
     will open its own Read window.  Upto four of such windows can be
     opened at the same time.

@endnode

@node "CO05" "Configuration - Write"
@next "CO06"
@prev "CO04"
@toc "CO_W"

Configuration - Write
*********************


---- Message Header ------------------------------------------------------

@{b}Reply to@{ub}
     Normally this field should remain empty.  The default Reply-To
     address is your e-mail address.  If you want to use a different
     address, then (AND ONLY THEN!!) you should insert that address
     here.  Alternatively, you can use the pop-up button to open the
     address book window, and then drag an entry from there into this
     field.

     Example:  jdoe\@example.com


@{b}Organization@{ub}
     If you want the name of your organization, school, club or
     whatever to appear in a header of your message, insert it here.

     Example:  Doe Donut Production Ltd.


@{b}Extra headers@{ub}
     If for some reason you need to add one or more special extra lines
     to the headers of your mail, you can insert these header lines
     here.  If you would like to insert several lines, separate them
     by inserting '\\n'.

     PLEASE DON'T use this feature unless you have enough knowledge of
     the structure of Internet email.

     Example:  Content-Language: uk\\nKeywords: Pattern, YAM, Internet


---- Message body --------------------------------------------------------

@{b}Welcome phrase@{ub}
     YAM will insert this text at the beginning of every new message
     you write (except for answers and forwarded messages).  You can
     define a line break by inserting '\\n'.

     Example:  Hello,\\n


@{b}Closing phrase@{ub}
     This text will be inserted at the end of every new message you
     write, just before the signature separator.  You can insert a line
     break with '\\n'.

     Example:  Kind regards\\n\\nJohn Doe


@{b}Warn when there's an empty subject line@{ub}
     Activate this option to let YAM warn you any time you try to send
     an email with an empty subject line.  This may be the case when
     sending email to mailing list managers and other automated
     services, but it is generally considered as bad taste to use an
     empty subject line when posting to a mailing list.  If you seldom
     use empty subject lines or you use to forget to fill in this
     field, you might want to use this option.


---- Editor --------------------------------------------------------------

@{b}Word wrap@{ub}
     When you save a newly written message, it will be formatted to
     make sure that no line has more characters than the value
     specified here.  You can also decide whether YAM will insert line
     breaks @{b}as you type@{ub} or if this should be postponed until you send
     the message.  In the first case, the internal editor will insert
     line break codes while you're typing the message.  This way you
     avoid unwanted surprises when the text is formatted later on
     saving the message, but on the other hand, any subsequent insertion
     or deletion of text might be a little less comfortable.

     Example:  76


@{b}External editor@{ub}
     If you do not like the internal editor and wish to use another one
     (thereby forgoing automatic spell checking, text styles and
     glossary), you can insert its name here.  Remember to insert the
     full path for the editor, and maybe an appropriate qualifier such
     as '-sticky' or '-keepio'.

     Examples:  C:Ed
                C:CED -keepio


@{b}Launch immediately@{ub}
     Activate this option if you would like the external editor to
     be launched automatically as soon as you start creating a new
     message.  By doing so you won't have to click on the [Editor]
     button in the Write window.


@{b}Email cache@{ub}
     YAM can cache on disk a certain number of the most recent
     recipients used when writing a new email, if those recipients
     aren't already in your address book.  This may improve the
     performance of the automatic name completer, especially if your
     address book is rather brief and you often find yourself having
     to type your recipient's name and address.

     If the hit ratio of the email cache is very low in your everyday
     use, you might want to turn it off completely by selecting zero
     mails.


@endnode

@node "CO06" "Configuration - Reply"
@next "CO07"
@prev "CO05"
@toc "CO_W"

Configuration - Reply
*********************


---- Forwarding ----------------------------------------------------------

@{b}Initial phrase@{ub}
     This text will be added at the beginning of the original text of
     any message you forward.  Click the pop-up button to select from a
     list of variables which can be inserted (for example %r stands for
     the name of the recipient, %s stands for the subject, etc.).  When
     the text is inserted into the message, YAM replaces the variables
     with their respective values, taken from the forwarded message.

     Example:  *** Forwarded message, originally by %n on %d: ***\\n


@{b}Terminating phrase@{ub}
     This text will be inserted at the end of any forwarded message,
     but before the greetings phrase.  Click the pop-up button to select
     a variable from the list (for subject, date, sender, etc.).

     Example:  *** End of forwarded message ***\\n


---- Replying ------------------------------------------------------------

@{b}Default reply phrase@{ub}
     When you reply to a message, YAM can automatically insert three
     different phrases in the new message: greetings (Open), an
     introduction to the quoted message (Intro) and a closing phrase
     (Close).  Use the cycle gadget to select one of these phrases and
     enter it in the field on the right.  Click the pop-up button to
     select a variable from the list (for subject, date, sender, etc.).

     Example:  [Open]    Hello %f,\\n
               [Intro]   On %d, you wrote:\\n
               [Close]   Kind regards


@{b}Alternative reply phrase@{ub}
     Communicating via Internet often means writing in another language.
     For that reason, YAM is capable of using an alternative reply
     phrase set, which will be used automatically whenever the recipient's
     address matches an user defined pattern.  This way you can, for
     instance, use a German version of the reply phrase set for addresses
     in Germany, Austria and Switzerland, while using the English version
     for all other countries.

     Example:  [Open]    Hallo %f,\\n
               [Intro]   Am %d schriebst Du:\\n
               [Close]   Mit freundlichem Gruss


@{b}Use with these domains@{ub}
     Whenever the recipient's address corresponds with this
     @{" AmigaDOS pattern " link "DOSW"}, the alternative reply phrases will be used.

     Example:  #?.(de|ch|at) (Addresses of countries with German mother tongue)


@{b}Mailing list reply phrase@{ub}
     To answer a message belonging to a mailing list, another set of
     phrases is available -- they will be used if the message that is
     being answered is stored in a folder for which mailing list
     support has been activated (see @{" folder configuration " link "FO_W"}).

     Example:  [Open]    Hi!\\n
               [Intro]   On %d, %n wrote:\\n
               [Close]   Kind regards


@{b}Quote message using@{ub}
     The character(s) specified in the editing field plus a space will
     be put in front of each line of the original message.  Click the
     pop-up button to select a variable for the sender's initials.

     Example:  %i>


@{b}Quote external using@{ub}
     The character(s) specified in the editing field plus a space will
     be put in front of each line quoted from an external source, not
     necessarily related to e-mail.  This is used when inserting or
     pasting text using the "alternate quoted" method.

     Example:  |


@{b}Quote empty lines@{ub}
     Usually, the quotation character is inserted at the beginning of
     empty lines contained in the quoted message.  If for some reason
     you don't like this, just deactivate this option.


@{b}Verify recipient address@{ub}
     If this option is enabled, YAM will check if the sender and the
     return address are the same -- if the "From:" and the "Reply-To:"
     headers of the message are different, you will be asked to select
     whom to reply to.  This way it is fairly easy to reply privately
     to a message from a mailing list.


@{b}Strip signature@{ub}
     Activate this option to avoid quoting the signature (since you'll
     delete the signature anyway in most cases).  This option will work
     only when the signature in the quoted message is separated from
     the actual message by the standard '-- ' separator, that is, two
     dashes AND a space.

@endnode

@node "CO07" "Configuration - Signature"
@next "CO08"
@prev "CO06"
@toc "CO_W"

Configuration - Signature
*************************


   You can define and use one standard and upto two alternative
signatures within YAM (e.g. one signature for private email and another
one for business).  Clicking on the cycle button in the upper left
corner of the window you can display and edit the signatures in the
small text editor window below.


@{b}Use signature@{ub}
     If this option is activated, a signature will be inserted at the
     end of each message you write.


@{b}Edit in external editor@{ub}
     Click this button to open the external editor you have defined in
     @{b}Configuration/Write/External editor@{ub} to edit the signature currently
     selected.


@{b}Insert random tagline@{ub}
     Click this button to insert the '%t' variable at the actual cursor
     position in the editor.  When processing a new message, YAM will
     replace this variable with a random tagline from the taglines file.


@{b}Insert ENV:Signature@{ub}
     Click this button to insert the variable '%e' at the current cursor
     position in the editor.  YAM will replace this variable with the
     contents of the 'SIGNATURE' environment variable while creating a
     new message.  This way it is possible to have random values
     automatically inserted into the signature, like the date, the
     actual temperature, the time, your weight or whatever...


@{b}Tagline file@{ub}
     The tagline database contains taglines, little poems or other very
     important and witty pieces of wisdom which can be selected
     randomly and be inserted into the signature.  There are collections
     of thousands of these taglines on Aminet.

     Example:  PROGDIR:.taglines


@{b}Tagline separator@{ub}
     Since a tagline can consist of several actual lines, the single
     entries in the tagline file have to be separated from each other.
     Insert the string that is used for separating one tagline from
     another in your tagline file into this text field.

     Example:  %%

@endnode

@node "CO08" "Configuration - Lists"
@next "CO09"
@prev "CO07"
@toc "CO_W"

Configuration - Lists
*********************


---- Field settings ------------------------------------------------------

@{b}Folder list, Message list@{ub}
     Select the items you want to see in these lists.

     As of YAM 2.4, you can also have a context menu for both the folder
     and message lists.

---- General settings ----------------------------------------------------

@{b}Use fixed font@{ub}
     It often makes more sense to use a non-proportional font since the
     display might become distorted with proportional fonts.  Don't
     forget to specify the font of your choice in the 'TextEditor'
     module of YAM's MUI settings, under 'Fonts/fixed'.


@{b}Time in Swatch Beats@{ub}
     Enable this option to display the time in Swatch Beats instead of
     the hours:minutes format.  This revolutionary unit of time,
     invented by Swatch, a Swiss watch manufacturer, divides the day in
     1000 beats and abolishes the different time zones.  The meridian is
     Biel, a town located in Switzerland.


@{b}Size format@{ub}
     This setting allows you to select the exact format of the sizes
     given in the message and folder lists, as well as the preselection
     window.


---- Status bar ----------------------------------------------------------

@{b}Position@{ub}
     Allows you to select the position of the status bar, or even
     disable it completely.

     Example:  Top


@{b}Label@{ub}
     The contents of the status bar.  Use the pop-up button at the
     right to select a variable for new, unread, etc. messages.

     Example:  - Total: %t New: %n Unread: %u

@endnode

@node "CO09" "Configuration - Security"
@next "CO10"
@prev "CO08"
@toc "CO_W"

Configuration - Security
************************


---- PGP -----------------------------------------------------------------

@{b}PGP's directory@{ub}
     The famous (some people and authorities might even say notorious)
     programme @{b}PGP@{ub} (Pretty Good Privacy) by Philip Zimmermann is used
     for encrypting, decrypting and digitally 'signing' messages.
     Please install PGP as described in PGP's manual and insert the
     full directory path of the PGP executable here.  YAM recognizes
     automatically if you're using version 2.6 or 5.x.

     Example:  Work:Programs/PGP/bin/


@{b}Your PGP key ID@{ub}
     If you want to sign messages with PGP, YAM needs the shortcut of
     your secret PGP key.  Click on the pop-up button and select your
     key.  If YAM cannot find your PGP key, then either PGP is not
     installed correctly on your system, or you've specified the wrong
     path for the PGP executable.

     Example:  0x70804A7B


@{b}Encrypt to self@{ub}
     Encrypting messages for a certain recipient has one disadvantage:
     you cannot read or edit the message any more after encryption.
     Activate this option to be able to read the message after
     encryption.  YAM will enable you to do so by simply encrypting the
     mail using the recipient's key as well as your own.


---- Anonymous mail ------------------------------------------------------

@{b}Re-Mailer@{ub}
     E-mail address of the re-mailing service you'd like to use.  When
     you send e-mail anonymously by using a so called 're-mailer', this
     re-mailer will erase any information from the message headers that
     could be used for identifying the original sender, and then forward
     the message to the final recipient.  In addition, YAM will
     automatically remove any personal info from the message, including
     headers and signature.

     You can find addresses of re-mailing services by having a (www-)
     search engine look up the Internet for 'remailer'.

     Example:  Remailer <remailer\@example.com>


@{b}Header field@{ub}
     The address of the actual recipient of the message is transmitted
     to the re-mailing service by being contained in a header field or
     in the first line of the message.  In the latter case, simply
     create a blank line at the beginning of the remailer header line
     by inserting '\\n' -- the '%s' variable will be replaced by the
     recipient's address.  Please refer to the documentation of the
     selected remailing service for information on the exact template
     of the header line.

     Example:  Anon-to: %s


---- Log files -----------------------------------------------------------

@{b}Log file path@{ub}
     YAM will save the log files to the path specified here.  The
     format of log files is explained in the @{" Reference " link "RFLO"} chapter.


@{b}Split log file@{ub}
     Switch this option on if you want YAM to create a new log file each
     month.  To distinguish the different files that will be created,
     YAM includes the date in the log file name, e.g. YAM-Jan98.log.
     If you'd like one big single log file, just leave this option
     deactivated.


@{b}Mode@{ub}
     If you are not interested in having log files at all, select
     'none'.  Select 'normal' to have only the important events like
     receiving/sending mail recorded.  In 'verbose' mode, YAM will log
     every transferred e-mail in detail.


@{b}Log all events@{ub}
     Deactivate this option if you're only interested in logging events
     having to do with the mail transfer (sending/receiving).

@endnode

@node "CO10" "Configuration - Start/Quit"
@next "CO11"
@prev "CO09"
@toc "CO_W"

Configuration - Start/Quit
**************************


---- On program startup --------------------------------------------------

@{b}Load all folders@{ub}
     If you have many voluminous archive folders, you can increase
     YAM's starting speed by deactivating this option.  Furthermore,
     deactivating this option will save memory, because only the index
     files of the system folders will be loaded on startup -- the index
     files of the user-defined folders will be loaded only when they
     are needed.


@{b}Mark new mail as unread@{ub}
     Switch this option on to mark all new messages as "unread" on
     startup.


@{b}Delete old mail@{ub}
     In the case that you have defined a maximum age for specific
     folders, YAM will delete all messages exceeding this age before
     actually quitting if this option is activated.


@{b}Remove deleted mail@{ub}
     Switch this on to make YAM empty the 'Deleted' folder on startup.


@{b}Check birthdates@{ub}
     Switch this option on to make YAM search the address book on
     startup for people whose birthday is today.  This way you can
     send your congratulations at once, in case it's the birthday
     of one of your pals (or maybe even business partners).  When
     run from a shell, the NOCHECK switch prevents this check from
     being done.


@{b}Send mail in outgoing queue@{ub}
     If this option is activated, YAM will search the Outgoing folder
     for messages to send on startup and ask you if you'd like to send
     them.  Please note that this will work only if a TCP/IP stack has
     been loaded previously.  You can temporarily stop YAM from doing
     so by starting YAM from a shell with the NOCHECK switch.


@{b}Download new mail@{ub}
     If this option is activated (and there's already a TCP/IP stack
     running on your system), YAM will check the mail server for new
     messages on startup.  You can temporarily stop YAM from doing so
     by starting YAM from a shell with the NOCHECK switch.


---- On program termination ----------------------------------------------

@{b}Send mail in outgoing queue@{ub}
     Activate this option to make YAM look for ready to send messages
     in the Outgoing folder before actually ending the program.  If it's
     activated, YAM will ask you if you'd like to send those messages
     before quitting.  (Of course it will do so only if there are
     actually any messages in the Outgoing folder.)


@{b}Delete old mail@{ub}
     In the case that you have defined a maximum age for specific
     folders, YAM will delete all messages exceeding this age before
     actually quitting if this option is activated.


@{b}Remove deleted mail@{ub}
     Switch this on to make YAM empty the 'Deleted' folder when closing
     down.

@endnode

@node "CO11" "Configuration - MIME"
@next "CO12"
@prev "CO10"
@toc "CO_W"

Configuration - MIME
********************


---- MIME viewers --------------------------------------------------------

   The program selected by default to display attachments is @{b}MultiView@{ub}.
Messages in @{" MIME format " link "MIME"} contain a field called @{i}Content-Type @{ui}in which
the type of the encoded file is specified.  You can define a different
program to process every single type of file.  This is important for
users who do not want to use MultiView for processing images and sound
files, or for processing file types not yet supported by datatypes.
Click @{b}New@{ub} to configure a display program, or use @{b}Delete@{ub} to delete an
entry.

   In addition, new file types defined here are also taken into account
when composing a new message.  For instance, if a new attachment type
"application/pgs" is defined for filenames ending in ".pgs", YAM will
automatically use this MIME type when attaching files that bear this
extension.


@{b}Attachment type@{ub}
     This is the type of the actual entry, and corresponds to the
     @{b}Content-Type@{ub} field contained in the message.  You can select one
     from the pop-up list or use AmigaDOS wildcards, e.g. 'image/#?' to
     use the programme for a whole class of file types.

     Example:  image/jpeg


@{b}Extension@{ub}
     Filename extension for the file type.  This extension allows YAM to
     assign the correct "Content-Type:" field for a file.

     Example:  jpg jpeg jfif


@{b}Viewer@{ub}
     Choose the program you'd like to use to display the attachment.
     Do not forget to insert a @{b}"%s"@{ub} into the command line, which will
     be replaced by the filename when processing.

     Example:  TOOLS:Gfx/ViewJPG "%s"


@{b}Default viewer@{ub}
     This viewer will be used if the attachment doesn't match any of
     the user defined types (see above).

     Example:  SYS:Utilities/MultiView "%s" SCREEN


@{b}Identify binary attachments@{ub}
     Some mail clients always use @{b}application/octet-stream@{ub} as the
     "Content-Type:" field for binary attachments.  To still show such
     attachments with the correct program, YAM can search the viewer
     list based on the file name extension of the attached file (see
     @{b}Extension@{ub} above).


---- Paths ---------------------------------------------------------------

@{b}Decode files to@{ub}
     This is the pre-selected directory to decode attachments into.

     Example:  Work:Data/In


@{b}Attach files from@{ub}
     Whenever you want to attach a file to a new message, YAM will look
     for it at this position first.

     Example:  Work:Data/Out

@endnode

@node "CO12" "Configuration - Address book"
@next "CO13"
@prev "CO11"
@toc "CO_W"

Configuration - Address book
****************************


---- Columns -------------------------------------------------------------

   Select the items you want to see in the address book.


---- Personal data exchange ----------------------------------------------

@{b}Add personal info@{ub}
     Check this option to create special message headers containing
     personal data like your postal address, phone number, homepage,
     date of birth or URL of your picture.  If the recipient works with
     YAM too, (s)he will able to create an address book entry and fill
     it with your data.  To get this working, add an entry to your
     address book containing your data (YAM will find your entry based
     on the e-mail address).


@{b}Save sender's address@{ub}
     YAM can automatically save the sender's address when you're
     reading a message, i.e. it will create a new entry in the address
     book.  Choose one of these modes:

       never                   Don't save addresses
       if info available; ask  You'll only be asked if there's personal
                               data of the sender available, otherwise the
                               address won't be saved
       ask before              You'll be asked every time whether the
                               address should be saved or not
       if info available       The address will be saved automatically if
                               there's personal data of the sender available
       always                  All new addresses will be saved
                               automatically


@{b}Group for new entries@{ub}
     Alias of the group that will contain the new address book entries
     created by the previous option.  The group will be created if it
     doesn't exist yet.

     Example:  NEW


@{b}Save photos in@{ub}
     The pictures of the senders are stored here.

     Example:  PROGDIR:Gallery


@{b}URL of your picture@{ub}
     If one exists, enter here the WWW address (URL) of a small photo of
     yourself.  The URL will be listed along with the headers of every
     outgoing message if 'Add personal info' is enabled.

     Example:  http://yam.ch/gallery/BECK_Marcel.gif


@{b}HTTP Proxy server@{ub}
     If you're behind a firewall and only get into the Internet using
     a proxy server, then you have to enter here the address of that
     proxy server, otherwise it won't be possible to download photos
     or get information about new versions of YAM.

     Example:  proxy.example.com:8080

@endnode

@node "CO13" "Configuration - ARexx"
@next "CO14"
@prev "CO12"
@toc "CO_W"

Configuration - ARexx
*********************


   As well as the "Scripts" menu in the main window, which can hold up
to ten scripts, ARexx scripts can also be started by certain events.
For example, it is possible with two simple scripts to start up Miami
in order to go online and fetch new mail, and then close Miami again
once the mail has been downloaded.


@{b}Name@{ub}
     The title of the script as it appears in the "Scripts" menu, e.g.
     "Start Browser".


@{b}Script@{ub}
     File name of the ARexx script, including any needed parameters
     (in the usual ARexx fashion, but without a call to 'RX').

     Example:  PROGDIR:rexx/StartBrowser.rexx


@{b}Open Console window@{ub}
     The script will open a console window for input and output while
     it is running.  Switch this option off if a console window is not
     required.


@{b}Wait for termination@{ub}
     Switch this option off if you want the script to run in the
     background, which means you don't want to wait for it to finish
     before YAM can go ahead with other tasks.

@endnode

@node "CO14" "Configuration - Miscellaneous"
@next "CO16"
@prev "CO13"
@toc "CO_W"

Configuration - Miscellaneous
*****************************


---- Paths ---------------------------------------------------------------

@{b}Directory for temp files@{ub}
     YAM needs this directory to save some files needed while
     processing e.g. messages with MIME attachments.  If you are short
     on memory (2 MB or less), you better choose a path on your hard
     disk to avoid possible problems with very large messages.

     Example:  RAM:t


---- Mailbox status AppIcon ----------------------------------------------

@{b}Position X   Y@{ub}
     Enter here the desired position on your Workbench for YAM's
     AppIcon.  If another icon is already ocuppying this position,
     Workbench will choose a 'safe' position for the AppIcon on its own
     (so you don't have to worry about 'deleting' another icon).

     Example:  X 550  Y 144


@{b}Label@{ub}
     The label for the AppIcon which will be displayed while YAM is
     running can be specified here.  Click the pop-up button to select
     a variable for new, unread, etc. messages.


@{b}Close gadget iconifies program@{ub}
     Following the MUI default behavior, the close gadget (or the
     <Esc> key) will terminate the program.  Activate this option to
     let them iconify YAM instead.


---- Save/delete messages ------------------------------------------------

@{b}Confirm deletion of [xx] or more messages@{ub}
     If this option is activated, a security requester will appear
     before deleting a certain number of messages.  This makes sense
     especially when a number of two or more is selected.


@{b}Remove messages immediately@{ub}
     If this option is switched on, messages won't be moved to the
     'Deleted' folder on deletion -- instead, they will be erased
     immediately from the hard disk.  This saves some time and memory,
     but on the other hand you won't be able to retrieve any message
     deleted by mistake.


@{b}Save sent messages@{ub}
     Activate this option to make YAM save sent messages into the 'Sent'
     folder.  You can select this as well specifically for any single
     mail, by using the relevant option in the @{" Write " link "WR02"} window.


---- Message tracking ----------------------------------------------------

   Here you can define how YAM should react if a message's sender has
requested a disposition notification (MDN) while writing his/her
message.

 Ignore   - The request will be ignored completely and there won't be any
            report.
 Autodeny - The sender will be informed that you don't wish to send a
            disposition notification for the message.
 Accept   - The sender will be informed as requested about the message's
            disposition.
 Ask user - You can decide in each case if you want to ignore, deny or
            accept the request.


   Additionally, YAM's reaction can be related to the event activating
the disposition notification:

 Display  - The message was read or answered
 Process  - The message was bounced or forwarded without reading
 Delete   - The message was deleted without reading
 Filter   - The message was automatically processed or deleted by a filter


@{b}Send at once@{ub}
     The condition report will be sent immediately if there's a TCP/IP
     stack running, otherwise it will be saved to the 'Outgoing' folder.


---- XPK/LhA settings ----------------------------------------------------

@{b}Packer@{ub}
     By clicking the pop-up button, you can choose the XPK library you
     wish to use to compress folders.  Before doing so, an XPK package
     must be installed on your computer system.  This package is not
     contained in the YAM archive, but can be downloaded from the
     Aminet.  You can select the packer's efficiency by using the slider
     bar on the right-hand side of the pop-up button -- the higher the
     value, the better compression, but also slower.

     Example:  NUKE 100%


@{b}Pack/protect@{ub}
     Click the pop-up button to select the XPK library you wish to use
     for compression and password protection of folders.  You can only
     select XPK libraries offering password protection.  Specify the
     packer's efficiency with the slider bar on the right-hand side of
     the pop-up button.

     Example:  HUFF 50%


@{b}Archiver@{ub}
     YAM is capable of crunching one or more files before attaching
     them to an e-mail, using a suitable archiver such as LHA, LZX or
     ZIP.  Enter here the full command path line for your favourite
     archiver, including any options.  You can insert variables for the
     resulting archive and the source files (or a list containing the
     source files) by clicking the pop-up button on the right hand side
     of the text field.

     Examples:  LhA -a -m -i%l a %a
                BIN:LZX -a -m a %a %f

@endnode

@node "CO16" "Configuration - Look & Feel"
@next "CO17"
@prev "CO14"
@toc "CO_W"

Configuration - Look & Feel
***************************


   Here YAM will display a list with available themes and a small
preview of what it will look like.


@{b}Activate@{ub}
     Activates the selected theme, which requires you to save the
     configuration and restart YAM, in order to see the new icons.


@{b}Status bar@{ub}
     Will show a status bar at either - top, middle, bottom or
     don't show any at all.


@{b}Label@{ub}
     Here you can select what the status bar should show.
     There are a number of different options to select from.


@{b}Size format@{ub}
     Here you can select how YAM will display sizes for mails and
     mail drawers.


@{b}Embedded read pane in main window@{ub}
     Shows an embedded read pane in the main window, which allows
     you to read mails directly in the main window instead of
     double-clicking a mail to open it in a separate read
     window.


@{b}Show quick search in main window@{ub}
     Shows a quick search field in the main window, for quick
     searches :)

@endnode

@node "CO17" "Configuration - Updates"
@next "CO_H"
@prev "CO16"
@toc "CO_W"

Configuration - Updates
***********************


@{b}Check for updates@{ub}
     Allows you to select the interval at which YAM will check
     for updates to itself and other third party software,
     which YAM needs. A button next to it, allows you to do
     manual checks for updates at will.

     Below you can also see when exactly the last check
     was done.

@endnode

@node "CO_H" "Configuration - Hidden options"
@next "CO_M"
@prev "CO17"
@toc "CO_W"

Configuration - Hidden options
******************************


   YAM recognises some extra parameters that are not mentioned in any
configuration window.  You have to load the file @{b}.config@{ub} into a text
editor and alter the parameters in the @{b}Advanced@{ub} section by hand.


@{b}LetterPart@{ub}
     Usually the first part of a multipart letter contains the actual
     message, while the subsequent parts are the attachments.  A few
     mail servers, like GeoCities, use the first part for their
     advertisements, which would then be quoted in a reply instead of
     the actual message.  With the @{b}LetterPart@{ub} option you can
     correct this.

     Example:  LetterPart = 2


@{b}WriteIndexes@{ub}
     If the contents of a folder are altered, YAM must rebuild the
     index.  This index is in RAM memory, and it is saved back to the
     hard disk on a normal exit.  In the event that the computer has to
     be rebooted (because of a crash, perhaps), YAM has to rebuild the
     indices on startup.  Therefore, YAM will save alterations to the
     index file at intervals of 120 seconds.  This time interval can be
     altered using the WriteIndexes option.

     Example:  WriteIndexes = 30


@{b}AutoSave@{ub}
     While you're writing a message, YAM saves the contents of the
     editor every ten minutes as @{b}.autosave0.txt@{ub} or @{b}.autosave1.txt@{ub} in
     the program directory.  After a crash you can load this file using
     "Text/Insert".  The @{b}AutoSave@{ub} parameter contains the time interval
     between two backups, in seconds.

     Example:  AutoSave = 600


@{b}SupportSite@{ub}
     This is the address of the YAM homepage, used to access the user
     picture gallery and to request the version check.

     Example:  SupportSite = http://yam.ch/


@{b}JumpToNewMsg@{ub}
     If this option is set to 'Y', YAM will jump to the first new or
     unread message whenever you select a folder.

     Example:  JumpToNewMsg = N


@{b}JumpToIncoming@{ub}
     If this option is set to 'Y', YAM will jump to the first new or
     unread message whenever you download new email.  This only comes
     into effect if 'Incoming' is the current folder.

     Example:  JumpToIncoming = N


@{b}AskJumpUnread@{ub}
     If this option is set to 'N', YAM won't ask if you want to jump to
     the next/previous folder with unread messages if you are reading
     the last or first message and select any of the @{b}Next/Previous
     unread message@{ub} items in the @{b}Navigation@{ub} menu.

     Example:  AskJumpUnread = N


@{b}PrinterCheck@{ub}
     YAM does some printer checking before printing a message.  This
     test can be disabled because it's not fully compatible with some
     printer drivers.

     Example:  PrinterCheck = N


@{b}IsOnlineCheck@{ub}
     If you're using Miami or AmiTCP/Genesis, YAM can check if your
     Amiga is really online.  If you're using another TCP/IP software
     and YAM is claiming a missing connection although you're actually
     online, then you must switch this option off.

     Example:  IsOnlineCheck = N


@{b}IOCInterface@{ub}
     Specifies which Miami Deluxe/AmiTCP/Genesis interface should be
     used for the online check (see IsOnlineCheck).

     Example:  IOCInterface = ppp1


@{b}ConfirmOnQuit@{ub}
     If this option is enabled, YAM will ask for confirmation whenever
     you try to quit it.  By default, YAM only asks for confirmation if
     there is some unsaved data (configuration, address book).

     Example:  ConfirmOnQuit = Y


@{b}HideGUIElements@{ub}
     This can be used to hide some elements of the graphic user
     interface.  The following values can be combined: 4 for the
     toolbars, 2 for the cursor position in the editor, and 1 for
     the status bar.

     Example:  HideGUIElements = 3

     Please note that as of YAM 2.4, the status bar is not affected by
     this setting anymore, but it is now set in @{b}Configuration/Lists@{ub}.


@{b}LocalCharset@{ub}
     This is the ISO name of the character set you're using on your
     computer.  The default iso-8859-1 (Latin-1) works for Western
     Europe and English speaking countries.  Polish and Russian users
     probably have to adjust this option.

     Example:  LocalCharset = iso-8859-2


@{b}StackSize@{ub}
     Sets the stack size for programs which are launched from YAM
     (e.g. MIME viewers and PGP).

     Example:  StackSize = 40000

@endnode

@node "CO_M" "Configuration - Menus"
@next "CO_W"
@prev "CO_H"
@toc "CO_W"

Configuration - Menus
*********************


@{b}Project/Open...@{ub}
     Loads a config file, and thus enables you to use several and maybe
     different YAM setups.

@{b}Project/Save as...@{ub}
     Saves the current configuration with another name.

@{b}Edit/Reset to defaults@{ub}
     Resets the parameters on the current sheet to their default values,
     internally contained in YAM.

@{b}Edit/Reset all settings@{ub}
     Resets all configuration parameters to their default values,
     internally contained in YAM.

@{b}Edit/Last saved@{ub}
     Replaces the current configuration with the one most recently
     saved.

@{b}Edit/Restore@{ub}
     Discards any changes in the settings made since the last time they
     were [Save]d or [Use]d.

@{b}Extras/Import MIME viewers & types...@{ub}
     Imports attachment types, file name extensions and MIME viewers
     data.  Supported file formats are mime.types, mailcap and
     MIME.prefs.  This menu item can only be called from the @{" MIME " link "CO11"} sheet.

@endnode

@node "WI_W" "Windows"
@next "RF_W"
@prev "CO_W"
@toc "Main"

Windows
*******


 @{" Main Window     " link "MA_W"}  - How to receive and send mail, copy it, etc.
 @{" Write           " link "WR_W"}  - Writing e-mail messages
 @{" Read            " link "RE_W"}  - Reading e-mail messages
 @{" Folder settings " link "FO_W"}  - Editing a folder
 @{" Address book    " link "AB_W"}  - Saving useful addresses
 @{" Mail transfers  " link "TR_W"}  - Downloading and sending messages
 @{" Search          " link "FI_W"}  - Finding a particular message
 @{" Users           " link "US_W"}  - Defining multiple users

@endnode

@node "MA_W" "Main window"
@next "WR_W"
@prev "US_W"
@toc "WI_W"

Main window
***********


   YAM's main window is laid out as shown:


   Menu bar:

   @{" Project " link "MAM1"} @{" Folder " link "MAM2"} @{" Message " link "MAM3"} @{" Settings " link "MAM4"} @{" Scripts " link "MAM5"}

  .--------------------------------------------------------.
  |              @{" Toolbar " link "MA02"}                                 |
  |--------------------------------------------------------|
  |                       Status bar                       |
  |--------------------------------------------------------|
  |                 |                                      |
  |                 |          @{" Message list " link "MA01"}              |
  |  @{" Folder list " link "MA00"}  |                                      |
  |                 |      This shows the contents         |
  |                 |      of the selected folder          |
  |                 |--------------------------------------|
  |                 |                                      |
  |                 |       Embedded read pane             |
  |                 |       Shows the contents of the      |
  |                 |       currently selected mail        |
  |                 |                                      |
  `-----------------^--------------------------------------'

@endnode

@node "MA00" "Main window - folder list"
@next "MA01"
@prev "MA_W"
@toc "MA_W"

Main window - folder list
*************************


   The following four standard 'mailbox' folders are always present:

@{b}Incoming@{ub}
     This mailbox holds new messages addressed to you.  Whenever
     you download new mail, this is where the new messages will go
     initially.  You can, however, redistribute incoming messages
     to other folders, as desired, using @{" filters " link "CO03"}.

@{b}Outgoing@{ub}
     This mailbox holds the messages which you have written and which
     you intend to transmit the next time you go online.

@{b}Sent@{ub}
     Here you can see the messages which you have already sent.
     Messages are moved to this box (from 'Outgoing') when they are
     actually transmitted.  Again, you can use @{" filters " link "CO03"} to transfer
     sent messages to other folders.

@{b}Trash@{ub}
     This box contains messages marked for deletion.  Normally messages
     are not actually deleted from the hard disk until you quit YAM.
     This allows you to recover messages deleted earlier in the session.

   Using the @{" folder menu " link "MAM2"} you can create more folders to hold messages
which you have received and/or sent, so you can arrange the mails in
whatever way you like, including arranging them in groups.

   The folder list can have upto five columns: Name of the folder,
number of messages (in total, new or unread) as well as the size of
the folder.  Which of these columns are actually shown depends on how
you set up @{" lists " link "CO08"} in the configuration; you can also use the context
menu (click RMB on the column headings) to have some columns temporary
enabled or disabled.  The column widths can be adjusted by using the
mouse to drag the thin lines separating the column headings in the
folder list itself.  The order of the columns can be modified by
dragging the column headings sideways.

   The folders themselves can be rearranged by @{" Drag&Drop " link "Drag"}.

   If the name of the folder is shown in white, this means that the box
contains new or unread mail.  When the numerical indication is missing,
this shows that the folder has not been scanned, which saves storage
space.

   The coloring of folder groups is special: they always appear in white,
as in "@{fg highlight}Personal@{fg text}".  If a folder in a group contains new or unread mail,
the name of the group will show up as bold, as in "@{fg highlight}@{b}Personal@{ub}@{fg text}".

   If you "park" the mouse pointer over the list for some seconds, a
help bubble containing information about the current folder pops up.

   To see the contents of any particular folder, click on that row in the
folder list.  The message list appears at the right, maybe after a slight
pause.

   You can also use the numeric keys 0..9 to change the current folder
to one of the first 10 folders in the list ('0' for the first folder,
'1' for the second, etc.).  If the key you press applies to the current
folder, the message list will be refreshed instead.

   Double-clicking an entry in the list opens the @{" configuration window " link "FO_W"}
where you can edit the properties of the selected folder or group.

@endnode

@node "MA01" "Main window - message list"
@next "MA0S"
@prev "MA00"
@toc "MA_W"

Main window - message list
**************************


   The message list can have upto eight columns, the contents being
set in the @{" lists " link "CO08"} configuration.  You can also use the context menu
(click RMB on the column headings) to have some columns temporary enabled
or disabled.

@{b}Message status@{ub}
     One or more icons showing the @{" status " link "MA0S"} of the message (new, unread,
     read, etc.)

@{b}Sender/Recipient@{ub}
     E-mail address or, in this case, the name of the sender or
     recipient of the message, depending on the type of mailbox.  If
     the message was sent to several people at the same time, a little
     icon appears in front of the name, showing three tiny heads.

@{b}Subject@{ub}
     Subject of the message.  When the messages are sorted according
     to the subject, the prefixes Re: and AW: are ignored.

@{b}Date@{ub}
     The date the message was written, calculated according to the
     local time (for you).  For this to work, both you and the sender
     must have set your correct @{" timezone " link "CO00"}, and the system date and
     time must be correct on both ends.

@{b}Filename@{ub}
     Name of the file containing the message.

@{b}Reply address@{ub}
     Contents of the "Reply-To:" header in the message.  If this is
     missing, then the sender's address is given (the "From:" header).

@{b}Size@{ub}
     Size of the message.

@{b}Date sent/received@{ub}
     The date the message was sent or received, depending on the type
     of mailbox.  Again, for this to work properly, both you and the
     sender must have set your correct @{" timezone " link "CO00"}, and the system
     date and time must be correct on both ends.


   The column widths can be adjusted by using the mouse to drag the
thin lines separating the column headings in the message list itself.
The order of the columns can be modified by dragging the column headings
sideways.

   A little arrow in the one of the column headings shows how the
messages are sorted.  One click on a column heading causes the messages
to be sorted according to this property.  A second click on the same
heading reverses the order of sorting (Z->A instead of A->Z).  To set
the second sort key, keep the Shift key pressed while clicking on the
column heading.  These changes are only temporary; if you want to make
them permanent you must do this in the @{" folder settings " link "FO_W"} window.

   If you "park" the mouse pointer over the list for some seconds, a
help bubble containing information about the current message pops up.

   A double click on an entry in the list opens a @{" Read window " link "RE_W"} and
displays the corresponding message.  You can use the mouse to move
messages to another folder.  Click on an entry and drag down (holding
the left mouse button) to mark a block of messages.  Then click and
@{" drag " link "drag"} the marked block to the left, into the folder list, and drop it
onto the chosen folder.

@endnode

@node "MA0S" "Status Icons"
@next "MA02"
@prev "MA01"
@toc "MA_W"

Status icons
************


   YAM uses several icons to display the status of the messages.  Apart
from the basic read, unread, outgoing and sent status, additional icons
may appear to display several flags which are also relevant, e.g. new,
replied, important, PGP signed, etc.  How exactly all this status
information is displayed depends upon the icon set that is currently
installed, here are the defaults for the classic MagicWB style:


 Message status                Icon
 ------------------------------------------------------------------------
 New messages                  back of envelope with an 'N'
   New, unread message downloaded the last time mail was collected.

 Unread messages               back of sealed envelope
   Messages which have not yet been read.

 Read messages                 opened envelope
   Messages which have already been read.

 Answered messages             opened envelope with an 'R'
   Messages which have already been answered.

 Forwarded messages            opened envelope with an 'F'
   Messages which have been forwarded to a third party.

 Unsent messages               front of envelope
   Messages in 'Outgoing', ready to send.

 Held messages                 envelope (front) with an 'H'
   Messages in 'Outgoing' which need further work before sending.

 Sent messages                 stamped envelope
   Messages which have already been sent.

 Failed messages               torn envelope
   Messages which failed, due to an error encountered in transmission.

 Messages with attachment(s)   paper clip
   Messages with one or more files attached.

 Locked messages               grey key
   Messages which have been encrypted with PGP.

 Signed messages               orange key
   Messages which have been signed with PGP.

 Status report                 little sign with the letter 'i'
   Automatic reply from the mail server or the recipient's mail program.

 Important message             exclamation mark
   Message noted as important by the sender.

 Marked messages               light bulb or sender/recipient in bold letters
   Messages which have been locally "marked" for some reason.

@endnode

@node "MA02" "Main window - toolbar"
@next "MAM1"
@prev "MA0S"
@toc "MA_W"

Main window - toolbar
*********************


   The toolbar gives you easy access the most frequently used functions.

   .---.---.---.---.---.  .---.---.---.  .---.---.  .---.---.---.---.---.
   | 1 | 2 | 3 | 4 | 5 |  | 6 | 7 | 8 |  | 9 |10 |  |11 |12 |13 |14 |15 |
   `---^---^---^---^---'  `---^---^---'  `---^---'  `---^---^---^---^---'

   The table shows the equivalences between buttons (position and
label), keyboard shortcuts and menu commands.  You can choose whether
to show icons, labels or both on the buttons: see @{" Settings/MUI " link "MAM4"}.


      Button      Shortcut    Equivalent to menu...
 -----------------------------------------------------------------------
  1   [Read]      D,<return>  @{" Message/Read " link "MAM3"}
  2   [Edit]      E           @{" Message/Edit " link "MAM3"}
  3   [Move]      V           @{" Message/Move... " link "MAM3"}
  4   [Delete]    L,<del>     @{" Message/Delete " link "MAM3"}
  5   [GetAdd]    T           @{" Message/Save Address... " link "MAM3"}

  6   [New]       N           @{" Message/Write " link "MAM3"}
  7   [Reply]     R           @{" Message/Reply... " link "MAM3"}
  8   [Forward]   W           @{" Message/Forward... " link "MAM3"}

  9   [Get]       G           @{" Folder/Get new mail " link "MAM2"}
 10   [Send]      S           @{" Folder/Send queued mail " link "MAM2"}

 11   [Spam]      A           @{" Folder/Apply Spam filter " link "MAM2"}
 12   [Filter]    I           @{" Folder/Filter " link "MAM2"}
 13   [Find]      F           @{" Folder/Search... " link "MAM2"}
 14   [Addr]      A           @{" Settings/Address book... " link "MAM4"}
 15   [Config]    C           @{" Settings/Configuration... " link "MAM4"}


   Additional features are available by clicking a toolbar button while
holding down a certain qualifier key:

 Shift + [Delete]    Immediately deletes the messages
 Shift + [Reply]     Forces a private reply (address in the "From:" field
                     is used)
 Shift + [Forward]   Bounces the message
 Shift + [Get]       Starts a mail exchange
 Shift + [Filter]    Filters the active message(s) only
 Alt   + [Reply]     Forces a mailing list reply (address in the "Reply-To:"
                     field is used)
 Ctrl  + [Reply]     Omits quoting of the original message
 Ctrl  + [Forward]   Omits forwarding of the attachments

@endnode

@node "MAM1" "Main window - Project menu"
@next "MAM2"
@prev "MA02"
@toc "MA_W"

Main window - Project menu
**************************


@{b}Project/About@{ub}
     Shows @{" Copyright Information " link "COPY"} for this program.


@{b}Project/About MUI@{ub}
     Shows copyright and version information for @{" MUI " link "MUI"}.


@{b}Project/Check version@{ub}
     Fetches information about the newest version of YAM from the YAM
     homepage.  Make sure that you are online before calling this
     function.  YAM then tells you whether there is an update for
     your version.  The button [Visit Homepage] will then start an
     @{" ARexx script " link "CO13"} which connects your browser to the YAM homepage.


@{b}Project/Show last message@{ub}
     Shows recent error messages.


@{b}Project/Restart@{ub}
     Forces a "warm start" of YAM.  You can use this to login in again
     using @{" another username " link "US_W"}, for instance.


@{b}Project/Hide@{ub}
     This switches the program to iconified mode.  The icon will still
     show the @{" status " link "MA0S"} of those folders for whom the "AppIcon stats" has
     been activated in the @{" folder settings " link "FO_W"}; also, the periodic mail
     check and any @{" ARexx " link "REXX"} scripts remain active.  The appearance of the
     mailbox icons can be changed, if you want -- all you have to do is
     to put new files @{b}new.info@{ub}, @{b}old.info@{ub}, @{b}empty.info@{ub} and @{b}check.info@{ub}
     into YAM's @{b}/Icons@{ub} directory.


@{b}Project/Quit@{ub}
     Exit from YAM.

@endnode

@node "MAM2" "Main window - Folder menu"
@next "MAM3"
@prev "MAM1"
@toc "MA_W"

Main window - Folder menu
*************************


@{b}Folder/New folder...@{ub}
     Creates a new folder and inserts it below the current one.  If the
     folder directory already exists (e.g. a folder of another user),
     select "Existing directory".  To create a new folder you can either
     use YAM's "Internal defaults" or copy the settings from the current
     folder ("Like current").  Now a @{" configuration panel " link "FO_W"} opens where
     you can modify the properties of the new folder.


@{b}Folder/New folder group...@{ub}
     Creates a new folder group and inserts it at the end of the
     folder list.  Groups are useful to group your folders in
     categories, saving also precious state space in your folder list.
     Folders can also be nested, i.e. you can insert a group into
     another group.


@{b}Folder/Edit...@{ub}
     Opens a @{" configuration panel " link "FO_W"} where you can modify the properties
     of the current folder.  If a group is selected, only its name can
     be changed here.


@{b}Folder/Delete@{ub}
     Removes the current (user defined) folder, asking for confirmation
     first.  When a group is deleted, its contents simply move one place
     up in the tree.


@{b}Folder/Order >>  Save | Reset@{ub}
     Saves or restores the order of the folders in their @{" list " link "MA00"}.
     This order is also saved when modifing the folder settings.


@{b}Folder/Search...@{ub}
     Opens the @{" Search window " link "FI_W"}, which allows you to find any particular
     message.


@{b}Folder/Filter@{ub}
     Applies the user defined @{" filters " link "CO03"} to all messages in the current
     folder.  Filters are of the form 'On query, take action', the
     options being defined in the configuration settings.


@{b}Folder/Apply Spam filter@{ub}
     Applies the Spam filter to all messages in the current folder.


@{b}Folder/Empty trash@{ub}
     Actually deletes the messages in the 'Trash' folder.


@{b}Folder/Update index@{ub}
     Scans the directory for the current folder and builds a new index
     file.  Normally YAM updates the index file automatically, as
     needed.  However it can be useful to force an index update after
     a crash or in the event of a problem.


@{b}Folder/Flush indices@{ub}
     Removes the indices of the user defined folders, which is helpful
     if you're low on memory.  If you change to one of these folders at
     a later time, the index will be reloaded from the hard disk.


@{b}Folder/Import...@{ub}
     Allows the import of a mail file created by a different application.
     The file must be in standard MBOX mailbox format as generated by
     external mail server client programs like AmiPOP or IMAP clients.
     Such a file may contain several messages, which are identified by
     their "From:" and "Date:" headers.


@{b}Folder/Export...@{ub}
     Saves all the messages in the current folder to a single file,
     so that they can be read by a different e-mail client (see the
     previous option).


@{b}Folder/Send queued mail@{ub}
     Transmits all messages in the Outgoing mailbox (except for those
     which are on 'Hold').


@{b}Folder/Exchange mail@{ub}
     First fetches new mail from your mail server and then sends the
     messages in the Outgoing mailbox.  This simply combines the
     actions of 'Get new mail' and 'Send queued mail'.


@{b}Folder/Get new mail@{ub}
     Attempts to connect to the mail server, checks whether there is
     new mail waiting and if so downloads it into the 'Incoming'
     mailbox.  If you have specified more than one @{" POP3 account " link "CO02"},
     those marked as "Active" will all be checked in turn.


@{b}Folder/Check single account@{ub}
     If you have set up several POP3 accounts, you can use this function
     to check any single account.

@endnode

@node "MAM3" "Main window - Message menu"
@next "MAM4"
@prev "MAM2"
@toc "MA_W"

Main window - Message menu
**************************


@{b}Message/Read@{ub}
     Loads the selected message into the @{" Read window " link "RE_W"}.


@{b}Message/Edit@{ub}
     Allows you to edit a message you have composed earlier.


@{b}Message/Move...@{ub}
     Moves one or more messages into another folder.  You can also do
     this by @{" dragging " link "Drag"} the message(s) from the message list into the
     @{" folder list " link "MA00"} and dropping them onto the desired destination.


@{b}Message/Copy...@{ub}
     Allows you to duplicate a message.  The copy is identical to the
     original apart from its filename on disk.


@{b}Message/Delete@{ub}
     Moves one or more messages to the 'Deleted' folder (from which
     they can be recovered if needed).  If you want messages actually to
     be deleted immediately, check "Remove messages immediately" in the
     @{" Miscellaneous " link "CO14"} configuration settings.  The <DEL> key works as
     a keyboard shortcut for this menu item, while <Shift-Del> forces
     immediate deletion from the hard disk, regardless of the
     configuration settings.


@{b}Message/Print@{ub}
     Sends the readable part (text and headers) of the message(s) to the
     printer.


@{b}Message/Save@{ub}
     Saves the text (and headers) of one or more messages, creating
     a separate file for each message.  Should you want to save all
     the messages in the folder to a single file in mailbox (MBOX)
     format, use @{" Folder/Export " link "MAM2"} instead.


@{b}Message/Attachments >>  Save@{ub}
     Saves the attached files from one or more messages in a directory
     you select.


@{b}Message/Attachments >>  Crop@{ub}
     Deletes, without further warning, the MIME attachments from one or
     more messages, in order to save storage space.  A notice about the
     deleted data is written into any message cropped in this way.


@{b}Message/Export...@{ub}
     Saves one or more messages to a single file, so that they can be
     read by a different e-mail client (see also @{" Folder/Import... " link "MAM2"}).


@{b}Message/Write@{ub}
     Opens the @{" Write window " link "WR_W"}, in which you can compose a new message.


@{b}Message/Reply@{ub}
     Use this to reply to a message which someone has sent to you.
     Subject and recipient headers are filled in automatically and the
     original text is quoted.  It is also possible to select several
     messages which will all be quoted in the same reply and sent back
     to the original senders (@{i}Multi-reply@{ui}).


@{b}Message/Forward@{ub}
     This lets you send the contents of an e-mail on to another
     recipient.  The subject and the body text are copied across whereas
     a new message header is created.  At the beginning and the end of
     the quoted text YAM inserts the phrases for forwarding, which you
     can define in the @{" Reply " link "CO06"} settings in the configuration.  You can
     also select multiple messages, in which case these are combined
     into a single forwarded message (@{i}Multi-forward@{ui}).


@{b}Message/Bounce@{ub}
     This lets you send a message on to another recipient, with no
     visible changes at all.  Only the @{b}To:@{ub} field of the header is
     changed and a couple of @{b}Resent:@{ub} fields are added; the phrases
     defined for forwarded messages are not used here.


@{b}Message/Select >>  All | None | Toggle@{ub}
     Selects all the messages in the current folder, clears any
     selection or toggles the selection (i.e. exchanges selected and
     unselected items), respectively.


@{b}Message/Save address...@{ub}
     The address of the sender of the selected message (or the
     recipient's, depending on which type of mailbox is open) is added
     to your @{" address book " link "AB_W"}.  If multiple messages are selected or if
     a message has several recipients, then you get the option of
     creating a new distribution list.


@{b}Message/Set status >>
     Marked | Unmarked | Read | Unread | Hold | Queued | Spam | No Spam || All as Read@{ub}
     This changes the status of one or more messages.  Thus you can
     release held messages in the Outgoing mailbox, mark unread
     messages as read or manually mark suspicious mails as spam.


@{b}Message/Change subject...@{ub}
     This alters the subject of one or more messages, so you can amend
     irrelevant @{b}Subject:@{ub} fields in messages you have received.  To
     preserve the capability of tracing a thread back, the original
     subject is saved in the message headers as @{b}X-Original-Subject:@{ub}.


@{b}Message/Send@{ub}
     Makes a connection to the mail server and transmits the selected
     messages.  If you want to send all the messages in the Outgoing
     folder, then it is better to choose @{" Folder/Send queued mail " link "MAM2"}.

@endnode

@node "MAM4" "Main window - Settings menu"
@next "MAM5"
@prev "MAM3"
@toc "MA_W"

Main window - Settings menu
***************************


@{b}Settings/Address book...@{ub}
     Lets you edit the entries in the @{" address book " link "AB_W"}.


@{b}Settings/Configuration...@{ub}
     Opens the @{" configuration window " link "CO_W"}, in which you can change YAM's
     settings.


@{b}Settings/Users...@{ub}
     Opens the @{" users window " link "US_W"}, where you can add new users
     ("Multi-User").


@{b}Settings/MUI...@{ub}
     Opens the settings window for @{" MUI " link "MUI"}, where you can specify
     virtually all of the visual features of YAM, including fonts,
     palette, screen mode, background, borders, gadgets, keyboard
     shortcuts and so on.  Please see the MUI documentation for more
     information.  YAM utilises several MUI classes which were not in
     the original release of MUI.  These MUI modules are:


        NListviews: some of the lists in YAM, e.g. the message list
           Options: colors, fonts, miscellaneous, scrollbars.

           Toolbar: icon buttons in the YAM windows.
           Options: labels, spacing, fonts.

        TextEditor: internal editor as well as message display in the
                    Read window
           Options: fonts, colors, cursor, separator, keybindings, spell
                    checker.

         NListtree: structured lists: address book, folder list
           Options: appearance of lines and group icons.

      BetterString: general one-line text input field.
           Options: font, palette, cursor.

@endnode

@node "MAM5" "Main window - Scripts menu"
@next "MAM1"
@prev "MAM4"
@toc "MA_W"

Main window - Scripts menu
**************************


@{b}Scripts/Execute script...@{ub}
     Lets you select an @{" ARexx " link "REXX"} script and run it.

@endnode

@node "WR_W" "Write window"
@next "RE_W"
@prev "MA_W"
@toc "WI_W"

Write window
************


   This window will appear when you choose to write a new message or
answer or forward an already existing message.  You can open TWO Write
windows at a time.  The Write window consists of three sheets, laid out
as shown below.  The menu bar is the same for each sheet.


   @{" Text " link "WRM1"} @{" Edit " link "WRM2"} @{" Attachments " link "WRM3"} @{" Options " link "WR02"}

  .-----------------------. .------------------.   .--------------------.
  |      @{"  Message  " link "WR00"}     | |  @{" Attachments " link "WR01"}   |  |    @{"  Options  " link "WR02"}     |
  |                       |_|__________________|___|____________________|
  |                                                                     |
  |                                                                     |
  |                                                                     |
  |                                                                     |
  |            The big text edit field on the 'Message'                 |
  |            sheet is the @{" internal editor " link "EDIT"} which you                 |
  |            can use to enter your message.                           |
  |                                                                     |
  |                                                                     |
  |                                                                     |
  |                                                                     |
  `---------------------------------------------------------------------'
  .---------------. .---------------. .---------------. .---------------.
  |   Send now    | |  Send later   | |     Hold      | |    Cancel     |
  `---------------' `---------------' `---------------' `---------------'


   These four buttons appear at the bottom of each sheet:


@{b}Send now@{ub}
     Prepares the message for sending, moves it to the Outgoing folder
     and tries to send the mail at once.  For this option to work
     correctly, there must be a TCP/IP stack running and online.


@{b}Send later@{ub}
     Prepares the message for sending and copies it to the Outgoing
     folder.  Use this button when working offline.


@{b}Hold@{ub}
     The message will be prepared as described in @{b}Send later@{ub} and copied
     to the Outgoing folder, but will be held back and NOT sent.  Use
     this button for unfinished messages, e.g. if you'd like to make
     some additions to the e-mail at a later time, and not risk them to
     be sent out by mistake.


@{b}Cancel@{ub}
     Use this button if you've changed your mind.  @{b}BEWARE:@{ub} All input
     made in this window will be lost.  But don't worry, a security
     requester will popup before YAM really discards any modifications
     you have made.  (It won't show up if you haven't made any
     modifications in the message itself, though).


   Related topics:

 @{" The internal editor   " link "EDIT"}
 @{" The glossary          " link "DI_W"}

@endnode

@node "WR00" "Write window - Message sheet"
@next "WR01"
@prev "DI_W"
@toc "WR_W"

Write window - Message sheet
****************************


   Above the large @{" text editor " link "EDIT"} area there are two header fields and a
toolbar.


@{b}To@{ub}
     Insert here the main recipient you wish to send the actual message
     to.  You can use names or aliases from the address book or even
     full e-mail addresses in case the recipient does not exist in the
     address book.  If you wish to enter several recipients, you have to
     separate them by inserting commas.

     There are several ways of importing here any recipient which can
     be found in your address book -- just select the method you feel
     more comfortable with:

       a. click on the pop-up button to the right, thereby opening the
          address book.  Now you can either double click on any entry
          you want, or @{" drag " link "Drag"} it over to the text field holding the left
          mouse button.

       b. while the address book window is open, you can click the @{b}To:@{ub}
          button there to automatically add the current entry to the
          @{b}To:@{ub} field of your message.  To add several recipients, just
          select them one by one and click the @{b}To:@{ub} button in turn.

       c. lastly, a newly introduced and more elegant method is to just
          start typing the alias, first name or email address of your
          recipient in the @{b}To:@{ub} field.  This way you are quickly
          presented with a dropdown list of the possible matches, taken
          from your address book.

          <Shift-Return> adds only the recipient address and drops the
          real name, whilst pressing <Return> without selecting a recipient
          will add the first match in the dropdown list.  Both techniques
          can be combined.

     If YAM cannot find a name or alias you've inserted manually into
     the @{b}To:@{ub} field, you will get an error report as soon as you try to
     send [later] or hold your message.  Please double check your
     spelling, or just use one of the selection methods outlined above.

     Example:

            jdoe, boss\@work.whyme.com


@{b}Subject@{ub}
     What the mail is all about.  When a mail is answered, there will be
     a @{b}Re:@{ub} inserted in front of the original subject, whereas when
     forwarded a @{b}(fwd)@{ub} will be added at the end.


Toolbar
=======

    [Editor]   same as menu item @{" Text/Launch editor " link "WRM1"}
    [Insert]   same as menu item @{" Text/Insert as/Plain " link "WRM1"}
    [Cut]      same as menu item @{" Edit/Cut " link "WRM2"}
    [Copy]     same as menu item @{" Edit/Copy " link "WRM2"}
    [Paste]    same as menu item @{" Edit/Paste " link "WRM2"}
    [Undo]     same as menu item @{" Edit/Undo " link "WRM2"}
    [Bold]     same as menu item @{" Edit/Textstyle/Bold " link "WRM2"}
    [Italic]   same as menu item @{" Edit/Textstyle/Italic " link "WRM2"}
    [ULined]   same as menu item @{" Edit/Textstyle/Underlined " link "WRM2"}
    [Colored]  same as menu item @{" Edit/Textstyle/Alternative color " link "WRM2"}
    [Search]   allows you to search the text for a given string

@endnode

@node "WR01" "Write window - Attachments sheet"
@next "WR02"
@prev "WR00"
@toc "WR_W"

Write window - Attachments sheet
********************************


   You can add one or more files to your message.  This way you can send
binary files such as archives, pictures, etc. via e-mail.  You can choose
the method of encoding (MIME or UUencoded) and write a comment for each
file.  Files can be archived automatically to reduce the size of the
resulting message.

   The attachment list contains five columns: filename, size (in bytes),
contents, encoding and description.  You can re-order the files using
Drag & Drop.


Buttons and Gadgets
===================

@{b}Add file(s)@{ub}
     You can select one or more files, which will be added as new
     attachments to the list.  YAM recognizes over 20 filetypes
     automatically and will fill in the @{b}MIME type@{ub} field accordingly.


@{b}Pack & add@{ub}
     By adding files this way, they will be archived with e.g. LhA, LZX
     or ZIP before being actually attached to the message.  Select the
     files you would like to add to the archive and then enter an
     archive name.  You can define the archiver in the configuration
     window, under @{" Miscellaneous " link "CO14"}.


@{b}Delete@{ub}
     Removes the selected entries from the list.


@{b}Display@{ub}
     Displays the selected entry using one of the programs contained in
     the MIME viewers list.  The program used by default is MultiView.


@{b}Encoding@{ub}
     For normal use you should encode your files using MIME
     (Base64/QP).  YAM uses @{i}quoted printable@{ui} encoding for text files and
     @{i}Base64@{ui} for binary files.  If the recipient isn't able to decode
     messages in MIME format (because his mailer does not support
     this), you can also @{i}UUencode@{ui} the files.  Messages containing
     UUencoded files are still in MIME @{b}multipart/mixed format@{ub}, but
     those attachments can be extracted from the message using a
     UUdecoder such as @{b}UUxT@{ub}.  A message generated by YAM may contain
     UUencoded attachments as well as attachments in Base64 format.


@{b}MIME type@{ub}
     As long as YAM recognizes the filetype of the attachment, the
     correct MIME type will be inserted automatically, otherwise the
     default setting (@{b}application/octet-stream@{ub}) will be used.  Before
     defining a new MIME type, please check that is isn't already part
     of the pop-up list.

     Additional file types defined in the @{" MIME configuration " link "CO11"} are
     also used automatically.

     Example:  image/gif


@{b}Description@{ub}
     Here you can enter a comment about the actual attachment.

     Example:  Picture from our summer holidays (GIF format)

@endnode

@node "WR02" "Write window - Options sheet"
@next "WRM1"
@prev "WR01"
@toc "WR_W"

Write window - Options sheet
****************************


   The items in the @{b}Options@{ub} menu correspond to the buttons on this
sheet.

   The layout of this sheet is:

                    _________________________________________________
          Copies to|_______________________________________________|^|
   Hidden copies to|_______________________________________________|^|
               From|_______________________________________________|^|
           Reply to|_______________________________________________|^|
  Additional header|_________________________________________________|

     .-------------.           .-------------.          .------------.
     |Send options |           |  Signature  |          |  Security  |
     `-------------'           `-------------'          `------------'


Header fields
=============

@{b}Copies to@{ub}
     The recipients listed here will receive a copy of the message.
     See also the explanation about the @{b}To:@{ub} field given for the
     @{" Message sheet " link "WR00"}.


@{b}Hidden copies to@{ub}
     The recipients listed here will receive a copy of the message;
     however, unlike the recipients listed in @{b}Copies to@{ub}, they won't
     appear in the message headers.  This is useful if you want to
     send someone a copy of a message without the other recipient(s)
     knowing.


@{b}From@{ub}
     Pretty obvious, really!  YAM will fill this in with your address,
     but you might want to change the way your real name appears.


@{b}Reply to@{ub}
     This setting is also valid only for the current message and will
     be inserted instead of the usual "Reply-To:" address as specified
     in the program settings.  Leave this blank unless it needs to be
     different from the e-mail address in the "From:" header.


@{b}Additional header@{ub}
     If for any reason it should become necessary to add one or more
     special header lines to a message, you can enter these here.
     Several lines must be separated by inserting '\\n'.  YAM will
     prepend the entered headers with @{b}X-YAM-Header-@{ub} in the resulting
     message.

     Example:  Keywords: Amiga, YAM\\nPassword: CuriosityKilledTheCat


Send options
============

@{b}Delete after sending@{ub}
     Activate this option if you want the message to be deleted right
     after being transmitted, instead of being copied to the 'Sent'
     folder.


@{b}Disposition Notification@{ub}
     Activate this option to request the recipient's e-mail program to
     let you know about what the recipient did with your message, e.g.
     if the message has been read by the recipient or if the recipient
     has deleted or forwarded it.  Please note that there are only a
     handful of e-mail programs which support this function, as well as
     the fact that the recipient might forbid the sending of any status
     report on e-mails.  Therefore, not getting any information even with
     this option in use does not necessarily mean that the message has
     not been read.  The command to send a status report is contained
     in the @{b}Disposition-Notification-To:@{ub} header field.  At the time of
     writing this document, the Internet standard for Message Disposition
     Notifications (MDN) was still being formulated.


@{b}Add personal info@{ub}
     Check this option to create a special @{b}X-SenderInfo:@{ub} header
     containing personal data like your postal address, phone number,
     homepage, date of birth or URL of your picture.  If the recipient
     works with YAM too, (s)he will be able to create an address book
     entry and fill it with your data.  To get this to work, add an
     entry in your address book containing your data (YAM will find
     your entry based on the email address).  If one exists, enter
     the WWW address of a small photo of yourself in the "address book"
     section of the configuration.


@{b}Importance@{ub}
     Specify here how important the message is for the recipient.
     Messages noted as important will usually be displayed with an
     exclamation mark in the status line and put into first place by
     automatic mail sorting.  The level of importance is stored in
     the @{b}Importance:@{ub} header.


Signature
=========

   Here you can replace the standard signature by one of the alternative
signatures, or switch it off completely for this message.


Security
========

   Select here which security measures you want to take for this
message.

             none: Normal mail transfer.
             sign: The message will be signed with your PGP public key
                   and saved in multipart/signed format.  The text of the
                   message will be readable without PGP.
          encrypt: The message will be encrypted using the recipient's
                   PGP key and saved in multipart/encrypted format.
 sign and encrypt: This is a combination of the two previous options,
                   allowing the recipient to check the sender's identity.
 send anonymously: The mail will be sent using an ANON service, so the
                   sender will stay anonymous.
          default: The mail will use whatever security measures have been
                   selected for this recipient in the address book, or
                   "none" if this recipient cannot be found there.

   Further information about PGP and security issues can be found in the
@{" PGP " link "PGP"} and @{" Configuration/Security " link "CO09"} chapters.

@endnode

@node "WRM1" "Write window - Text menu"
@next "WRM2"
@prev "WR02"
@toc "WR_W"

Write window - Text menu
************************


@{b}Text/New@{ub}
     Clears any text to start a new message.


@{b}Text/Open...@{ub}
     Opens an existing text file.


@{b}Text/Insert as >>  Plain@{ub}
     Inserts a text file at the current cursor position.


@{b}Text/Insert as >>  Quoted@{ub}
     Inserts a text file at the current cursor position, prefacing each
     line with the quote character (usually @{b}>@{ub}).


@{b}Text/Insert as >>  Alternate Quoted@{ub}
     Inserts a text file at the current cursor position, prefacing each
     line with an alternate quote character (usually @{b}|@{ub}).


@{b}Text/Insert as >>  ROT13 encoded@{ub}
     Inserts a text file at the current cursor position and replaces
     each letter with the one 13 characters ahead on the alphabet,
     cycling back from Z to A (so A->M, B->N, M->A) as appropriate.
     This very simple code is used for example for indecent humour.


@{b}Text/Save as...@{ub}
     Saves the current message (only the text part, without any header)
     to a file of your choice.


@{b}Text/Launch editor@{ub}
     This lets you compose your message with your favourite editor as
     specified in the @{" Write " link "CO05"} configuration.  Note that a few functions
     such as text styles and the @{" Glossary " link "DI_W"} may only be supported
     correctly in the internal editor.  Whenever you save in the
     external editor, the text in the internal editor is updated, due
     to the way the operating system interprets the file notification
     when you save the temporary file.

@endnode

@node "WRM2" "Write window - Edit menu"
@next "WRM3"
@prev "WRM1"
@toc "WR_W"

Write window - Edit menu
************************


@{b}Edit/Cut@{ub}
     Cuts the marked text and saves it to the clipboard.


@{b}Edit/Copy@{ub}
     Places in the clipboard a copy of the marked text.


@{b}Edit/Paste@{ub}
     Inserts the text on the clipboard at the current cursor position.


@{b}Edit/Paste as >>  Quoted@{ub}
     Inserts the text on the clipboard at the current cursor position,
     prefacing each line with the quote character (usually @{b}>@{ub}).


@{b}Edit/Paste as >>  Alternate Quoted@{ub}
     Inserts the text on the clipboard at the current cursor position,
     prefacing each line with the alternative quote character (usually
     @{b}|@{ub}).


@{b}Edit/Paste as >>  ROT13 encoded@{ub}
     Inserts a text file at the current cursor position, applying ROT-13
     encoding (see also under @{" Text/Insert as/ROT13 encoded " link "WRM1"}).


@{b}Edit/Undo@{ub}
     Undoes the last change made in the editor.


@{b}Edit/Redo@{ub}
     Restores the change just undone with 'Edit/Undo'.


@{b}Edit/Glossary@{ub}
     Opens the @{" Glossary " link "DI_W"} window.


@{b}Edit/Textstyle >>  Bold@{ub}
     Toggles bold type on or off for a marked block or for text entered
     subsequently.  In the resulting message, text in bold type is
     delimited by asterisks, thus: bold -> *bold*


@{b}Edit/Textstyle >>  Italic@{ub}
     Toggles italic type on or off for a marked block or for text
     entered subsequently.  In the resulting message, text in italics
     is delimited by slashes, thus: italic -> /italic/


@{b}Edit/Textstyle >>  Underlined@{ub}
     Toggles underlining on or off for a marked block or for text
     entered subsequently.  In the resulting message, underlined text is
     delimited by underline characters, thus: underline -> _underline_


@{b}Edit/Textstyle >>  Alternative color@{ub}
     Toggles colored type on or off for a marked block or for text
     entered subsequently.  The color is defined in the
     @{" Read configuration " link "CO04"}.  In the resulting message, the colored text
     is delimited by hash signs, thus: color -> #color#


@{b}Edit/Separators >>  Thin | Thick@{ub}
     Inserts a separator at the current cursor position.  This is done by
     inserting an extra line containing either @{b}<sb>@{ub} or @{b}<tsb>@{ub}.  YAM and
     other (MUI-) mail programs interpret this character sequence as a
     separator.


@{b}Edit/Emoticons >>  Happy | Indifferent | Sad/angry | Ironic@{ub}
     Inserts a 'smiley' at the current cursor position.  Smilies express
     your feelings about the topic and compensate for the loss of
     intonation when expressing yourself in writing rather than speech
     (see also @{" E-Mail Netiquette " link "NETI"}).


@{b}Edit/Type and spell@{ub}
     Switches automatic spellchecking on or off.  Spellchecking is a
     function of the Texteditor class and must be configured in
     @{" Settings/MUI " link "MAM4"}.  It must use an external program like @{b}AlphaSpell@{ub}.

     If you type in a word which is not in the dictionary, the screen
     flashes (and you will get an audible signal, too, if you have set
     this up in your Workbench Sound preferences).  Use <Amiga-Help>
     to get a list of suggestions for the correct spelling.

@endnode

@node "WRM3" "Write window - Attachments menu"
@next "WR02"
@prev "WRM2"
@toc "WR_W"

Write window - Attachments menu
*******************************


@{b}Attachments/Add file...@{ub}
     Equivalent to the [Add file] button in the @{" Attachments " link "WR01"} sheet.


@{b}Attachments/Add clipboard@{ub}
     Adds the contents of the clipboard as an attachment to your
     message, so you can easily include documents from other
     applications.


@{b}Attachments/Add PGP key@{ub}
     Use this to attach your @{" public PGP key " link "PGP"} to the message.
     The recipient can add this to his "keyring" and will then
     be able to send you messages signed and/or encrypted with PGP.

@endnode

@node "EDIT" "The internal editor"
@next "DI_W"
@prev "WR02"
@toc "WR_W"

The internal editor
*******************


   YAM uses the efficient MUI class TextEditor.mcc for message
handling.  Many aspects of the editor, such as keybindings,
spellchecking or fonts can be changed in the @{b}TextEditor@{ub} sheet of the
@{" MUI configuration " link "MAM4"}.  Although you can modify the keybindings, here
is a list of the important default settings in TextEditor 15.9:


        <Control-Up>         go to the start of the text
        <Control-Down>       go to the end of the text
        <Control-Left>       go to the start of the line
        <Control-Right>      go to the end of the line
        <Alt-Up>             previous page
        <Alt-Down>           next page
        <Alt-Left>           previous word
        <Alt-Right>          next word
        <RAmiga-x>           cut
        <RAmiga-c>           copy
        <RAmiga-v>           paste
        <RAmiga-z>           undo
        <RAmiga-RShift-z>    redo
        <Command-Help>       suggest a word
        <Del>                delete the character
        <Shift-Backspace>    delete to start of line
        <Shift-Del>          delete to end of line
        <Alt-Backspace>      delete to start of word
        <Alt-Del>            delete to end of word
        <Alt-Tab>            quit editor

   The TextEditor homepage can be found at

   http://sourceforge.net/projects/texteditor-mcc/

@endnode

@node "DI_W" "The Glossary"
@next "WR00"
@prev "EDIT"
@toc "WR_W"

The Glossary
************


   YAM's Glossary acts as a place to collect blocks of text which you
may use fairly frequently, such as templates for letters, greeting
phrases or frequently asked questions.  The text can be as long as
desired, extending over several lines.  Using the @{b}Edit/Glossary@{ub} menu
item or the <RAmiga-D> shortcut you can go straight from the
@{" internal editor " link "EDIT"} into the glossary.  Each entry has a name (e.g. "ys"
for "Yours sincerely") which you can see in the left-hand part of the
window.  Click on the name and you can edit the entry in the right-hand
side of the window.  A double click on the name pastes the text block at
the current cursor position and then closes the window.


Function of the buttons
=======================

@{b}New@{ub}
     Creates a new entry in the glossary.


@{b}Add selection@{ub}
     Creates a new entry in the glossary using the block marked in the
     text editor.  If no block is currently marked, YAM will try to
     paste the contents of the clipboard.


@{b}Delete@{ub}
     Deletes the selected entry from the glossary.


@{b}Paste@{ub}
     Pastes the highlighted entry into the text editor, at the current
     cursor position.

@endnode

@node "RE_W" "Read window"
@next "FO_W"
@prev "WR_W"
@toc "WI_W"

Read window
***********


   This window opens when you choose to read a message.  If you have
enabled multiple windows in the @{" Read configuration " link "CO04"}, then you can have
upto four of them open simultaneously.  The window is laid out as shown:


   Menu bar:

   @{" Message " link "REM1"}  @{" Navigation " link "REM2"}  @{" PGP " link "REM3"}  @{" Settings " link "REM4"}

  .--------------------------------------------------.  .----------.
  |                    @{" Toolbar " link "RE_B"}                     | | @{" status " link "MA0S"} |
  |__________________________________________________|  |__________|

  .----------------------------------------------------------------.
  |                        Message headers                         |
  |________________________________________________________________| You can
   ________________________________________________________________ <--
  |                                                                | click &
  |                                                                | drag the
  |                                                                | divider
  |                          Message body                          |
  |                                                                |
  |                                                                |
  `----------------------------------------------------------------'


Message status
==============

   At the top right corner there is a small field in which small icons
appear to display the @{" status " link "MA0S"} of the message (new, read, etc).


Headers
=======

   The amount of information displayed in the list of @{" headers " link "HEAD"} for the
selected message is set in the @{" configuration " link "CO04"}, but can be changed
(temporarily) with the @{" Settings " link "REM4"} menu.  If you want to copy some of the
lines to the clipboard, click and drag with the mouse to highlight the
lines.  The copy operation is automatic and the highlighting disappears.


Message body
============

   The largest field displays the message body.  Only text can be shown;
for graphics or sounds you must use an @{" external program " link "CO11"}.  Navigation
within the message uses the same keyboard shortcuts as the
@{" internal editor " link "EDIT"}.  In addition, you can use the spacebar to go forwards
one page and <Backspace> to go back to the previous page.  To copy part
of the message to the clipboard, click and drag with the mouse to
highlight the text; the copy operation is automatic and the
highlighting disappears immediately.

   If you double-click an e-mail address, a requester appears to let
you choose between writing a new mail to that address or add/edit that
entry in the address book; if you select the former, a new Write window
opens and the address is automatically pasted into the @{b}To:@{ub} header.

   A double click on a URL, either @{b}http://@{ub} or @{b}ftp://@{ub}, starts the macro
defined accordingly in the @{" Scripts configuration " link "CO13"} with the URL as
parameter (if @{b}OpenURL@{ub} is installed, it will be used in place of the macro).
This way you can copy WWW addresses to your web browser with very little
work.

@endnode

@node "REM1" "Read window - Message menu"
@next "REM2"
@prev "RE_B"
@toc "RE_W"

Read window - Message menu
**************************


@{b}Message/Edit...@{ub}
     Sends the current message to the message editor.  This option
     is only available for "Outgoing mail"-like folders.


@{b}Message/Move...@{ub}
     Moves the current message to a different folder.


@{b}Message/Copy...@{ub}
     Creates a copy of the current message.  With the exception of the
     filename, the copy is identical to the original.


@{b}Message/Delete@{ub}
     Deletes the current message and loads the next one into the Read
     window.  Unless the option @{b}Remove messages immediately@{ub} is enabled
     in the @{" Miscellaneous " link "CO14"} configuration settings, the message is
     actually moved into the @{b}Deleted@{ub} folder, from which it can be
     recovered if needed.  The <Del> key works as a convenient keyboard
     shortcut, while <Shift-Del> forces an immediate (irreversible)
     deletion, no matter which configuration settings are in use.


@{b}Message/Print...@{ub}
     Sends the current message, or a part of it, to the printer.  A
     requester opens to let you choose whether to print the original
     message without decoding (raw format), print the decoded text as
     diplayed, or print an attached text file.  Note that you cannot
     print binary data such as graphics; for that purpose you must use
     the relevant print option in the appropriate @{" MIME viewer " link "CO11"}.


@{b}Message/Save...@{ub}
     Saves the current message or a part of it to your hard disk,
     floppy, etc.  Again a requester appears to let you choose whether
     to save the message in raw format, the decoded message (as it
     appears in the Read window), or to save one of the attached files.


@{b}Message/Attachments >>  Display...@{ub}
     Displays the current message or part of it using the MIME viewer
     selected in the @{" MIME configuration " link "CO11"}.  You can choose whether to
     display the message in raw format (to check for errors) or to view
     one of the attached files.  If nothing happens, check the settings
     for MIME viewers in the configuration.


@{b}Message/Attachments >>  Save all...@{ub}
     Saves all the files attached to the current message to the
     directory you select.


@{b}Message/Attachments >>  Crop@{ub}
     Deletes all the attached files for the current message in order to
     save disk space.  @{b}BEWARE:@{ub} these files are not sent to the @{b}Deleted@{ub}
     folder, so be sure that you don't want to keep any of them!  This
     function only applies to messages in @{" MIME format " link "MIME"}.  A notice is
     added to the end of the message about the removed files.


@{b}Message/New@{ub}
     Opens the @{" Write window " link "WR_W"} so you can compose a new message.


@{b}Message/Reply...@{ub}
     Use this to reply to the current message.  Subject and recipient
     fields are filled in automatically and the original message is
     quoted, unless the @{" Reply " link "CO06"} configuration settings say otherwise.


@{b}Message/Forward...@{ub}
     Use this to forward the contents of the message to another
     recipient.  The subject and the message body are automatically
     copied and a new message header is created.  The text for
     forwarding defined in the @{" Reply " link "CO06"} configuration is inserted in the
     message.


@{b}Message/Bounce...@{ub}
     Use this to send the original, unaltered message to another
     recipient.  The only changes made are to enter a new @{b}To:@{ub} header
     while YAM adds a couple of @{b}Resent:@{ub} headers based on the original
     "To:" header.  The text for forwarded messages (as defined in the
     configuration) is not used here.


@{b}Message/Save address...@{ub}
     The address of the sender (or the recipient, depending on the type
     of folder) of the current message is added to your @{" address book " link "AB_W"}.
     If the message has multiple recipients, you have the option of
     creating a new distribution list.


@{b}Message/Set status@{ub}
     Lets you change the status of the current message to >>
     Marked | Unmarked | Read | Unread | Hold | Queued | Spam | No Spam


@{b}Message/Change subject...@{ub}
     This lets you change the subject of the current message, so you
     can amend uninformative "Subject:" headers on some messages you have
     received.  The original subject is saved in a @{b}X-Original-Subject:@{ub}
     header, to facilitate following a thread back.

@endnode

@node "REM2" "Read window - Navigation menu"
@next "REM3"
@prev "REM1"
@toc "RE_W"

Read window - Navigation menu
*****************************


@{b}Navigation/Next message@{ub}
     This displays the next message, i.e. the one below the current
     message in the main window.  Shortcut: <cursor right>


@{b}Navigation/Previous message@{ub}
     This displays the previous message, i.e. the one above the current
     message in the main window.  Shortcut: <cursor left>


@{b}Navigation/Next unread message@{ub}
     This displays the next unread message below the current message in
     the main window.  If there are no more unread messages below the
     current message in the current folder but there is some in one of
     the following folders, you will be notified about it and asked if
     you want to jump to that folder and continue reading there.
     Shortcut: <Shift-cursor right>


@{b}Navigation/Previous unread message@{ub}
     This displays the previous unread message above the current
     message in the main window.  If there are no more unread messages
     above the current message in the current folder but there is some
     in one of the previous folders, you will be notified about it and
     asked if you want to jump to that folder and continue reading
     there.  Shortcut: <Shift-cursor left>


@{b}Navigation/Next message in thread@{ub}
     This displays the message which replies to the current message.
     This allows you to e.g. follow a dialogue between yourself and
     another person, regardless of what other messages are there.
     However, please note that to find the reply in a different folder,
     YAM must load the index files for all the folders, and this can
     take a while.  YAM compares the @{" Message-ID " link "HEAD"} header of the current
     message with the @{i}In-Reply-To:@{ui} header of the other messages.  If no
     answer can be found, the screen will flash briefly.


@{b}Navigation/Previous message in thread@{ub}
     Loads the message to which the current message is replying (see
     the item above).

@endnode

@node "REM3" "Read window - PGP menu"
@next "REM4"
@prev "REM2"
@toc "RE_W"

Read window - PGP menu
**********************


@{b}PGP/Extract public key(s)@{ub}
     If the sender of the current message has attached his
     @{" public PGP key " link "PGP"}, you can copy this to your "key ring".  You can
     then use this if this person sends you any encrypted message.


@{b}PGP/Check PGP signature@{ub}
     Verifies the signature of the current message.  This works only
     with PGP signed messages and serves to ensure that the message has
     not been tampered with and is really from the sender it claims to
     be.


@{b}PGP/Save decrypted message@{ub}
     On the grounds of security, a @{" PGP encrypted " link "PGP"} message is saved to
     the hard disk as it stands.  To open it, you have to use the key
     each time.

     You can use this menu item to save the decrypted message to the
     hard disk, overwriting its PGP encrypted counterpart.

@endnode

@node "REM4" "Read window - Settings menu"
@next "RE_B"
@prev "REM3"
@toc "RE_W"

Read window - Settings menu
***************************


   These choices only apply to the current session; when you open a new
Read window, the @{" Read " link "CO04"} configuration settings are used.


@{b}Settings/No headers | Short headers | Full headers@{ub}
     Use these to select how much header information you want to see in
     the Read window.


@{b}Settings/No sender info | Data fields only | Data and image@{ub}
     This selects how much of the information saved in your @{" address book " link "AB_W"}
     about the sender is to be displayed.


@{b}Settings/Wrap headers@{ub}
     Choose whether to show a long header on one line or to break it
     across two or more.  In the former case you will need to use the
     horizontal scrollbar in order to see all the information.


@{b}Settings/Textstyles@{ub}
     YAM will use the characters '_', '/', '*' and '#' to render
     underlined, italic, bold and colored text respectively.  For
     certain documents, such as source code, this can complicate things
     as some characters will be suppressed.  Thus, you have the choice
     of temporarily switch the rendering of text styles on or off.

@endnode

@node "RE_B" "Read window - toolbar"
@next "REM1"
@prev "REM4"
@toc "RE_W"

Read window - toolbar
*********************


          .---.---.---.---. .---.---.---. .---.---.---.---. .---.
          | 1 | 2 | 3 | 4 | | 5 | 6 | 7 | | 8 | 9 |10 |11 | |12 |
          `---^---^---^---' `---^---^---' `---^---^---^---' `---'

      Button      Shortcut    Equivalent to menu...

  1.  [Prev]      P,<left>    @{" Navigation/Previous message " link "REM2"}
  2.  [Next]      N,<right>   @{" Navigation/Next message " link "REM2"}
  3.  [PrevThr]   T           @{" Navigation/Previous message in thread " link "REM2"}
  4.  [NextThr]   H           @{" Navigation/Next message in thread " link "REM2"}

  5.  [Display]   D           @{" Message/Attachments/Display... " link "REM1"}
  6.  [Save]      S           @{" Message/Save... " link "REM1"}
  7.  [Print]     I           @{" Message/Print... " link "REM1"}

  8.  [Delete]    L,<Del>     @{" Message/Delete " link "REM1"}
  9.  [Move]      M           @{" Message/Move... " link "REM1"}
 10.  [Reply]     R           @{" Message/Reply... " link "REM1"}
 11.  [Forward]   W           @{" Message/Forward... " link "REM1"}

 12.  [Spam]      A           @{" Message/Set status " link "REM1"}


   Additional features are available by clicking a toolbar button while
holding down a certain qualifier key:

 Shift + [Prev]     Displays the previous unread message
 Shift + [Next]     Displays the next unread message
 Shift + [Delete]   Immediately deletes the selected messages
 Shift + [Reply]    Forces a private reply (address in the "From:" field
                    is used)
 Shift + [Forward]  Bounces the message
 Alt   + [Reply]    Forces a mailing list reply, using the address in the
                    "Reply-To:" field
 Ctrl  + [Reply]    Avoids quoting the original message
 Ctrl  + [Forward]  Avoids forwarding any attachment

@endnode

@node "FO_W" "Editing a folder"
@next "AB_W"
@prev "RE_W"
@toc "WI_W"

Folder settings
***************


   Apart from the standard 'Incoming', 'Outgoing', 'Sent' and 'Deleted'
folders, you can create any number of additional folders.  These folders
are useful e.g. for archiving received and/or sent mail, or for
administrating mailing lists.

   Whenever you create a new folder or edit one that already exists, a
settings window will open with the following options:


@{b}Name@{ub}
     The name of the folder will appear in the folder listing in the
     main window.

     Example:  YAM mailing list


@{b}Path@{ub}
     This is the path in which the messages, the @{b}.fconfig@{ub} file and the
     @{b}.index@{ub} file of the actual folder will be saved.  Usually this is a
     subdirectory of the actual basic folder directory, but you can
     specify any other place, like another hard disk partition for
     example.

     Example:  YAM_ml


@{b}Max. age@{ub}
     If you like, you can make YAM delete messages exceeding a certain
     age automatically.  To do so, just drag the slider to select a
     value different from zero (which stands for the maximum age of the
     mail, in @{b}days@{ub}).  Then switch to the 'Start/Quit' configuration
     sheet and activate the option 'Delete old mail'.

     @{b}NOTE:@{ub} Messages with the status 'new' or 'unread' will not be
     deleted automatically.


@{b}Type@{ub}
     Here you choose if the folder is for incoming and/or sent mail.
     This influences the column titles and whose address is displayed
     in the message list.


@{b}Mode@{ub}
     Folders can be protected with a password and/or be compressed if
     necessary.  There are the following modes available:

     normal                    no password protection, no compression
                               + fast
                               - no protection of your e-mail from third persons
                                 with access to your computer

     simple protection         simple password protection, no compression
                               + fast
                               - your e-mails are protected within YAM only

     compressed                XPK compression without password protection
                               + saves hard disk space
                               - slow, no protection for your e-mail

     compressed with password  XPK compression with password protection
                               + saves hard disk space, good protection
                               - slow

     The XPK software package is needed for compressing.  It is not
     contained in the YAM archive, but can be downloaded e.g. from
     Aminet for free.  The settings for the compression library can be
     found at @{" Miscellaneous " link "CO14"}.


@{b}Sort by@{ub}
     Here the primary order of the messages in the chosen folder is
     specified.  You can have the mail sorted by message date, date
     sent/received, sender, recipient, subject, size or status.
     Concerning the message status, the messages will be sorted in
     the following orders:

       new > unread > read > replied > forwarded (for incoming mail)
       error sending > hold > in queue > sent (for outgoing mail)

     Additionally, several flags are also taken into account:

       1. important
       2. marked
       3. PGP encrypted
       4. PGP signed
       5. status report
       6. contains attachments

     With the option 'Rev', the order will be reversed (e.g. Z-A
     instead of A-Z).


@{b}Then by@{ub}
     Here the secondary order of the messages in the chosen folder is
     specified.  If for example mails are sorted by subject on a first
     instance, messages with the same subject can be sorted by date or
     author using this second key.


@{b}AppIcon stats@{ub}
     Enable this if you want this folder's statistics to be added to
     those shown in the application icon that YAM usually puts on the
     Workbench screen.  By default, only the stats for the 'Incoming'
     folder are noted there.

     Exactly what data appears under the appicon depends on the label
     set in the @{" Miscellaneous settings " link "CO14"}.


@{b}Mailing list support@{ub}
     Since not all mailing list servers set the "Reply-To:" field to the
     correct address (which would be the mailing list address), YAM can
     help you to work around this problem, offering also some other
     nice tricks for a good measure.

     When you reply to a mail contained in this folder, YAM checks if
     the data in the "To:" field of the original message is matched by
     the contents of the @{b}To: pattern@{ub} field -- if they do, the address
     entered in the @{b}To: address@{ub} field will be inserted as the recipient
     instead of the recipient's address contained in the original
     message.

     Additionally, if you have entered a @{b}From: address@{ub}, this will
     replace your e-mail address when posting to the mailing list.
     This is useful if you use different e-mail addresses for different
     mailing lists, or just want to avoid SPAM.

     You can also enter a @{b}Reply-To: address@{ub} in case the mailing list
     software doesn't set this.

     The @{b}Autodetect@{ub} button will try to guess what @{b}To: pattern@{ub} and
     @{b}To: address@{ub} data should be used by scanning the first 5 messages
     in the folder using the Smith&Waterman algorithm to search for
     similarities between strings.  This should make it easier to find
     the correct mailing list pattern.

     Lastly, you can select the signature that will be used by default
     when replying or posting new messages to this mailing list.

     Examples on how to use the mailing list support settings are given
     in the @{" Tips & tricks " link "TIP4"} chapter.

@endnode

@node "AB_W" "Address book"
@next "TR_W"
@prev "FO_W"
@toc "WI_W"

Address book
************


   @{" Menu bar " link "AB_M"}

  .----------------------------------------------------------------.
  |                           @{" Toolbar " link "AB_B"}                            |
  |________________________________________________________________|

  .----------------------------------------------------------------.
  | Alias    |     Name     |   Description   |       Address      |
  |----------|--------------|-----------------|--------------------|
  |js        | John Smith   | mate            | jsmith\@example.com |
  |          |              |                 |                    |
  |          |              |                 |                    |
  |          |              |                 |                    |
  `----------------------------------------------------------------'

   By default, the list displays four columns as above, but you can (of
course) change the @{" address book configuration " link "CO12"} to include phone numbers,
for example.  You can click and drag the column dividers to reposition them.

   Double click on an entry to see or edit the information in the
@{" Edit address " link "EA_W"} window.  In addition to the fields mentioned, you can
enter the postal address, PGP key, homepage URL, date of birth and a
picture.

   An entry must contain at least the real name and some e-mail
address.  The point of the Alias is to save typing; you can put a short
nickname, or initials, into the @{b}To:@{ub} field of an e-mail message and let
YAM fill in the details.  For this to work, the alias obviously has to
be unique for each entry.

   In addition to personal entries, the address book can also contain
@{i}Lists @{ui}of individual recipients which can be invoked with a single
alias.  Lists are best used for circular e-mails, and are marked with
the list symbol (three little heads).

   Both individual entries and lists can be put into Groups, which are
like subdirectories, used to keep the address book clearly arranged.
Group names are displayed in bold.  You can open a group to display the
names in it by clicking on the little arrow in front of their name.

   Use @{" drag & drop " link "Drag"} to move an entry from one group into another.

@endnode

@node "AB_B" "Address book - toolbar"
@next "AB_M"
@prev "EA_W"
@toc "AB_W"

Address book - toolbar
**********************


@{b}Save@{ub}
     Saves the address book to your hard disk.


@{b}Find@{ub}
     Searches the address book for a specific text string.  All variables
     contained in the database will be searched with full support of
     @{" AmigaDOS patterns " link "DOSW"}.  If the result of the search is positive the
     alias and the name of the found entry will be displayed.  You can
     then do another search or edit the found entry.  For example,

            Anna#?

     finds all Annas contained in the address book.


@{b}Person, List, Group@{ub}
     All three buttons open the @{" Edit address " link "EA_W"} window to add a new entry
     to the address book; however, the appearance of the window depends
     on the type of entry, since the information stored is different.


@{b}Edit@{ub}
     This also opens the Edit address window, to see or edit the
     information stored.  Again, the layout depends on the type of entry.


@{b}Delete@{ub}
     Deletes the selected entry from the address book.


@{b}Print@{ub}
     Prints the selected entry.


@{b}Unfold@{ub}
     Unfolds all groups (subdirectories) of the address book so all
     entries will be visible.


@{b}Fold@{ub}
     Folds all groups (subdirectories) of the address book so only the
     entries at the top of the hierarchy will be visible.


@{b}To:@{ub}
     Uses the selected entry as the primary recipient of a new e-mail.
     If the address book window has been opened from the main window,
     a new 'Write' window will appear.


@{b}CC:@{ub}
     Uses the selected entry as secondary recipient of a new e-mail.
     If the address book window has been opened from the main window,
     a new 'Write' window will appear.


@{b}BCC:@{ub}
     Uses the selected entry as recipient of a hidden copy of a new
     e-mail.  If the address book window has been opened from the main
     window, a new 'Write' window will appear.

@endnode

@node "AB_M" "Address book - Menus"
@next "EA_W"
@prev "AB_B"
@toc "AB_W"

Address book - Menus
********************


@{b}Address book/New@{ub}
     Starts a new address book; all existing entries of the address book
     currently resident in RAM will be deleted.  @{b}CAUTION:@{ub} Save your old
     address book with another name before selecting this option!!


@{b}Address book/Open...@{ub}
     Opens an existing address book from your hard disk.  The address
     book currently resident in RAM will be replaced.

     If you try opening a file that does not seem to be a valid YAM
     address book, you will be offered the chance to load it as a list
     of email addresses, with one address per line.  Items can be
     specified as

      <email\@example.com> Real name

     or

      email\@example.net

     because names are optional.  YAM will automatically create aliases
     for the new items.


@{b}Address book/Append...@{ub}
     Loads another address book from your hard disk and appends its
     contents to the address book currently resident in RAM.  See
     also the previous option.


@{b}Address book/Save@{ub}
     Saves the address book to your hard disk.


@{b}Address book/Save as...@{ub}
     Saves the address book with a name of your choice so you can keep
     several different address book files.


@{b}Address book/Find...@{ub}
     Searches the address book for a certain string.  See @{" TOOLBAR " link "AB_B"}/Find
     for more info.


@{b}Address book/Print...@{ub}
     Prints the whole address book.  Select @{b}Short format@{ub} to print a
     single line for each entry, or @{b}Long format@{ub} for a more verbose
     printout, needing several lines for each entry.


@{b}Entry/New person...@{ub}
@{b}Entry/New distribution list...@{ub}
@{b}Entry/New group...@{ub}
     They open the @{" Edit address window " link "EA_W"} to add a new entry to the
     address book.  The appearance of the window depends on the type
     of entry.


@{b}Entry/Edit...@{ub}
     The selected entry can be modified in the @{" Edit address window " link "EA_W"}.


@{b}Entry/Duplicate@{ub}
     Duplicates the selected entry.  The alias will be adjusted
     automatically.


@{b}Entry/Delete@{ub}
     Deletes the selected entry from the address book.


@{b}Entry/Print@{ub}
     Prints the selected entry immediately.  (Who would have guessed it?
     ;) ).


@{b}Sort/by...@{ub}
     Sorts the address book by alias, last name, first name,
     description or e-mail address.  Please note that 'First name' is
     related to the first word in the 'Full name' text field while
     'Last name' is related to the last word in this text field.

@endnode

@node "EA_W" "Address book - Entering addresses"
@next "AB_B"
@prev "AB_M"
@toc "AB_W"

Entering addresses
******************


   In this window a single address book entry can be edited.  According
to the kind of entry (person, list or group), you will see a different
set of editing fields.  Click [Okay] to accept the changes, or [Cancel]
if you change your mind.

PERSON
======

---- Electronic mail -----------------------------------------------------

@{b}Alias@{ub}
     An 'Alias' is a convenient short name that identifies the address
     book entry unambiguously.  Its function is to save typing -- you can
     put the alias into the "To:" field of a message, and YAM will fill
     in the details when sending the message.  If you leave this field
     blank, YAM will create an alias for the entry on its own.

     Example:  JohnD


@{b}Real name@{ub}
     The person's first name and surname.

     Example:  John Doe


@{b}Email address@{ub}
     The Internet mail address to use to send mail to this person.

     Example:  jdoe\@example.com


@{b}PGP key ID@{ub}
     The hexadecimal code of this person's PGP public key, needed to
     send the recipient a PGP encrypted message.  Click the pop-up
     button to select the key from your public keyring; PGP must be
     installed on your system and the key you're looking for must be
     there.

     Example:  0x709B40C3


@{b}Homepage@{ub}
     The URL for the person's homepage in the World Wide Web.  YAM
     can connect to this address via your browser, provided that the
     appropriate script is specified in the @{" scripts " link "CO13"} configuration
     for 'When double clicking a URL' or you have @{b}OpenURL@{ub} installed,
     in which case the latter will get priority.  All you have to do
     is to click on the button to the right of the textfield.

     Example:  http://come.to/mars


@{b}Security@{ub}
     The security level to use by default when sending email to this
     person.


---- Snail mail ----------------------------------------------------------

@{b}Street@{ub}
     Street and house number of the postal address.

     Example:  43 High street


@{b}City / ZIP@{ub}
     City and (ZIP) postcode (who would have guessed that...).

     Example:  Shrewsbury SY1 3PE


@{b}State / Country@{ub}
     State/Country where this person lives.

     Example:  Shropshire, England


@{b}Phone number(s)@{ub}
     One or more phone numbers (voice, FAX, mobile phone, whatever...).


---- Miscellaneous -------------------------------------------------------

@{b}Description@{ub} (applies to person, list or group)
     Any comment you'd like to have stored to describe the current
     entry.

     Example:  My beloved one ;-)


@{b}Date of birth@{ub}
     The person's date of birth.  Enter it in the format DD-MMM-YYYY.

     Example:  12-Dec-1967


---- Portrait ------------------------------------------------------------

@{b}Select@{ub}
     Here you can select a picture (preferably a portrait) of the
     person.  Since YAM uses the datatypes.library, you may use any
     kind of picture format as long as you've installed the datatypes
     needed for displaying it.  If you desire so, this picture will
     show up whenever you display a message written by this person
     (see 'Sender info' in the @{" Read " link "CO04"} configuration).


@{b}Download@{ub}
     You can find a steadily growing number of portraits of other
     users of YAM on the YAM homepage.  YAM can access this data bank
     automatically -- all you need to do is enter the name and/or the
     e-mail address, connect to the Internet and click the @{b}Download@{ub}
     button.  YAM starts by getting a list of available photos and
     searching it for the named person.  If found, any information
     missing from the address book entry (Name, e-mail address and
     homepage) will be made good and the picture downloaded and saved
     in the gallery.



LIST
====

@{b}Alias@{ub}
     Same as described above.


@{b}Return address@{ub}
     If you'd like to maintain a small mailing list using a YAM
     distribution list, you will have to correct the "Reply-To:"
     addresses of the original messages, otherwise the answer to
     an e-mail would be returned to the message's author and not
     to the mailing list as you would probably want.  Enter here
     the return address you'd like to use, or click the pop-up
     button to open the address book window and then drag an entry
     from there into this field.

     Example:  discussion\@example.net


@{b}Mailing list name@{ub}
     When maintaining a mailing list by using a YAM distribution list,
     enter the mailing list's name here.  This name will appear in the
     @{b}To:@{ub} header field to help the recipient to sort the mail correctly
     by using filters.

     Example:  discussion-ML


@{b}Members@{ub}
     A list of all current members of the distribution list.  You may
     enter aliases, names or complete e-mail addresses.  Click on [New]
     to add a new list member, [Delete] to delete the highlighted entry
     or [Sort] to have all entries sorted alphabetically.



GROUP
=====

   Only the @{b}Alias@{ub} and @{b}Description@{ub} fields apply in this case.

@endnode

@node "TR_W" "Mail transfers"
@next "FI_W"
@prev "AB_W"
@toc "WI_W"

Mail transfers
**************


   While fetching, sending, importing or exporting mail, YAM opens a
transfer window that gives you some control over the process.

   If pre-selection is enabled, YAM will display a list of the messages
available for import or download.  Depending on your settings, messages
exceeding the maximum size may be the only ones appearing in the list,
to make it easier for you to decide what to do with them without having
to face a too cluttered list: messages below the maxium size will just
be downloaded silently.  Two explanatory status symbols may appear at
the left of the message: a little trashcan means the message will be
deleted from the server, whereas the disk icon indicates that the
message will be downloaded.  Therefore, there exist the following
possibilities:


  Trashcan    Disk     Action
  ----------------------------------------------------------------------
   yes        yes      The message will be downloaded and then deleted
                       from the server
   yes        no       The message will be deleted immediately -- the
                       preferred action for unsolicited commercial e-mail.
   no         no       The message will remain on the server and won't be
                       downloaded.
   no         yes      The message will be downloaded, but not deleted
                       from the server.


Meanings of the buttons
=======================

@{b}All@{ub}
     Selects all messages in the list for a subsequent change of
     status.  This button has no effect on the action to be taken.


@{b}None@{ub}
     Clears the current selection.  This button has no effect on the
     action to be taken.


@{b}Download & delete@{ub}
     Sets both the diskette and trashcan icons for all selected
     messages -> download and remove on server.

     This button is not available when importing mail.


@{b}Download only@{ub}
     Sets the diskette icon and clears the trashcan icon for all
     selected messages -> download, but leave on server.


@{b}Leave@{ub}
     Clears both the diskette and trashcan icons for all selected
     messages -> no action.


@{b}Delete only@{ub}
     Clears the diskette icon and sets the trashcan icon for all
     selected messages -> do not download, but delete on server!

     This button is not available when importing mail.


@{b}Stop/Proceed@{ub}
     As long as the pre-selection list is displayed, YAM loads details
     of the separate messages -- the headers are retrieved from the
     server.  The @{b}Stop@{ub} button halts this process.

     This button is not available when importing mail.


@{b}Start@{ub}
     The selection stage ends and the actual mail transfer begins.


@{b}Abort@{ub}
     The mail transfer is terminated immediately.


   In the @{b}Status@{ub} panel you can see how many kbytes and how many messages
have been transferred so far, at what rate, and how long the transfer
will take.  The rate is measured in characters per second.  Do not be
disappointed if the transmission seems not to measure up to the speed of
the modem.  The transfer of a short message requires a relatively large
time for negotiation between YAM and the server, which is not taken into
account while computing the calculated rate.  You can try it yourself by
sending yourself a message with a large attachment (e.g. 100kB).

   The @{b}Abort@{ub} button forces a premature end of the transfer.  It only
works while YAM has control over the transfer -- if YAM apparently
'freezes' because the server is not doing anything, either wait for the
timeout or just break the connection by forcing your TCP/IP stack to go
offline.

@endnode

@node "FI_W" "Finding messages"
@next "US_W"
@prev "TR_W"
@toc "WI_W"

Finding messages
****************


   If you have many messages and folders, it is easy to lose track of
them all.  You know you have saved a message on a particular topic, but
where?  YAM's search function solves this problem.

   In the upper half of the window you define the query.  On the left
you can select one or more folders in which to search.  On the right you
define the @{" Search criterion " link "FI_K"}.  In the lower half of the window you will
get a list of messages which match the query.


Functions of the buttons
========================

@{b}everywhere@{ub}
     Includes all folders in your search.


@{b}Use filter settings@{ub}
     Replaces the search criterion with a @{" filter " link "CO03"}.


@{b}Add as new filter@{ub}
     Creates a new @{" filter " link "CO03"} using the current search criterion.


@{b}Start search@{ub}
     Starts the search process.  Matching messages are shown in the
     results list below.  The search can be stopped by clicking on @{b}Abort@{ub}.


@{b}Select matched@{ub}
     Selects all the messages listed as a result of the search,
     highlighting them in the @{" message list " link "MA01"} of the main window.


@{b}Read message@{ub}
     Displays the contents of the last selected message in the results
     list.  Double-clicking on the name in the results list has the same
     effect.

@endnode

@node "FI_K" "Finding messages - Search criteria"
@next "FI_W"
@prev "FI_W"
@toc "FI_W"

Finding messages - Search criteria
**********************************


@{b}Search in@{ub}
     Here you select what part of the message is going to be compared
     with the search pattern.  If you want to search in a header line,
     you can either pick one out of the list or choose @{b}Other field:@{ub} and
     type the name of the header in the text field on the right.
     @{b}Message body@{ub} forces the whole message to be searched, except for
     the headers.  Please note that a full text search can take a long
     time, since YAM will have to decode any MIME attachments before it
     can search them.

     Example:  Other field: X-Mailer


@{b}Comparison@{ub}
     The instruction has two components, the comparison operator and
     the search pattern.

     YAM supports the following comparison operators:

      =   the text which is compared must match the search pattern
      <   the text must be "less than" the search string
      >   the text must be "greater than" the search string
      <>  the text must be "different" from the search string
      IN  the text must match a pattern contained in the file which is
          specified in the text field to the right side of the comparison
          cycle gadget.  Instead of a search pattern itself, the name of a
          file is to be inserted here, containing one or several lines of
          search patterns.  This way it is possible to create the so-called
          'Killfile' containing a list of e-mail addresses.  Click the magnifier
          looking icon to edit the file.

     The comparison operators @{b}<@{ub} and @{b}>@{ub} work using alphanumeric ordering
     as used for names in a telephone directory, so James < Jim and 12
     < 2.

     The search pattern may contain AmigaDOS @{" wildcards " link "DOSW"} such as @{b}?@{ub}, @{b}#?@{ub},
     @{b}(a|b)@{ub} or @{b}[abc]@{ub}.  Please note that the search pattern @{b}[YAM]#?@{ub} will
     match any message beginning with Y, A or M.  To filter email coming
     from a mailing list (for example, a mailing list related to YAM),
     you should use the search pattern @{b}#?YAM#?@{ub} or, even better, have
     the filter compare the @{b}Reply-To@{ub} field with the address of the
     mailing list.

     Example:  = YAM 1.3.#?


@{b}Address/Name@{ub}
     If you want to search a header field containing an e-mail address,
     you can specify here whether the search pattern should be
     processed on the address (e.g. @{b}jdoe\@example.com@{ub}) or on the
     author's name (e.g. @{b}John Doe@{ub}).


@{b}Case sensitive@{ub}
     Activate this option if you want the search to distinguish between
     normal and capital letters.


@{b}Substring search@{ub}
     If the search pattern consists of only a part of the header field
     which is to be searched through, you must activate this option -
     YAM will then complete the search pattern with #? internally.

@endnode

@node "US_W" "User administration"
@next "MA_W"
@prev "FI_W"
@toc "WI_W"

User administration
*******************


   YAM will satisfy the needs of a large family, being able to handle
upto 16 users, who can each have their own folders and configuration
settings.  While starting YAM, you can say who you are and immediately
use your own personal setup, making programs like MultiYAM become
redundant.  Selecting the @{b}Settings/Users@{ub} menu item brings you to the
Users window.


@{b}User name@{ub}
     This is the name of the user.  It will appear in the welcome
     dialogue on startup, provided that at least two users are defined.
     The active user appears highlighted.

     Example:  Bill Brown


@{b}Password@{ub}
     If you fill in this field, a password requester will appear on
     startup if you present yourself as this user.


@{b}Mail directory@{ub}
     This is the home directory for all user-specific files, such as
     folders and configuration settings.  Obviously, this directory
     must be different for any user in the system.

     Example:  PROGDIR:bill


@{b}Use global address book@{ub}
     Enable this option if the user won't be using his or her own
     address book.  The address book is then shared with at least
     the default user -- the file is kept in the program home
     directory and not in the user's home directory.


@{b}Use global glossary@{ub}
     Enable this option if the user will not maintain a separate
     glossary but will instead share one with at least the default
     user.  The file is kept in the program home directory and not
     in this user's home directory.


@{b}Supervisor privileges@{ub}
     Enable this option to allow the user to create or remove other
     users.


@{b}Copy configuration from current user@{ub}
     If you are adding a new user, you can select this option and copy
     the current settings to the new user directory, thus saving the
     new user some tedious work setting up a whole new configuration
     from scratch.


@{b}Add user@{ub}
     Adds a new user to the list.


@{b}Delete user@{ub}
     Deletes the selected user from the list.

@endnode

@node "Drag" "Drag & Drop"
@next "Drag"
@prev "Drag"

Drag & Drop
***********


   Like many modern programmes, YAM supports drag&drop.  This means that
you can grab an object with the left mouse button and drop it over
another object by releasing the mouse button to trigger some operation.

   YAM supports the following drag&drop operations:


  Source           Destination      Operation
  -----------------------------------------------------------------------
  Message list     Recipient field  Extract recipient from message
  Message list     Attachment list  Add message as attachment
  Message list     Folder list      Move messages
  Folder list      Folder list      Rearrange folders
  Attachment list  Attachment list  Rearrange attachments
  Address book     Address book     Rearrange address book entries
  Address book     Recipient field  Get recipient from address book
  Address book     Editor window    Insert address in letter
  Address book     Member list      Add members to distribution list
  Member list      Member list      Rearrange list members
  Text file        Editor window    Insert file in letter
  Text file        Attachment list  Add file as attachment
  Text file        AppIcon          Use file as text in new message
  Binary file      AppIcon          Use file as attachment in new message
  Binary file      Editor window    Add file as attachment
  Binary file      Attachment list  Add file as attachment

@endnode

@node "RF_W" "Reference"
@next "TIPS"
@prev "WI_W"
@toc "Main"

Reference
*********


 @{" Startup options   " link "RF00"}  - Tooltypes and shell options
 @{" ARexx interface   " link "RF01"}  - Controlling YAM from within other programs
 @{" Install structure " link "RF02"}  - How a working YAM install is organized
 @{" Message storage   " link "RF03"}  - How email is stored and indexed on disk
 @{" Theme handling    " link "RF04"}  - Adding/changing the themes used by YAM
 @{" File formats      " link "RF05"}  - Misc. file formats

@endnode

@node "RF00" "Reference - Startup options"
@next "RF01"
@prev "RF05"
@toc "RF_W"

Reference - Startup options
===========================


   YAM supports some startup options, which can be used both from the
Shell and as Workbench tooltypes.


@{b}USER=<user name>@{ub}
     Selects the active YAM user.  This way you can skip the login
     procedure on startup in case you've created multiple users.


@{b}PASSWORD=<password>@{ub}
     This is the password for the selected user (see above).  It serves
     to avoid the password request on startup, but bear in mind that
     storing the password in a tooltype poses an obvious security risk.
     Also, the password is case sensitive.


@{b}MAILDIR=<path>@{ub}
     Sets the home directory for the folders and configuration files.
     In YAM 1.3.x this option was used to implement multi-user support;
     YAM 2.x sets the home directory for each user in the user
     configuration.


@{b}PREFSFILE=<filename>@{ub}
     Configuration file that should be used.  Default is
     @{b}<MAILDIR>/.config@{ub}.


@{b}HIDE@{ub}
     Starts YAM in iconified mode.


@{b}NOCHECK@{ub}
     Starts YAM without trying to download/send new mail nor check
     birthdays on startup.  Useful if you are starting YAM from a web
     browser, for example.


@{b}DEBUG@{ub}
     This option sends the conversation between YAM and the mail
     server to a console window.  This is a very valuable tool
     if the connection to your mail server keeps failing.


@{b}MAILTO=<recipients>@{ub}
     Creates a new message for the specified recipients on startup.
     You can use not only a full email address, but also an alias or
     a real name that can be found in your address book, as YAM will
     expand them as appropriate.  Use commas to separate each recipient.

     Example:  MAILTO="Marcel Beck, damato, mum\@example.org


@{b}SUBJECT=<subject>@{ub}
     Sets the subject for the new message (see MAILTO).


@{b}LETTER=<filename>@{ub}
     The text file containing the letter you want to send (see MAILTO).


@{b}ATTACH=<filename>@{ub}
     Attaches a file to the new message (see MAILTO).


   A couple of examples:

            YAM USER Tom PASSWORD secret HIDE
            YAM NOCHECK MAILTO "yam\@freelists.org, YAMOS-dev, John Doe"
                SUBJECT "Bug Report" ATTACH "ram:debug.txt"

@endnode

@node "RF01" "Reference - ARexx interface"
@next "RF02"
@prev "RF00"
@toc "RF_W"

Reference - ARexx interface
===========================


   With the help of ARexx scripts, you can add new functions to YAM or
let it do things automatically.  YAM offers a set of commands (listed
in this guide both @{" by name " link "REXX"} and @{" by function " link "REXL"}) which can be called
through the @{b}YAM@{ub} ARexx port.  They are explained along the following
subchapters using the following format:


@{b}NAME@{ub}
     The name of the command, a short description of what it does and
     the YAM version where the command was implemented.

@{b}TEMPLATE@{ub}
     Arguments and options accepted by the command.  The template uses
     special characters that indicate the particular type of argument
     expected, following the AmigaDOS template style:

          /A   The parameter is compulsory
          /K   The parameter must be preceeded by the keyword
          /N   Numerical argument or result
          /M   Argument or result is a list of zero or more elements
          /S   The parameter works as a switch; the switch is in use
               when the parameter is given

@{b}FUNCTION@{ub}
     Describes what the command will do.

@{b}INPUTS@{ub}
     Describes in detail the parameters accepted by the command.
     Be careful when passing arguments containing spaces; for instance,

          sub = 'Hello World'
          'WRITESUBJECT' sub

     won't work!  It must be written as

          'WRITESUBJECT "'sub'"'

     or

          'WRITESUBJECT "Hello World"'


     Please note that because of the internal use of the ReadArgs() function,
     the ARexx Host requires to escape certain special characters like a newline
     (0x0a) or escape character (0x1b) if you want to have it included in your
     final string or otherwise it is stripped by the ReadArgs() function.

     This means that you have to use the following escape sequences in your
     provided strings:

     *N substitutes to 0x0a
     *E substitutes to 0x1b
     ** substitutes to *
     *" substitutes to "

     For example the following command would write a string to a texteditor
     containing a newline:

     'WRITEEDITOR "TEXT Hello Joe,*N I would like to meet you."'

@{b}RETURNS@{ub}
     Returned info to be expected from the command.  Commands may return
     results in three different kinds; let's look at these examples which
     use the FOLDERINFO command:

@REMARK *** NOTE FOR TRANSLATORS ***
@REMARK In the three examples below, please replace the first "Incoming"
@REMARK with your translation for the name of this folder!

          FOLDERINFO
            -> RESULT = "0 Incoming incoming 10 2 4 23030 1"

          FOLDERINFO VAR fi
            -> fi = "0 Incoming incoming 10 2 4 23030 1"

          FOLDERINFO STEM fi.
            -> fi.number = 0
               fi.name = "Incoming"
               fi.path = "incoming"
               fi.total = 10
               fi.new = 2
               fi.unread = 4
               fi.size = 23030
               fi.type = 1

     Another example which returns a result of type /M:

          ADDRFIND STEM found. "Marcel Beck" NAMEONLY
            -> found.alias.count = 2
               found.alias.0 = "Mars"
               found.alias.1 = "mbe"

@{b}WARNING@{ub}
     Any sort of vital information you should be aware of when using
     this command.

@{b}NOTES@{ub}
     Various notes about the command.

@{b}EXAMPLE@{ub}
     A fragment of ARexx code to illustrate the usage of the command.

@{b}BUGS@{ub}
     Problems that are known or have already been fixed with this command.

@{b}SEE ALSO@{ub}
     Links to other related commands.

@endnode

@node "REXX" "Reference - ARexx interface"
@next "REXL"
@prev "REXL"
@toc "RF01"

Alphabetical list of all ARexx commands
=======================================


 @{" ADDRDELETE        " link "RX_ADDRDELETE"}  - Remove an entry from the address book
 @{" ADDREDIT          " link "RX_ADDREDIT"}  - Fill the fields of the current address book entry
 @{" ADDRFIND          " link "RX_ADDRFIND"}  - Search the address book for one or more entries
 @{" ADDRGOTO          " link "RX_ADDRGOTO"}  - Select an address book entry by alias
 @{" ADDRINFO          " link "RX_ADDRINFO"}  - Return information about an entry referred by alias
 @{" ADDRLOAD          " link "RX_ADDRLOAD"}  - Load an address book by filename
 @{" ADDRNEW           " link "RX_ADDRNEW"}  - Create a new entry in the address book
 @{" ADDRRESOLVE       " link "RX_ADDRRESOLVE"}  - Resolve an alias or name
 @{" ADDRSAVE          " link "RX_ADDRSAVE"}  - Save the address book under a given filename
 @{" APPBUSY           " link "RX_APPBUSY"}  - Switch YAM to busy mode
 @{" APPNOBUSY         " link "RX_APPNOBUSY"}  - Bring YAM out of busy mode
 @{" FLUSHINDEXES      " link "RX_FLUSHINDEXES"}  - Flush the index of all folders
 @{" FOLDERINFO        " link "RX_FOLDERINFO"}  - Return information about a given folder
 @{" GETFOLDERINFO     " link "RX_GETFOLDERINFO"}  - Return information about the current folder
 @{" GETCONFIGINFO     " link "RX_GETCONFIGINFO"}  - Return information about the current user
 @{" GETMAILINFO       " link "RX_GETMAILINFO"}  - Return information about the active message
 @{" GETSELECTED       " link "RX_GETSELECTED"}  - Get the position of the messages selected in the current folder
 @{" GETURL            " link "RX_GETURL"}  - Download a file from the WWW based on a given URL
 @{" HELP              " link "RX_HELP"}  - Return a list of all the supported ARexx commands
 @{" HIDE              " link "RX_HIDE"}  - Iconify YAM
 @{" INFO              " link "RX_INFO"}  - Return information about the program
 @{" ISONLINE          " link "RX_ISONLINE"}  - Detect whether YAM is currently transfering email
 @{" LISTFREEZE        " link "RX_LISTFREEZE"}  - Forbid graphical updates to a list
 @{" LISTSELECT        " link "RX_LISTSELECT"}  - Select messages in the current folder
 @{" LISTUNFREEZE      " link "RX_LISTUNFREEZE"}  - Permit graphical updates to a list
 @{" MAILARCHIVE       " link "RX_MAILARCHIVE"}  - Move the selected messages to another folder
 @{" MAILBOUNCE        " link "RX_MAILBOUNCE"}  - Bounce the current message
 @{" MAILCHANGESUBJECT " link "RX_MAILCHANGESUBJECT"}  - Change the subject of the selected message(s)
 @{" MAILCHECK         " link "RX_MAILCHECK"}  - Download new email
 @{" MAILCOPY          " link "RX_MAILCOPY"}  - Duplicate the selected message(s)
 @{" MAILDELETE        " link "RX_MAILDELETE"}  - Delete the selected message(s)
 @{" MAILEDIT          " link "RX_MAILEDIT"}  - Edit the current message
 @{" MAILEXPORT        " link "RX_MAILEXPORT"}  - Export the selected message(s) into a file
 @{" MAILFILTER        " link "RX_MAILFILTER"}  - Filter messages in the current folder
 @{" MAILFORWARD       " link "RX_MAILFORWARD"}  - Forward the selected messages
 @{" MAILIMPORT        " link "RX_MAILIMPORT"}  - Import messages from a file into the current folder
 @{" MAILINFO          " link "RX_MAILINFO"}  - Return information about a given message
 @{" MAILMOVE          " link "RX_MAILMOVE"}  - Move the selected messages to another folder
 @{" MAILREAD          " link "RX_MAILREAD"}  - Read the current message
 @{" MAILREPLY         " link "RX_MAILREPLY"}  - Reply the currently selected messages
 @{" MAILSEND          " link "RX_MAILSEND"}  - Send the messages in the @{b}Outgoing@{ub} folder
 @{" MAILSENDALL       " link "RX_MAILSENDALL"}  - Send all the messages in the @{b}Outgoing@{ub} folder
 @{" MAILSTATUS        " link "RX_MAILSTATUS"}  - Change the status of the selected message(s)
 @{" MAILUPDATE        " link "RX_MAILUPDATE"}  - Update the index of the current folder
 @{" MAILWRITE         " link "RX_MAILWRITE"}  - Open a new Write window to compose a new mail
 @{" NEWMAILFILE       " link "RX_NEWMAILFILE"}  - Return a free message slot for a given folder
 @{" QUIT              " link "RX_QUIT"}  - Terminate YAM
 @{" READCLOSE         " link "RX_READCLOSE"}  - Close the active Read window
 @{" READINFO          " link "RX_READINFO"}  - Get info about the attachments in the message being read
 @{" READPRINT         " link "RX_READPRINT"}  - Print an attachment
 @{" READSAVE          " link "RX_READSAVE"}  - Save an attachment
 @{" REQUEST           " link "RX_REQUEST"}  - Request a choice from the user
 @{" REQUESTFILE       " link "RX_REQUESTFILE"}  - Request the user to select a file
 @{" REQUESTFOLDER     " link "RX_REQUESTFOLDER"}  - Request the user to select a folder
 @{" REQUESTSTRING     " link "RX_REQUESTSTRING"}  - Request the user for a string
 @{" RESTART           " link "RX_RESTART"}  - Restart YAM
 @{" SCREENTOBACK      " link "RX_SCREENTOBACK"}  - Bring the YAM screen to the background
 @{" SCREENTOFRONT     " link "RX_SCREENTOFRONT"}  - Bring the YAM screen to the foreground
 @{" SETFLAG           " link "RX_SETFLAG"}  - Set the PERmanent or VOLatile flag of a message
 @{" SETFOLDER         " link "RX_SETFOLDER"}  - Select the current folder
 @{" SETMAIL           " link "RX_SETMAIL"}  - Select the current message in the current folder by number
 @{" SETMAILFILE       " link "RX_SETMAILFILE"}  - Select the current message in the current folder by filename
 @{" SHOW              " link "RX_SHOW"}  - Uniconify YAM
 @{" USERINFO          " link "RX_USERINFO"}  - Return information about the current user
 @{" WRITEATTACH       " link "RX_WRITEATTACH"}  - Attach a file to a new message
 @{" WRITEBCC          " link "RX_WRITEBCC"}  - Fill the BCC: header of a new message
 @{" WRITECC           " link "RX_WRITECC"}  - Fill the CC: header of a new message
 @{" WRITEEDITOR       " link "RX_WRITEEDITOR"}  - Pass an ARexx command to the internal editor
 @{" WRITEFROM         " link "RX_WRITEFROM"}  - Fill the FROM: header of a new message
 @{" WRITELETTER       " link "RX_WRITELETTER"}  - Load a file into the internal text editor
 @{" WRITEMAILTO       " link "RX_WRITEMAILTO"}  - Fill the TO: header of a new message
 @{" WRITEOPTIONS      " link "RX_WRITEOPTIONS"}  - Set the options of a new message
 @{" WRITEQUEUE        " link "RX_WRITEQUEUE"}  - Move a new message to the @{b}Outgoing@{ub} queue
 @{" WRITEREPLYTO      " link "RX_WRITEREPLYTO"}  - Fill the REPLY-TO: header of a new message
 @{" WRITESEND         " link "RX_WRITESEND"}  - Send a new message
 @{" WRITESUBJECT      " link "RX_WRITESUBJECT"}  - Fill the SUBJECT: header of a new message
 @{" WRITETO           " link "RX_WRITETO"}  - Fill the TO: header of a new message

@endnode

@node "REXL" "List of all the ARexx commands sorted by function"
@next "REXX"
@prev "REXX"
@toc "RF01"

List of all the ARexx commands sorted by function
=================================================


Commands supplied by MUI
------------------------

 @{" HELP              " link "RX_HELP"}  - Return a list of all the supported ARexx commands
 @{" HIDE              " link "RX_HIDE"}  - Iconify YAM
 @{" INFO              " link "RX_INFO"}  - Return information about the program
 @{" QUIT              " link "RX_QUIT"}  - Terminate YAM
 @{" SCREENTOBACK      " link "RX_SCREENTOBACK"}  - Bring the YAM screen to the background
 @{" SCREENTOFRONT     " link "RX_SCREENTOFRONT"}  - Bring the YAM screen to the foreground
 @{" SHOW              " link "RX_SHOW"}  - Uniconify YAM


Address book handling
---------------------

 @{" ADDRDELETE        " link "RX_ADDRDELETE"}  - Remove an entry from the address book
 @{" ADDREDIT          " link "RX_ADDREDIT"}  - Fill the fields of the current address book entry
 @{" ADDRFIND          " link "RX_ADDRFIND"}  - Search the address book for one or more entries
 @{" ADDRGOTO          " link "RX_ADDRGOTO"}  - Select an address book entry by alias
 @{" ADDRINFO          " link "RX_ADDRINFO"}  - Return information about an entry referred by alias
 @{" ADDRLOAD          " link "RX_ADDRLOAD"}  - Load an address book by filename
 @{" ADDRNEW           " link "RX_ADDRNEW"}  - Create a new entry in the address book
 @{" ADDRRESOLVE       " link "RX_ADDRRESOLVE"}  - Resolve an alias or name
 @{" ADDRSAVE          " link "RX_ADDRSAVE"}  - Save the address book under a given filename


Folder wide operations
----------------------

 @{" FLUSHINDEXES      " link "RX_FLUSHINDEXES"}  - Flush the index of all folders
 @{" FOLDERINFO        " link "RX_FOLDERINFO"}  - Return information about a given folder
 @{" GETFOLDERINFO     " link "RX_GETFOLDERINFO"}  - Return information about the current folder
 @{" MAILFILTER        " link "RX_MAILFILTER"}  - Filter messages in the current folder
 @{" MAILUPDATE        " link "RX_MAILUPDATE"}  - Update the index of the current folder
 @{" NEWMAILFILE       " link "RX_NEWMAILFILE"}  - Return a free message slot for a given folder


GUI handling
------------

 @{" APPBUSY           " link "RX_APPBUSY"}  - Switch YAM to busy mode
 @{" APPNOBUSY         " link "RX_APPNOBUSY"}  - Bring YAM out of busy mode
 @{" LISTFREEZE        " link "RX_LISTFREEZE"}  - Forbid graphical updates to a list
 @{" LISTUNFREEZE      " link "RX_LISTUNFREEZE"}  - Permit graphical updates to a list
 @{" READCLOSE         " link "RX_READCLOSE"}  - Close the active Read window
 @{" RESTART           " link "RX_RESTART"}  - Restart YAM


Message/Folder selection
------------------------

 @{" GETSELECTED       " link "RX_GETSELECTED"}  - Get the position of the messages selected in the current folder
 @{" LISTSELECT        " link "RX_LISTSELECT"}  - Select messages in the current folder
 @{" SETFOLDER         " link "RX_SETFOLDER"}  - Select the current folder
 @{" SETMAIL           " link "RX_SETMAIL"}  - Select the current message in the current folder by number
 @{" SETMAILFILE       " link "RX_SETMAILFILE"}  - Select the current message in the current folder by filename


Message manipulation
--------------------

 @{" GETMAILINFO       " link "RX_GETMAILINFO"}  - Return information about the active message
 @{" MAILARCHIVE       " link "RX_MAILARCHIVE"}  - Move the selected messages to another folder
 @{" MAILBOUNCE        " link "RX_MAILBOUNCE"}  - Bounce the current message
 @{" MAILCHANGESUBJECT " link "RX_MAILCHANGESUBJECT"}  - Change the subject of the selected message(s)
 @{" MAILCOPY          " link "RX_MAILCOPY"}  - Duplicate the selected message(s)
 @{" MAILDELETE        " link "RX_MAILDELETE"}  - Delete the selected message(s)
 @{" MAILEDIT          " link "RX_MAILEDIT"}  - Edit the current message
 @{" MAILEXPORT        " link "RX_MAILEXPORT"}  - Export the selected message(s) into a file
 @{" MAILIMPORT        " link "RX_MAILIMPORT"}  - Import messages from a file into the current folder
 @{" MAILINFO          " link "RX_MAILINFO"}  - Return information about a given message
 @{" MAILMOVE          " link "RX_MAILMOVE"}  - Move the selected messages to another folder
 @{" MAILREAD          " link "RX_MAILREAD"}  - Read the current message
 @{" MAILREPLY         " link "RX_MAILREPLY"}  - Reply the currently selected messages
 @{" MAILSTATUS        " link "RX_MAILSTATUS"}  - Change the status of the selected message(s)
 @{" READINFO          " link "RX_READINFO"}  - Get info about the attachments in the message being read
 @{" READPRINT         " link "RX_READPRINT"}  - Print an attachment
 @{" READSAVE          " link "RX_READSAVE"}  - Save an attachment
 @{" SETFLAG           " link "RX_SETFLAG"}  - Set the PERmanent or VOLatile flag of a message


Network related
---------------

 @{" GETURL            " link "RX_GETURL"}  - Download a file from the WWW based on a given URL
 @{" ISONLINE          " link "RX_ISONLINE"}  - Detect whether YAM is currently transfering email
 @{" MAILCHECK         " link "RX_MAILCHECK"}  - Download new email
 @{" MAILSEND          " link "RX_MAILSEND"}  - Send the messages in the @{b}Outgoing@{ub} folder
 @{" MAILSENDALL       " link "RX_MAILSENDALL"}  - Send all the messages in the @{b}Outgoing@{ub} folder


Request info from user
----------------------

 @{" GETCONFIGINFO     " link "RX_GETCONFIGINFO"}  - Return information about the current user
 @{" REQUEST           " link "RX_REQUEST"}  - Request a choice from the user
 @{" REQUESTFILE       " link "RX_REQUESTFILE"}  - Request the user to select a file
 @{" REQUESTFOLDER     " link "RX_REQUESTFOLDER"}  - Request the user to select a folder
 @{" REQUESTSTRING     " link "RX_REQUESTSTRING"}  - Request the user for a string
 @{" USERINFO          " link "RX_USERINFO"}  - Return information about the current user


Writing new email
-----------------

 @{" MAILFORWARD       " link "RX_MAILFORWARD"}  - Forward the selected messages
 @{" MAILWRITE         " link "RX_MAILWRITE"}  - Open a new Write window to compose a new mail
 @{" WRITEATTACH       " link "RX_WRITEATTACH"}  - Attach a file to a new message
 @{" WRITEBCC          " link "RX_WRITEBCC"}  - Fill the BCC: header of a new message
 @{" WRITECC           " link "RX_WRITECC"}  - Fill the CC: header of a new message
 @{" WRITEEDITOR       " link "RX_WRITEEDITOR"}  - Pass an ARexx command to the internal editor
 @{" WRITEFROM         " link "RX_WRITEFROM"}  - Fill the FROM: header of a new message
 @{" WRITELETTER       " link "RX_WRITELETTER"}  - Load a file into the internal text editor
 @{" WRITEMAILTO       " link "RX_WRITEMAILTO"}  - Fill the TO: header of a new message
 @{" WRITEOPTIONS      " link "RX_WRITEOPTIONS"}  - Set the options of a new message
 @{" WRITEQUEUE        " link "RX_WRITEQUEUE"}  - Move a new message to the @{b}Outgoing@{ub} queue
 @{" WRITEREPLYTO      " link "RX_WRITEREPLYTO"}  - Fill the REPLY-TO: header of a new message
 @{" WRITESEND         " link "RX_WRITESEND"}  - Send a new message
 @{" WRITESUBJECT      " link "RX_WRITESUBJECT"}  - Fill the SUBJECT: header of a new message
 @{" WRITETO           " link "RX_WRITETO"}  - Fill the TO: header of a new message

@endnode

@node "RX_ADDRDELETE" "ARexx command: ADDRDELETE"
@next "RX_ADDREDIT"
@prev "RX_WRITETO"
@toc "REXX"

ADDRDELETE
----------

@{b}NAME@{ub}
     AddrDelete -- Remove an entry from the address book.  (V2.0)

@{b}TEMPLATE@{ub}
     ALIAS

@{b}FUNCTION@{ub}
     Removes an entry from the address book.

@{b}INPUTS@{ub}
     ALIAS   - Alias of the entry to be removed.  This parameter is
               optional; if it is missing, AddrDelete will remove
               the current entry, if any.

@{b}RETURNS@{ub}
     RC is set to 5 if ALIAS doesn't exist or if none was provided and
     there is nothing to delete (because the address book window is
     closed).

@{b}NOTES@{ub}
     If ALIAS refers to a group or distribution list, all their
     contents are deleted as well.

     If the address book window is not opened at the time the command
     is executed, the deletion cannot be undone.  However, the deletion
     doesn't really affect the address book on disk unless the
     application is instructed to save the address book with e.g.
     @{" ADDRSAVE " link "RX_ADDRSAVE"}.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}
     A missing check for a NULL pointer used to make the command cause
     Enforcer hits if no alias was supplied.  This was fixed in V2.4.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_ADDREDIT" "ARexx command: ADDREDIT"
@next "RX_ADDRFIND"
@prev "RX_ADDRDELETE"
@toc "REXX"

ADDREDIT
--------

@{b}NAME@{ub}
     AddrEdit -- Fill in the fields of the current address book entry.
                 (V2.0)

@{b}TEMPLATE@{ub}
     ALIAS,NAME,EMAIL,PGP,HOMEPAGE,STREET,CITY,COUNTRY,PHONE,COMMENT,
     BIRTHDATE/N,IMAGE,MEMBER/M,ADD/S

@{b}FUNCTION@{ub}
     Edits the fields of the current address book entry.

@{b}INPUTS@{ub}
     ALIAS         - alias for the entry (upto 29 chars)
     NAME          - real name for the entry (upto 39 chars)
     EMAIL         - email address for the entry
     PGP           - PGP ID for the entry (person only)
     HOMEPAGE      - homepage for the entry (person only) (upto 231 chars)
     STREET        - snail mail address of the entry (person only) (upto 79
                     chars)
     CITY          - city for the entry (person only) (upto 79 chars)
     COUNTRY       - country for the entry (person only) (upto 79 chars)
     PHONE         - phone # for the entry (person only) (upto 79 chars)
     COMMENT       - comment for the entry (up to 79 chars)
     BIRTHDATE/N   - birthdate for a person in DDMMYYYY format, e.g. 13091969
     IMAGE         - image filename for the entry (person only)
     MEMBER/M      - use the argument(s) to edit a member list
     ADD/S         - combined with 'member', adds new members to a
                     distribution list, instead of replacing the old member
                     info

@{b}RETURNS@{ub}
     RC is set 10 if no entry is currently selected in the address book.

@{b}NOTES@{ub}
     Arguments longer than the available space are simply truncated.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Select an entry */

         ADDRGOTO YAM_ml

         /* Edit this entry */

         'ADDREDIT EMAIL "yam\@freelists.org" COMMENT "The place to be"'

         /* Select a distribution list */

         ADDRGOTO blacklisted

         /* Reset the list */

         ADDREDIT MEMBER 'bill'

         /* Add a couple of members */

         ADDREDIT MEMBER 'jobs\@example.com' MEMBER 'smith\@example.net' ADD

@{b}BUGS@{ub}
     Even if a group or person is selected, MEMBER [ADD] will return
     success (0).

     Entering nonsense data as birth date or editing a distribution list
     would throw Enforcer hits; this was fixed in V2.4.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_ADDRFIND" "ARexx command: ADDRFIND"
@next "RX_ADDRGOTO"
@prev "RX_ADDREDIT"
@toc "REXX"

ADDRFIND
--------

@{b}NAME@{ub}
     AddrFind -- Find one or more entries in the address book.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,PATTERN/A,NAMEONLY/S,EMAILONLY/S

@{b}FUNCTION@{ub}
     Finds one or more entries in the address book, searching by
     default in the "Alias", "Real name", "E-mail address",
     "Description", "Street", "City" and "Country" fields.

@{b}INPUTS@{ub}
     VAR/K         - variable to store the results of the query
     STEM/K        - base name used for the stems where the aliases for the
                     address book entries matching the query will be stored
     PATTERN/A     - pattern used as search criterion; all the AmigaDOS
                     wildcard characters are supported
     NAMEONLY/S    - restrict the search to the "Real name" field of
                     the entries in the address book
     EMAILONLY/S   - restrict the search to the "E-mail address" field
                     of the entries in the address book

@{b}RETURNS@{ub}
     VAR               - string containing the number of entries matching
                         the query and a space separated list of the
                         matching aliases.
     <stem>ALIAS.COUNT - number of matches found
     <stem>ALIAS.NR    - the nth alias in the list of aliases matching
                         the query, nr being a number between 0 and n-1.

     RC is set to 5 if no match is found.

@{b}NOTES@{ub}
     Aliases are returned in the order they appear in the address book.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Find all the entries using a given provider */

         ADDRFIND PATTERN '#?\@saug.org' STEM st. EMAILONLY

         /* List results */

         IF RC = 0 THEN
            DO i = 0 TO st.alias.count-1
               SAY 'Match #'i+1': 'st.alias.i
            END
         ELSE
            SAY 'No matches found.'
         EXIT

@{b}BUGS@{ub}
     AddrFind can't search into the "Alias" or "Description" fields of
     groups.

@{b}SEE ALSO@{ub}
     @{" ADDRRESOLVE " link "RX_ADDRRESOLVE"}

@endnode

@node "RX_ADDRGOTO" "ARexx command: ADDRGOTO"
@next "RX_ADDRINFO"
@prev "RX_ADDRFIND"
@toc "REXX"

ADDRGOTO
--------

@{b}NAME@{ub}
     AddrGoto -- Set the current entry in the address book.  (V2.0)

@{b}TEMPLATE@{ub}
     ALIAS/A

@{b}FUNCTION@{ub}
     Makes the named alias the current entry in the address book.
     The address book window is redrawn to make the new current entry
     visible.

@{b}INPUTS@{ub}
     ALIAS/A   - alias of the entry to turn into the current one

@{b}RETURNS@{ub}
     RC is set to 5 if the given alias cannot be found or the address
     book window is not opened.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_ADDRINFO" "ARexx command: ADDRINFO"
@next "RX_ADDRLOAD"
@prev "RX_ADDRGOTO"
@toc "REXX"

ADDRINFO
--------

@{b}NAME@{ub}
     AddrInfo -- Return information about an address book entry.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,ALIAS/A

@{b}FUNCTION@{ub}
    Returns information about an address book entry.

@{b}INPUTS@{ub}
     VAR/K     - variable to store the results of the query
     STEM/K    - base name used for the stems where the returned data
                 will be stored
     ALIAS/A   - alias of the entry to return info about

@{b}RETURNS@{ub}
     <STEM>TYPE          - type of entry, may be one of P (person),
                           L (distribution list) or G (group)
     <STEM>NAME          - real name of this entry
     <STEM>EMAIL         - email address of this entry
     <STEM>PGP           - PGP key ID of this entry
     <STEM>HOMEPAGE      - homepage of this entry
     <STEM>STREET        - street address of this entry
     <STEM>CITY          - city for this entry
     <STEM>COUNTRY       - country for this entry
     <STEM>PHONE         - phone # of this entry
     <STEM>COMMENT       - comment stored with this entry
     <STEM>BIRTHDATE     - date of birth of this entry, in (D)DMMYYYY format
     <STEM>IMAGE         - filename with the portrait picture of this entry
     <STEM>MEMBERS.COUNT - number of members, if the entry is actually a
                           distribution list
     <STEM>MEMBERS.NR    - the nth member if the entry is actually a
                           distribution list, NR being a number between
                           0 and n-1

     RC is set to 10 if the supplied alias does not exist or none was
     provided.

@{b}NOTES@{ub}
     Fields where information is not available are returned as an
     empty string, except for the birth date which is returned as
     a literal zero (0).

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Ignore possible error from ADDRINFO */

         OPTIONS FAILAT 11

         /* Find a given entry */

         ADDRINFO 'mars' STEM st.

         /* List results */

         IF RC ~= 0 THEN EXIT

         SAY 'Type of entry: 'st.type
         SAY 'Real name:     'st.name
         SAY 'Email address: 'st.email
         SAY 'PGP key ID:    'st.pgp
         SAY 'Homepage:      'st.homepage
         SAY 'Street:        'st.street
         SAY 'City:          'st.city
         SAY 'Country:       'st.country
         SAY 'Phone #:       'st.phone
         SAY 'Description:   'st.comment
         SAY 'Date of birth: 'st.birthdate
         SAY 'Portrait:      'st.image

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_ADDRLOAD" "ARexx command: ADDRLOAD"
@next "RX_ADDRNEW"
@prev "RX_ADDRINFO"
@toc "REXX"

ADDRLOAD
--------

@{b}NAME@{ub}
     AddrLoad -- Load an address book from disk.  (V2.0)

@{b}TEMPLATE@{ub}
     FILENAME/A,OPEN/S

@{b}FUNCTION@{ub}
     Loads the specified address book from disk, replacing the
     current address book in RAM. If requested the address book
     window will be opened immediately after the address book
     file has been loaded successfully.

@{b}INPUTS@{ub}
     FILENAME/A   - address book to be loaded
     OPEN/S       - open the address book window

@{b}RETURNS@{ub}
     RC is set to 10 if the filename cannot be opened.

     As of V2.4, this condition also triggers an error requester.

@{b}NOTES@{ub}
     Loading a new address book from disk does not count as a change
     in the address book itself, which means you won't be warned if
     you try to quit YAM after loading that file, and thus will lose
     the new information if you forget to save it.

     As of V2.4, YAM pays attention to the contents of the supplied file.
     If the file is not recognised as a valid address book, a requester
     will open to let the user select whether he wants it to be loaded
     as a list of email addresses where items can be specified as

      <email\@example.com> Real name

     or

      email\@example.com

     because names are optional.  YAM will automatically create aliases
     for the new items, and the command will not return until the
     requester is satisfied.

@{b}EXAMPLE@{ub}
         /* Load an address book from disk */

         ADDRLOAD 'mail:addresslist'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_ADDRNEW" "ARexx command: ADDRNEW"
@next "RX_ADDRRESOLVE"
@prev "RX_ADDRLOAD"
@toc "REXX"

ADDRNEW
-------

@{b}NAME@{ub}
     AddrNew -- Create a new entry in the address book.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,TYPE,ALIAS,NAME,EMAIL

@{b}FUNCTION@{ub}
     Creates a new entry in the address book and inserts it below
     the last active entry.  If the address book window has not yet
     been opened in the current session, the new entry will be added
     below the first entry.

@{b}INPUTS@{ub}
     VAR/K    - variable where the alias of the resulting entry will
                be stored
     STEM/K   - base name used for the stem where the alias of the
                resulting entry will be stored
     TYPE     - type of entry, may be one of G (group), L (distribution
                list) or P (person, the default value)
     ALIAS    - alias for the new entry
     NAME     - real name for the new entry
     EMAIL    - email address for the new entry

@{b}RETURNS@{ub}
     VAR         - alias of the resulting entry
     <STEM>ALIAS - alias of the resulting entry

@{b}NOTES@{ub}
     At least one of ALIAS, NAME or EMAIL should be specified.  Bogus
     types are simply ignored.

     If the provided alias exists already, a new alias will be used
     instead by taking the supplied string and adding a trailing
     number until no clash is produced.  String limits are also taken
     into account.

     If no alias is provided, one will be created automatically by
     using a cut-down version of the NAME or EMAIL arguments; for
     instance, "Jose Luis Feliciano" would turn into "J_Feliciano",
     or "Jose" if Jose\@example.com was the only argument provided.
     The rule mentioned above is also applied.

     If the address book window is closed at the time the new entry
     is added, it won't count as a change in the address book, which
     means you won't be warned if you try to quit YAM afterwards
     without saving the address book.

     While using spaces in aliases is possible, it is discouraged.

@{b}EXAMPLE@{ub}
         /* Create a new group */

         ADDRNEW G 'Singers'

         /* Create a new distribution list */

         ADDRNEW L 'Spanish'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" ADDREDIT " link "RX_ADDREDIT"}

@endnode

@node "RX_ADDRRESOLVE" "ARexx command: ADDRRESOLVE"
@next "RX_ADDRSAVE"
@prev "RX_ADDRNEW"
@toc "REXX"

ADDRRESOLVE
-----------

@{b}NAME@{ub}
     AddrResolve -- Resolve an alias or name into the corresponding
                    email address(es).  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,ALIAS/A

@{b}FUNCTION@{ub}
     Tries to resolve a given alias or name into the corresponding
     email address(es).  The command can resolve both individuals
     and distribution lists.

@{b}INPUTS@{ub}
     VAR/K     - variable where the name and/or address(es) of the
                 resulting recipient(s) will be stored
     STEM/K    - base name used for the stem where the name and/or
                 address(s) of the resulting recipient(s) will be stored
     ALIAS/A   - alias or name to be resolved

@{b}RETURNS@{ub}
     VAR         - name and/or address(es) of the matching entry
     <STEM>RECPT - name and/or address(es) of the matching entry

     RC is set to 5 if the supplied alias or name cannot be resolved.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}
     AddrResolve used to crash in a rather spectacular fashion
     if it couldn't resolve the supplied alias or name.  This was
     fixed in V2.4.

@{b}SEE ALSO@{ub}
     @{" ADDRFIND " link "RX_ADDRFIND"}

@endnode

@node "RX_ADDRSAVE" "ARexx command: ADDRSAVE"
@next "RX_APPBUSY"
@prev "RX_ADDRRESOLVE"
@toc "REXX"

ADDRSAVE
--------

@{b}NAME@{ub}
     AddrSave -- Save the address book to disk.  (V2.0)

@{b}TEMPLATE@{ub}
     FILENAME

@{b}FUNCTION@{ub}
     Tries to save the address book to disk.

@{b}INPUTS@{ub}
     FILENAME   - the complete path of the file to save the address
                  book to; if no filename is provided, the current
                  one will be used, usually "<MAILDIR>/.addressbook".

@{b}RETURNS@{ub}
     RC is set to 10 if the file can't be written to.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_APPBUSY" "ARexx command: APPBUSY"
@next "RX_APPNOBUSY"
@prev "RX_ADDRSAVE"
@toc "REXX"

APPBUSY
-------

@{b}NAME@{ub}
     AppBusy -- Switch YAM into busy state.  (V2.0)

@{b}TEMPLATE@{ub}
     TEXT

@{b}FUNCTION@{ub}
     Switches YAM into busy state and optionally displays a short text
     in the status bar.  During this state, YAM won't accept any input.

@{b}INPUTS@{ub}
     TEXT   - optional, a brief piece of text to display in the status
              bar while YAM is in busy state; the maximum length of the
              displayable text depends on the width of the characters
              used

@{b}RETURNS@{ub}
     RC is set to 1 if YAM was already busy.

@{b}NOTES@{ub}
     V2.4 introduced the concept of busy levels, meaning the command
     is now accumulative: if AppBusy is called several times, an equal
     number of calls to AppNoBusy must be made for the application to
     return to normal state.

@{b}EXAMPLE@{ub}
         /* Turn busy mode on */

         'APPBUSY "Please wait..."'

         /* Say we are doing something different */

         'APPBUSY "Making coffee..."'

         /* Turn busy mode off */

         APPNOBUSY
         APPNOBUSY

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" APPNOBUSY " link "RX_APPNOBUSY"}

@endnode

@node "RX_APPNOBUSY" "ARexx command: APPNOBUSY"
@next "RX_FLUSHINDEXES"
@prev "RX_APPBUSY"
@toc "REXX"

APPNOBUSY
---------

@{b}NAME@{ub}
     AppNoBusy -- Bring YAM out of busy state.  (V2.0)

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Terminates the busy state initiated by @{" APPBUSY " link "RX_APPBUSY"}.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}
     RC is set to 1 if YAM is still busy.

@{b}NOTES@{ub}
     V2.4 introduced the concept of busy levels, which means that if
     @{" APPBUSY " link "RX_APPBUSY"} is called several times in a row, an equal number of
     calls to AppNoBusy must be made for the application to return
     to normal state.

     AppNoBusy is a "safe" command, i.e. it can be called even if
     the application is not busy at the time, causing no error.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" APPBUSY " link "RX_APPBUSY"}

@endnode

@node "RX_FLUSHINDEXES" "ARexx command: FLUSHINDEXES"
@next "RX_FOLDERINFO"
@prev "RX_FLUSHINDEXES"
@toc "REXX"

FLUSHINDEXES
------------

@{b}NAME@{ub}
     FLUSHINDEXES -- Flush the index of all folders.  (V2.6)

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Frees the memory occupied by the folders' index structure.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_FOLDERINFO" "ARexx command: FOLDERINFO"
@next "RX_GETCONFIGINFO"
@prev "RX_APPNOBUSY"
@toc "REXX"

FOLDERINFO
----------

@{b}NAME@{ub}
     FolderInfo -- Return information about a folder.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,FOLDER

@{b}FUNCTION@{ub}
     Returns information about the specified folder, or the current
     folder if none is specified.

@{b}INPUTS@{ub}
     VAR/K    - variable where the results will be stored
     STEM/K   - base name used for the stems where the returned data
                will be stored
     FOLDER   - name or path of the folder we want to get info about;
                if no folder is specified, the current folder will be
                used  (V2.2)

@{b}RETURNS@{ub}
     VAR          - string with a space separated list of the results
                    of the query
     <STEM>NUMBER - position of the folder in the folder list; the folder
                    at the top is in slot 0
     <STEM>NAME   - name of the folder as shown in the folder list
     <STEM>PATH   - path of the folder, e.g. "incoming"
     <STEM>TOTAL  - total number of messages in the folder
     <STEM>NEW    - number of new messages in the folder
     <STEM>UNREAD - number of unread messages in the folder
     <STEM>SIZE   - size of the folder, in bytes
     <STEM>TYPE   - type of folder (V2.3), possible values are:

                       0 - normal
                       1 - incoming
                       2 - outgoing
                       3 - sent (for the default "Sent" folder)
                       4 - deleted
                       5 - sent and received
                       6 - sent

     RC is set to 10 if the specified folder cannot be found.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Request info */

         FOLDERINFO 'Incoming' STEM fi.

         /* Display results */

         SAY 'Folder number:   'fi.number
         SAY 'Folder name:     'fi.name
         SAY 'Path:            'fi.path
         SAY 'Total messages:  'fi.total
         SAY 'New messages:    'fi.new
         SAY 'Unread messages: 'fi.unread
         SAY 'Total size:      'fi.size
         SAY 'Type:            'fi.type

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_GETCONFIGINFO" "ARexx command: GETCONFIGINFO"
@next "RX_GETFOLDERINFO"
@prev "RX_FOLDERINFO"
@toc "REXX"

GETCONFIGINFO
-------------

@{b}NAME@{ub}
     GetConfigInfo -- Return information about the current user.  (V1.3)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,ITEM/A

@{b}FUNCTION@{ub}
     Returns information about the current user.

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT  (V2.0)
     STEM/K   - base name used for the stem where the result will be
                stored  (V2.0)
     ITEM/A   - item to return information about, may be one of

                   EMA(IL)   - e-mail address
                   NAM(E)    - real name

@{b}RETURNS@{ub}
     VAR         - info returned by the query
     <STEM>VALUE - info returned by the query

@{b}NOTES@{ub}
     Superseded by @{" USERINFO " link "RX_USERINFO"} in V2.0+.  Don't use it in new scripts.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Request info */

         GETCONFIGINFO NAME VAR name
         GETCONFIGINFO EMAIL VAR email

         /* Display results */

         SAY 'User name:    'name
         SAY 'User address: 'email

@{b}BUGS@{ub}
     The original V1.3 implementation would return junk most of the time;
     this was fixed in V1.3.1.

@{b}SEE ALSO@{ub}
     @{" USERINFO " link "RX_USERINFO"}

@endnode

@node "RX_GETFOLDERINFO" "ARexx command: GETFOLDERINFO"
@next "RX_GETMAILINFO"
@prev "RX_GETCONFIGINFO"
@toc "REXX"

GETFOLDERINFO
-------------

@{b}NAME@{ub}
     GetFolderInfo -- Return information about the current folder.

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,ITEM/A

@{b}FUNCTION@{ub}
     Returns information about the current folder.

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT  (V2.0)
     STEM/K   - base name used for the stems where the returned data will
                be stored  (V2.0)
     ITEM/A   - item to return info about, may be one of

                   NUM(BER)   - position in the folder list (0 = first
                                folder)
                   NAM(E)     - name of the folder as shown in the folder
                                list
                   MAX        - total number of messages in the folder
                   PAT(H)     - folder directory, without path  (V1.3)

@{b}RETURNS@{ub}
     VAR         - info returned by the query
     <STEM>VALUE - info returned by the query

@{b}NOTES@{ub}
     Superseded by @{" FOLDERINFO " link "RX_FOLDERINFO"} in V2.0+.  Don't use it in new scripts.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Request info */

         GETFOLDERINFO NUMBER VAR position
         GETFOLDERINFO NAME VAR name
         GETFOLDERINFO MAX VAR total
         GETFOLDERINFO PATH VAR path

         /* Display results */

         SAY 'Folder name:    'name
         SAY 'Path:           'path
         SAY 'Place in list:  'position
         SAY 'Total messages: 'total

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" FOLDERINFO " link "RX_FOLDERINFO"}

@endnode

@node "RX_GETMAILINFO" "ARexx command: GETMAILINFO"
@next "RX_GETSELECTED"
@prev "RX_GETFOLDERINFO"
@toc "REXX"

GETMAILINFO
-----------

@{b}NAME@{ub}
     GetMailInfo -- Return information about the current message.

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,ITEM/A

@{b}FUNCTION@{ub}
     Returns information about the current message.

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT  (V2.0)
     STEM/K   - base name used for the stems where the returned data will
                be stored  (V2.0)
     ITEM/A   - item to return info about, may be one of

                   ACT(IVE)    - position (0 = first message in the folder)
                   STA(TUS)    - status of the message, possible values are

                                    N   - new
                                    O   - read
                                    U   - unread
                                    R   - replied
                                    F   - forwarded
                                    S   - sent
                                    W   - pending
                                    H   - hold
                                    E   - error sending

                   FRO(M)      - sender
                   TO          - primary recipient
                   REP(LY)     - return address; this will be either the
                                 first recipient in the "Reply-To:" header,
                                 or the first sender in the "From:" header
                                 if no "Reply-To:" header exists
                   SUB(JECT)   - subject
                   FIL(E)      - full path of the message file

@{b}RETURNS@{ub}
     VAR         - info returned by the query
     <STEM>VALUE - info returned by the query

@{b}NOTES@{ub}
     Superseded by @{" MAILINFO " link "RX_MAILINFO"} in V2.0+.  Don't use it in new scripts.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Request info */

         GETMAILINFO ACTIVE VAR posi
         GETMAILINFO STATUS VAR status
         GETMAILINFO FROM VAR from
         GETMAILINFO TO VAR to
         GETMAILINFO REPLY VAR replyto
         GETMAILINFO SUBJECT VAR subj
         GETMAILINFO FILE VAR path

         /* Display results */

         SAY 'Position: 'posi
         SAY 'Status:   'status
         SAY 'From:     'from
         SAY 'To:       'to
         SAY 'Reply-To: 'replyto
         SAY 'Subject:  'subj
         SAY 'Path:     'path

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILINFO " link "RX_MAILINFO"}

@endnode

@node "RX_GETSELECTED" "ARexx command: GETSELECTED"
@next "RX_GETURL"
@prev "RX_GETMAILINFO"
@toc "REXX"

GETSELECTED
-----------

@{b}NAME@{ub}
     GetSelected -- Get the position of the messages selected in the
                    current folder.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K

@{b}FUNCTION@{ub}
     Gets the position of the messages selected in the current folder.

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT
     STEM/K   - base name used for the stems where the returned data
                will be stored

@{b}RETURNS@{ub}
     VAR             - space separated list of results
     <STEM>NUM.COUNT - number of selected messages
     <STEM>NUM.NR    - position of the nth selected message, starting
                       from 0; the message at the top of the list is
                       also at position 0

     The result is just "0" if an empty folder or a folder group
     are currently selected.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Request info */

         GETSELECTED STEM st.

         /* Display results */

         SAY 'Messages selected:  'st.num.count
         DO i = 0 TO st.num.count-1
           SAY 'Position of msg #'i': 'st.num.i
         END

@{b}BUGS@{ub}
     <STEM>NUM.COUNT was not initialized for empty folders.  This was
     fixed in V2.4.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_GETURL" "ARexx command: GETURL"
@next "RX_HELP"
@prev "RX_GETSELECTED"
@toc "REXX"

GETURL
------

@{b}NAME@{ub}
     GetURL -- Download a file from the World Wide Web using HTTP.
               (V2.1)

@{b}TEMPLATE@{ub}
     URL/A,FILENAME/A

@{b}FUNCTION@{ub}
     Downloads a file from the World Wide Web by HTTP and saves it
     to disk.

@{b}INPUTS@{ub}
     URL/A        - complete URL to the file
     FILENAME/A   - complete filename to write the file to

@{b}RETURNS@{ub}
     RC is set to 5 if a TCP/IP stack is not running, or 10 if it is
     actually running but not online, if the URL cannot be found, or
     if the output filename cannot be written to.

@{b}NOTES@{ub}
     The "http://" introducer is optional, but otherwise the only one
     supported.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Ignore possible error from GETURL */

         OPTIONS FAILAT 11

         /* Download a file */

         GETURL 'http://yam.ch/files/YAM22.lha' 'ram:YAM22.lha'

         /* Report results */

         c = RC
         SELECT
            WHEN c = 5 THEN SAY 'TCP/IP stack not running.'
            WHEN c > 5 THEN SAY 'Error.'
            OTHERWISE SAY 'File downloaded successfully.'
         END

@{b}BUGS@{ub}
     The command is interrupted if email is sent or received.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_HELP" "ARexx command: HELP"
@next "RX_HIDE"
@prev "RX_GETURL"
@toc "REXX"

HELP
----

@{b}NAME@{ub}
     Help -- Print a list of the supported ARexx commands.

@{b}TEMPLATE@{ub}
     FILE

@{b}FUNCTION@{ub}
     Prints a list of the supported ARexx comands to a console window
     or saves it to a file.

@{b}INPUTS@{ub}
     FILE   - optional, file to save the list to

@{b}RETURNS@{ub}

@{b}NOTES@{ub}
     If the output file can't be written to, a console window will be
     opened.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_HIDE" "ARexx command: HIDE"
@next "RX_INFO"
@prev "RX_HELP"
@toc "REXX"

HIDE
----

@{b}NAME@{ub}
     Hide -- Switch YAM to iconified state.

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Switches YAM to iconified state.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_INFO" "ARexx command: INFO"
@next "RX_ISONLINE"
@prev "RX_HIDE"
@toc "REXX"

INFO
----

@{b}NAME@{ub}
     Info -- Return information about the program.

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,ITEM/A

@{b}FUNCTION@{ub}
     Returns misc information about the program.

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT  (V2.0)
     STEM/K   - base name used for the stems where the returned data
                will be stored  (V2.0)
     ITEM/A   - item to return info about, may be one of TITLE, AUTHOR,
                COPYRIGHT, DESCRIPTION, VERSION, BASE or SCREEN (see
                the MUI AutoDoc for MUI_Application)

@{b}RETURNS@{ub}
     VAR         - info returned by the query
     <STEM>VALUE - info returned by the query

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}
     INFO used to cause Enforcer hits if no argument was supplied;
     this was fixed in V2.3.

     No screen name was returned when YAM was iconified; this was
     fixed in V2.4 to return the name of the default public screen.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_ISONLINE" "ARexx command: ISONLINE"
@next "RX_LISTFREEZE"
@prev "RX_INFO"
@toc "REXX"

ISONLINE
--------

@{b}NAME@{ub}
     IsOnline -- Detect if YAM is currently getting or sending email.
                 (V2.0)

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Detects if YAM is currently getting or sending email, setting the
     return code accordingly.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}
     RC is set to 1 if YAM is currently getting or sending email.

@{b}NOTES@{ub}
     Due to the fact that YAM is not multithreaded yet, the ARexx host
     runs into the very same task and thus the command doesn't return
     until the transference is finished, and then of course it returns 0.
     Therefore, this command is only useful when using mail preselection
     (it will return 1 after all the headers are transferred and the
     application stops to wait for user interaction) until multithreading
     is implemented.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_LISTFREEZE" "ARexx command: LISTFREEZE"
@next "RX_LISTSELECT"
@prev "RX_ISONLINE"
@toc "REXX"

LISTFREEZE
----------

@{b}NAME@{ub}
     ListFreeze -- Forbid graphical changes to a list.  (V2.6)

@{b}TEMPLATE@{ub}
     LIST/A

@{b}FUNCTION@{ub}
     Forbids graphical changes to a list, i.e. during a long running command.

@{b}INPUTS@{ub}
     LIST/A   - name of the list to be frozen. Currently these lists may be
                frozen:
                   MAILS - the main mail list

@{b}RETURNS@{ub}

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" LISTUNFREEZE " link "RX_LISTUNFREEZE"}

@endnode

@node "RX_LISTSELECT" "ARexx command: LISTSELECT"
@next "RX_LISTUNFREEZE"
@prev "RX_LISTFREEZE"
@toc "REXX"

LISTSELECT
----------

@{b}NAME@{ub}
     ListSelect -- Select messages in the current folder.  (V2.0)

@{b}TEMPLATE@{ub}
     MODE/A

@{b}FUNCTION@{ub}
     Selects or unselects messages in the current folder.

@{b}INPUTS@{ub}
     MODE/A   - may be one of N (none), A (all), T (toggle selection) or
                a numeric value to add to the selection the message in
                that position, where 0 refers to the message at the top
                of the folder

@{b}RETURNS@{ub}

@{b}NOTES@{ub}
     While 'LISTSELECT N' will unselect everything in the folder, the
     @{b}current@{ub} message still remains as such, and for all intents and
     purposes will be considered as "selected" by all commands dealing
     with selected messages, e.g. @{" GETSELECTED " link "RX_GETSELECTED"}.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_LISTUNFREEZE" "ARexx command: LISTUNFREEZE"
@next "RX_MAILARCHIVE"
@prev "RX_LISTSELECT"
@toc "REXX"

LISTUNFREEZE
----------

@{b}NAME@{ub}
     ListUnfreeze -- Permit graphical changes to a list.  (V2.6)

@{b}TEMPLATE@{ub}
     LIST/A

@{b}FUNCTION@{ub}
     Permits graphical changes to a list that was frozen before.

@{b}INPUTS@{ub}
     LIST/A   - name of the list to be unfrozen. Currently these lists may be
                unfrozen:
                   MAILS - the main mail list

@{b}RETURNS@{ub}

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" LISTFREEZE " link "RX_LISTFREEZE"}

@endnode

@node "RX_MAILARCHIVE" "ARexx command: MAILARCHIVE"
@next "RX_MAILBOUNCE"
@prev "RX_LISTUNFREEZE"
@toc "REXX"

MAILARCHIVE
-----------

@{b}NAME@{ub}
     MailArchive -- Move the selected messages to another folder.

@{b}TEMPLATE@{ub}
     FOLDER/A

@{b}FUNCTION@{ub}
     Moves the selected messages to the specified folder.

@{b}INPUTS@{ub}
     FOLDER/A   - name, directory or number of the destination folder;
                  the folder at the top of the folder list is at
                  position 0

@{b}RETURNS@{ub}
     RC is set to 10 if the specified folder doesn't exist.

@{b}NOTES@{ub}
     Superseded by @{" MAILMOVE " link "RX_MAILMOVE"} in V2.0+.  Don't use it in new scripts.

@{b}EXAMPLE@{ub}
         /* Move the selected messages to the Archived folder */

         MAILARCHIVE Archived

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILMOVE " link "RX_MAILMOVE"}

@endnode

@node "RX_MAILBOUNCE" "ARexx command: MAILBOUNCE"
@next "RX_MAILCHANGESUBJECT"
@prev "RX_MAILARCHIVE"
@toc "REXX"

MAILBOUNCE
----------

@{b}NAME@{ub}
     MailBounce -- Open a new Write window to bounce the current message.
                   (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,QUIET/S

@{b}FUNCTION@{ub}
     Opens a cut-down Write window to bounce the current message to
     another recipient.

@{b}INPUTS@{ub}
     VAR/K     - alternative variable to store the number of the created
                 window instead of RESULT
     STEM/K    - base name used for the stem where the returned data
                 will be stored
     QUIET/S   - force the window to stay invisible  (V2.1)

@{b}RETURNS@{ub}
     <STEM>WINDOW - number of the created window if the command had
                    success; may be 0 or 1 (or 2, if QUIET is enabled)

     RC is set to 10 if the window cannot be opened, maybe because the
     limit of two Write windows has been reached.

@{b}NOTES@{ub}
     In the outgoing message, only the "To:" field can be edited.

@{b}EXAMPLE@{ub}
         /* Silently bounce the current message */

         MAILBOUNCE QUIET
         WRITETO 'joe\@example.com' 'mars'
         WRITESEND

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILCHANGESUBJECT" "ARexx command: MAILCHANGESUBJECT"
@next "RX_MAILCHECK"
@prev "RX_MAILBOUNCE"
@toc "REXX"

MAILCHANGESUBJECT
-----------------

@{b}NAME@{ub}
     MailChangeSubject -- Change the subject of the selected messages.
                          (V2.1)

@{b}TEMPLATE@{ub}
     SUBJECT/A

@{b}FUNCTION@{ub}
     Changes the subject of all the selected messages.

@{b}INPUTS@{ub}
     SUBJECT/A   - new subject (upto 199 characters)

@{b}RETURNS@{ub}

@{b}NOTES@{ub}
     If the supplied string is longer than 199 characters, it will be
     truncated.

@{b}EXAMPLE@{ub}
     /* Change the subject of the selected messages */

     'MAILCHANGESUBJECT "This is the new subject"'

@{b}BUGS@{ub}
     The command didn't check that the string was not longer than the
     maximum length allowed, causing a buffer overrun that spilled onto
     the message file comment when this happened.  Fixed in V2.4.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILCHECK" "ARexx command: MAILCHECK"
@next "RX_MAILCOPY"
@prev "RX_MAILCHANGESUBJECT"
@toc "REXX"

MAILCHECK
---------

@{b}NAME@{ub}
     MailCheck -- Download new mail.

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,POP/K/N,MANUAL/S

@{b}FUNCTION@{ub}
     Downloads new email from the specified POP3 account, or from all
     of them if none is specified.

@{b}INPUTS@{ub}
     VAR/K      - alternative variable to put the results into instead of
                  RESULT  (V2.0)
     STEM/K     - base name used for the stems where the returned data
                  will be stored  (V2.0)
     POP/K/N    - POP3 mail account to check, specified as the position
                  in the list of POP3 accounts in Configuration ->TCP/IP;
                  the account at the top is account 0  (V2.0)
     MANUAL/S   - open the transfer window to enable user interaction,
                  i.e. message preselection  (V2.0)

@{b}RETURNS@{ub}
     VAR              - info returned by the query
     <STEM>DOWNLOADED - total number of downloaded emails
     <STEM>ONSERVER   - total number of emails remaining on the server
     <STEM>DUPSKIPPED - total number of duplicates skipped
     <STEM>DELETED    - total number of emails deleted from the server

     In V1.x, RC was always set to 0.  As of V2.0 however, RC is set to
     5 if the TCP/IP stack is not online.

     Likewise, in V1.x RESULT was set to the number of downloaded emails,
     or -1 if the connection to the mail server failed.

@{b}NOTES@{ub}
     The command returns immediately if MANUAL is used.

     If no account is specified, the command will only check those
     mail accounts marked as "active" in the configuration, just like
     if the "Get" button was pressed in the toolbar.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Download email from a mail account */

         MAILCHECK POP 2 STEM st.

         /* Display results */

         SAY 'Downloaded emails:  'st.downloaded
         SAY 'Left on server:     'st.onserver
         SAY 'Duplicates skipped: 'st.dupskipped
         SAY 'Deleted on server:  'st.deleted

@{b}BUGS@{ub}
     RC was set to 5 if no mail was found on the server, and
     <STEM>ONSERVER simply returned the number of messages found.
     Both were fixed in V2.4.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILCOPY" "ARexx command: MAILCOPY"
@next "RX_MAILDELETE"
@prev "RX_MAILCHECK"
@toc "REXX"

MAILCOPY
--------

@{b}NAME@{ub}
     MailCopy -- Copy the selected messages.  (V2.0)

@{b}TEMPLATE@{ub}
     FOLDER/A

@{b}FUNCTION@{ub}
     Copies the selected messages to the specified folder.

@{b}INPUTS@{ub}
     FOLDER/A   - name or number of the destination folder; the folder
                  at the top is at position 0

@{b}RETURNS@{ub}
     RC is set to 10 if the specified folder doesn't exist.

@{b}NOTES@{ub}
     Except for the filenames, the copies are identical to the originals.

     The command doesn't mind the type of folder, i.e. it will copy an
     outgoing email to the "Incoming" folder if instructed to do so.

@{b}EXAMPLE@{ub}
         /* Copy the selected messages to a custom folder */

         MAILCOPY Archived

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILDELETE" "ARexx command: MAILDELETE"
@next "RX_MAILEDIT"
@prev "RX_MAILCOPY"
@toc "REXX"

MAILDELETE
----------

@{b}NAME@{ub}
     MailDelete -- Delete the selected messages.

@{b}TEMPLATE@{ub}
     ATONCE/S,FORCE/S

@{b}FUNCTION@{ub}
     Deletes the messages selected in the current folder.

@{b}INPUTS@{ub}
     ATONCE/S   - delete the messages immediately instead of moving them
                  to the 'Deleted' folder  (V2.0)
     FORCE/S    - skip any confirmation requester  (V2.0)

@{b}RETURNS@{ub}

@{b}NOTES@{ub}
     MailDelete can't delete files protected against deletion.

@{b}EXAMPLE@{ub}
         /* Force delete immediately the selected messages */

         MAILDELETE FORCE ATONCE

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILEDIT" "ARexx command: MAILEDIT"
@next "RX_MAILEXPORT"
@prev "RX_MAILDELETE"
@toc "REXX"

MAILEDIT
--------

@{b}NAME@{ub}
     MailEdit -- Edit the current message in a new Write window.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,QUIET/S

@{b}FUNCTION@{ub}
     Opens a new Write window to edit the selected message.

@{b}INPUTS@{ub}
     VAR/K     - alternative variable to store the number of the created
                 window instead of RESULT
     STEM/K    - base name used for the stem where the returned data
                 will be stored
     QUIET/S   - force the window to stay invisible  (V2.1)

@{b}RETURNS@{ub}
     VAR          - info returned by the command
     <STEM>WINDOW - number of the created window, may be either 0 or 1
                    (or 2, if QUIET is enabled)

     RC is set to 10 if the window cannot be opened, maybe because the
     limit of two Write windows has been reached.

@{b}NOTES@{ub}
     The command works even with email that is NOT intended as "outgoing",
     like email in the Incoming folder for instance, in which case the
     [Send now] and [Hold] buttons in the Write window are disabled.
     After being edited, the mail is marked as "ready to send" no matter
     in which folder it is located, and all the old headers are replaced
     except for "From:" and "To:", which must be manually edited.  Special
     care must be taken to ensure that these remain valid in the resulting
     message and no "undisclosed-recipients:;" or some such remains there
     by the time it is again saved.  Handle with caution.

@{b}EXAMPLE@{ub}
         /* Select the first message in the Outgoing folder */

         SETFOLDER Outgoing
         SETMAIL 0

         /* Edit this message */

         MAILEDIT

         /* Change the subject */

         'WRITESUBJECT "Email address change"'

         /* Put the message again in the queue */

         WRITEQUEUE

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILEXPORT" "ARexx command: MAILEXPORT"
@next "RX_MAILFILTER"
@prev "RX_MAILEDIT"
@toc "REXX"

MAILEXPORT
----------

@{b}NAME@{ub}
     MailExport -- Export the selected messages to a file.  (V2.0)

@{b}TEMPLATE@{ub}
     FILENAME/A,ALL/S,APPEND/S,QUIET/S

@{b}FUNCTION@{ub}
     Exports the selected messages to a file, in a format ready to
     be used by any mail application which supports the MBOX format.

@{b}INPUTS@{ub}
     FILENAME/A   - filename to use
     ALL/S        - export the whole folder
     APPEND/S     - append the data to an (already existing) file
     QUIET/S      - don't open the transfer window and export all mails
                    silently

@{b}RETURNS@{ub}
     RC is set to 10 if no message is selected or if the output file
     can't be written to.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Export all the contents of the current folder */

         MAILEXPORT 'ram:spool' ALL

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILFILTER" "ARexx command: MAILFILTER"
@next "RX_MAILFORWARD"
@prev "RX_MAILEXPORT"
@toc "REXX"

MAILFILTER
----------

@{b}NAME@{ub}
     MailFilter -- Filter messages in the current folder.  (V1.3.3)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,ALL/S

@{b}FUNCTION@{ub}
     Filters all the messages in the current folder, or only those
     marked as "new".

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT  (V2.0)
     STEM/K   - base name used for the stems where the returned data
                will be stored  (V2.0)
     ALL/S    - filter ALL the messages in the folder, instead of only
                those marked as "new"

@{b}RETURNS@{ub}
     VAR             - info returned by the query
     <STEM>CHECKED   - total number of messages checked
     <STEM>BOUNCED   - number of messages bounced
     <STEM>FORWARDED - number of messages forwarded
     <STEM>REPLIED   - number of messages auto-replied
     <STEM>EXECUTED  - number of messages that triggered a command
                       execution
     <STEM>MOVED     - number of messages moved to another folder
     <STEM>DELETED   - number of messages deleted

     Note that stems are initialized even for empty folders.

@{b}WARNING@{ub}
     Due to a design flaw in YAM, filtering a large amount of mail
     where lots of folder indices need to be loaded is potentially
     dangerous on Amigas with few memory, as the system might run
     out of memory while the filtering is being done, thus leading
     to a crash.  Use with caution.

@{b}NOTES@{ub}
     Contrary to what happens when using the GUI, the command doesn't
     put up any warning when working in a folder other than "Incoming".

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Filter all the messages in the current folder */

         MAILFILTER ALL STEM st.

         /* Display results */

         SAY 'Checked messages:   'st.checked
         SAY 'Bounced:            'st.bounced
         SAY 'Auto-forwarded:     'st.forwarded
         SAY 'Auto-replied:       'st.replied
         SAY 'Commands triggered: 'st.executed
         SAY 'Moved:              'st.moved
         SAY 'Deleted:            'st.deleted

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILFORWARD" "ARexx command: MAILFORWARD"
@next "RX_MAILIMPORT"
@prev "RX_MAILFILTER"
@toc "REXX"

MAILFORWARD
-----------

@{b}NAME@{ub}
     MailForward -- Open a new Write window to forward the selected
                    messages.

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,QUIET/S

@{b}FUNCTION@{ub}
     Opens a new Write window to forward the selected messages.

@{b}INPUTS@{ub}
     VAR/K     - alternative variable to put the results into instead of
                 RESULT  (V2.0)
     STEM/K    - base name used for the stem where the number of the created
                 window will be stored  (V2.0)
     QUIET/S   - force the window to stay invisible  (V2.1)

@{b}RETURNS@{ub}
     VAR          - info returned by the command
     <STEM>WINDOW - number of the created window, may be 0 or 1 (or 2,
                    if QUIET is enabled)

     RC is set to 10 if the window cannot be opened, maybe because the
     limit of two Write windows has been reached.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Silently forward the selected messages */

         MAILFORWARD QUIET
         WRITETO 'joe\@example.com'
         WRITESEND

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILIMPORT" "ARexx command: MAILIMPORT"
@next "RX_MAILINFO"
@prev "RX_MAILFORWARD"
@toc "REXX"

MAILIMPORT
----------

@{b}NAME@{ub}
     MailImport -- Import messages from a file on disk into the current
                   folder.  (V1.3.2)

@{b}TEMPLATE@{ub}
     FILENAME/A,QUIET/S,WAIT/S

@{b}FUNCTION@{ub}
     Imports messages from a file on disk into the current folder.
     The file is assumed to be in MBOX format.

@{b}INPUTS@{ub}
     FILENAME/A   - file to import messages from
     QUIET/S      - don't open the transfer window and import all mails
                    silently
     WAIT/S       - open the transfer window to enable user interaction,
                    i.e. message preselection  (V2.0)

@{b}RETURNS@{ub}
     RC is set to 10 if the filename cannot be opened.

@{b}NOTES@{ub}
     The command returns immediately if the WAIT switch is used.

@{b}EXAMPLE@{ub}
         /* Selectively import messages to the Incoming folder */

         SETFOLDER Incoming
         MAILIMPORT 'ram:spool' WAIT

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" NEWMAILFILE " link "RX_NEWMAILFILE"}

@endnode

@node "RX_MAILINFO" "ARexx command: MAILINFO"
@next "RX_MAILMOVE"
@prev "RX_MAILIMPORT"
@toc "REXX"

MAILINFO
--------

@{b}NAME@{ub}
     MailInfo -- Return information about a message.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,INDEX/N

@{b}FUNCTION@{ub}
     Returns information about a message in the list, or the current
     message if none is specified.

@{b}INPUTS@{ub}
     VAR/K     - alternative variable to put the results into instead of
                 RESULT
     STEM/K    - base name used for the stems where the returned data will
                 be stored
     INDEX/N   - position of the message you want info about, the message
                 at the top of the list occupying position 0; if no index
                 is specified, the current message will be used

@{b}RETURNS@{ub}
     VAR               - info returned by the query
     <STEM>INDEX       - position of the message in the list; the message
                         at the top occupies position 0
     <STEM>STATUS      - status of the message; possible values are

                            N - new
                            O - read
                            U - unread
                            R - replied
                            F - forwarded
                            S - sent
                            W - pending
                            H - hold
                            E - error sending

     <STEM>FROM        - sender of the message; specifically, the first sender
                         noted in the "From:" header
     <STEM>TO          - recipient of the message; actually, the first recipient
                         noted in the "To:" header
     <STEM>REPLYTO     - return address of the message; this will be either the
                         first recipient in the "Reply-To:" header, or the first
                         sender in the "From:" header if no "Reply-To:" header
                         exists
     <STEM>CC          - first entry in the CC: field, if any
     <STEM>BCC         - first entry in the BCC: field, if any
     <STEM>RESENTTO    - first entry in the ResentTo: field, if any
     <STEM>SUBJECT     - subject of the message (contents of the "Subject:"
                         header)
     <STEM>FILENAME    - filename where the message is stored, including
                         path
     <STEM>SIZE        - size of the message, in bytes
     <STEM>DATE        - date of the message, in "MM-DD-YY HH:MM:SS" format
     <STEM>FLAGS       - a 9 byte string in "MARCS-77M" format:

                            MARCS-77M
                            ||||| |||
                            ||||| ||`--------- @{b}M@{ub}arked flag  (V2.4)
                            ||||| |`---------- volatile flag (see @{" SETFLAG " link "RX_SETFLAG"})
                            ||||| `----------- permanent flag (see @{" SETFLAG " link "RX_SETFLAG"})
                            ||||`------------- PGP @{b}S@{ub}igned
                            |||`-------------- PGP en@{b}C@{ub}rypted
                            ||`--------------- status @{b}R@{ub}eport
                            |`---------------- contains @{b}A@{ub}ttachments
                            `----------------- @{b}M@{ub}ultiple recipients

     <STEM>MSGID       - compressed hexadecimal 32 bit representation of the
                         "Message-ID:" header contents, e.g. BBC62595  (V2.1)
     <STEM>FROMALL     - all entries from the From: field, the first entry will be
                         the same as for FROM
     <STEM>TOALL       - all entries from the To: field, the first entry will be
                         the same as for TO
     <STEM>REPLYTOALL  - all entries from the ReplyTo: field, the first entry will
                         be the same as for REPLYTO
     <STEM>CCALL       - all entries from the CC: field, the first entry will be
                         the same as for CC
     <STEM>BCCALL      - all entries from the BCC: field, the first entry will be
                         the same as for BCC
     <STEM>RESENTTOALL - all entries from the ResentTo: field, the first entry will
                         be the same as for RESENTTO

     RC is set to 10 if INDEX is out of the range of messages available in
     the folder.

@{b}NOTES@{ub}
     Starting with V2.4, <STEM>MSGID returns an hexadecimal value.
     Starting with V2.6, the "ALL" variables will return all addresses/names from the
        corresponding header field.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Get info about the current message */

         MAILINFO STEM st.

         /* Display results */

         SAY 'Message:    'st.index
         status = st.status
         SELECT
            WHEN status = 'N' THEN status = 'New'
            WHEN status = 'O' THEN status = 'Read'
            WHEN status = 'U' THEN status = 'Unread'
            WHEN status = 'R' THEN status = 'Replied'
            WHEN status = 'F' THEN status = 'Forwarded'
            WHEN status = 'S' THEN status = 'Sent'
            WHEN status = 'W' THEN status = 'Pending'
            WHEN status = 'H' THEN status = 'Hold'
            OTHERWISE status = 'Error sending'
         END
         SAY 'Status:     'status
         SAY 'From:       'st.from
         SAY 'To:         'st.to
         DO i = 0 TO info.TOALL.COUNT-1
            say 'To:         'st.TOALL.i
         END
         SAY 'Reply-To:   'st.replyto
         SAY 'Subject:    'st.subject
         SAY 'Filename:   'st.filename
         SAY 'Size:       'st.size
         SAY 'Date:       'st.date
         SAY 'Flags:      'st.flags
         SAY 'Message-ID: 'st.msgid

@{b}BUGS@{ub}
     In V2.3p1, <STEM>FILENAME omitted the folder name part if an INDEX
     was specified.  Fixed in V2.4.

@{b}SEE ALSO@{ub}
     @{" SETFLAG " link "RX_SETFLAG"}

@endnode

@node "RX_MAILMOVE" "ARexx command: MAILMOVE"
@next "RX_MAILREAD"
@prev "RX_MAILINFO"
@toc "REXX"

MAILMOVE
--------

@{b}NAME@{ub}
     MailMove -- Move the selected messages to another folder.  (V2.0)

@{b}TEMPLATE@{ub}
     FOLDER/A

@{b}FUNCTION@{ub}
     Moves the selected messages to the specified folder.

@{b}INPUTS@{ub}
     FOLDER/A   - name, directory or number of the destination folder;
                  the folder at the top of the folder list is at position 0

@{b}RETURNS@{ub}
     RC is set to 10 if the specified folder doesn't exist.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Move the selected messages to the Archived folder */

         MAILMOVE Archived

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" NEWMAILFILE " link "RX_NEWMAILFILE"}

@endnode

@node "RX_MAILREAD" "ARexx command: MAILREAD"
@next "RX_MAILREPLY"
@prev "RX_MAILMOVE"
@toc "REXX"

MAILREAD
--------

@{b}NAME@{ub}
     MailRead -- Load the current message in the Read window.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,WINDOW/N,QUIET/S

@{b}FUNCTION@{ub}
     Loads the current message into the Read window, or activates an
     already opened Read window to let other commands act upon it
     afterwards.

@{b}INPUTS@{ub}
     VAR/K      - alternative variable to put the results into instead of
                  RESULT
     STEM/K     - base name used for the stem where the returned data will
                  be stored
     WINDOW/N   - change the command behavior to just activate an already
                  opened Read window, possible values go between 0 and 3
     QUIET/S    - force the window to stay invisible

@{b}RETURNS@{ub}
     VAR          - info returned by the command
     <STEM>WINDOW - number of the Read window now active, possible values
                    go between 0 and 3

     RC is set to 10 if WINDOW is used with a value referring to an
     inexistant window or if another slot is asked but all of them
     are already taken.

@{b}NOTES@{ub}
     For all intents and purposes, the status of the "Multiple windows"
     flag in the Read configuration is irrelevant for this command.

     Window slots are dynamically assigned as they are required until
     all four are occupied, and remain in use until the relevant window
     is closed (an "invisible" Read window is also "open" within this
     context).  The optional WINDOW parameter sets the @{b}active@{ub} Read window,
     upon which the @{" READCLOSE " link "RX_READCLOSE"}, @{" READINFO " link "RX_READINFO"}, @{" READPRINT " link "RX_READPRINT"} and @{" READSAVE " link "RX_READSAVE"}
     commands will act when called; therefore, the MAILREAD command
     @{b}should@{ub} be called before using any of them to ensure they act on
     the window that they are supposed to.  Note that manually activating
     a Read window using the GUI does @{b}not@{ub} magically makes it the target
     of the above mentioned commands.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}
     The WINDOW input parameter was never honoured; this was fixed
     in V2.4.

@{b}SEE ALSO@{ub}
     @{" READCLOSE " link "RX_READCLOSE"}

@endnode

@node "RX_MAILREPLY" "ARexx command: MAILREPLY"
@next "RX_MAILSEND"
@prev "RX_MAILREAD"
@toc "REXX"

MAILREPLY
---------

@{b}NAME@{ub}
     MailReply -- Open a new Write window to reply the selected messages.

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,QUIET/S

@{b}FUNCTION@{ub}
     Opens a new Write window in order to reply the selected messages.

@{b}INPUTS@{ub}
     VAR/K     - alternative variable to put the results into instead of
                 RESULT  (V2.0)
     STEM/K    - base name used for the stem where the returned data will
                 be stored  (V2.0)
     QUIET/S   - force the window to stay invisible  (V2.1)

@{b}RETURNS@{ub}
     VAR          - info returned by the command
     <STEM>WINDOW - number of the created window, may be 0 or 1 (or 2,
                    if QUIET is enabled)

     RC is set to 10 if no message is selected, typically because the
     folder is empty.

@{b}NOTES@{ub}
     Depending on the configuration, a requester may open to e.g. let the
     user select the address to reply to; the command won't return until
     the Write window finally opens.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILSEND" "ARexx command: MAILSEND"
@next "RX_MAILSENDALL"
@prev "RX_MAILREPLY"
@toc "REXX"

MAILSEND
--------

@{b}NAME@{ub}
     MailSend -- Send messages in the "Outgoing" folder.

@{b}TEMPLATE@{ub}
     ALL/S

@{b}FUNCTION@{ub}
     Sends either all or only the selected messages in the "Outgoing"
     folder.

     Messages marked as "Hold" are not affected by the command.

@{b}INPUTS@{ub}
     ALL/S   - optional, force the command to send all the messages  (V2.0)

@{b}RETURNS@{ub}
     RC is set to 5 if the system is not online or if there isn't any
     message ready to be sent.  (V2.0)

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}
     No warning was returned in case of a problem to send.  This was
     fixed in V2.0.

@{b}SEE ALSO@{ub}
     @{" MAILSENDALL " link "RX_MAILSENDALL"}

@endnode

@node "RX_MAILSENDALL" "ARexx command: MAILSENDALL"
@next "RX_MAILSTATUS"
@prev "RX_MAILSEND"
@toc "REXX"

MAILSENDALL
-----------

@{b}NAME@{ub}
     MailSendAll -- Send all the messages in the "Outgoing" folder.

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Sends all the messages in the "Outgoing" folder.

     Messages marked as "Hold" are not affected by the command.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}
     In V1.x, RC was always set to 0.  As of V2.0 however, RC is set to
     5 if the TCP/IP stack is not online of if there isn't any message
     ready to be sent.

     Likewise, in V1.x RESULT was set to the number of sent emails,
     or -1 if the connection to the mail server failed.  RESULT is
     never initialized in V2.0+.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}
     No warning was returned in case of a problem to send.  This was
     fixed in V2.0.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILSTATUS" "ARexx command: MAILSTATUS"
@next "RX_MAILUPDATE"
@prev "RX_MAILSENDALL"
@toc "REXX"

MAILSTATUS
----------

@{b}NAME@{ub}
     MailStatus -- Change the status of the selected messages.  (V2.0)

@{b}TEMPLATE@{ub}
     STATUS/A

@{b}FUNCTION@{ub}
     Changes the status of the selected messages.

     Only the basic "read", "unread", "on hold" and "ready to send"
     status can be changed with the command; additional flags like
     "marked", "important", etc. remain untouched.

@{b}INPUTS@{ub}
     STATUS/A   - may be one of

                     H - on hold
                     N - new and unread
                     O - old and read
                     Q - queued for sending
                     R - the same as O
                     U - old unread
                     W - the same as Q

@{b}RETURNS@{ub}
     RC is set to 5 if no valid STATUS is supplied, or to 10 if it is
     not supplied at all.

@{b}NOTES@{ub}
     The command won't mind the type of folder, i.e. it will change
     the status of a message in the Incoming folder to "Ready to send"
     if instructed to do so.

@{b}EXAMPLE@{ub}
         /* Switch all selected messages to "Unread" */

         MAILSTATUS U

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILUPDATE" "ARexx command: MAILUPDATE"
@next "RX_MAILWRITE"
@prev "RX_MAILSTATUS"
@toc "REXX"

MAILUPDATE
----------

@{b}NAME@{ub}
     MailUpdate -- Update the index of the current folder.  (V1.3.3)

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Updates the index of the current folder.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}
     There isn't any guarantee that the index is actually updated
     or created, i.e. if the relevant ".index" file has been write
     protected, no error will be reported.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_MAILWRITE" "ARexx command: MAILWRITE"
@next "RX_NEWMAILFILE"
@prev "RX_MAILUPDATE"
@toc "REXX"

MAILWRITE
---------

@{b}NAME@{ub}
     MailWrite -- Open a new Write window or activate one already opened.
                  (V1.3)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,WINDOW/N,QUIET/S

@{b}FUNCTION@{ub}
     Opens a Write window to compose a new mail or activates one already
     opened.

     Except when replying/forwarding/bouncing email where only one
     Write window is used, MAILWRITE is needed before trying to edit
     any part of a new message.

@{b}INPUTS@{ub}
     VAR/K      - alternative variable to put the results into instead of
                  RESULT  (V2.0)
     STEM/K     - base name used for the stem where the returned data will
                  be stored  (V2.0)
     WINDOW/N   - change the command behavior to just activate an already
                  opened Write window, may be 0 or 1 (or 2, to refer to an
                  invisible Write window)
     QUIET/S    - force the window to stay invisible  (V2.1)

@{b}RETURNS@{ub}
     VAR          - info returned by the command
     <STEM>WINDOW - number of the created/activated window, may be 0 or 1
                    (or 2, if QUIET is enabled)

     RC is set to 5 if WINDOW is used with a value referring to an
     inexistant window, or to 10 if the window cannot be opened, maybe
     because the limit of two Write windows has been reached.

@{b}NOTES@{ub}
     Window slots are dinamically assigned as they are required until
     all of them are occupied, and remain in use until the relevant window
     is closed (an "invisible" Write window is also "open" within this
     context).  The optional WINDOW parameter sets the @{b}active@{ub} Write window,
     upon which the @{" WRITEATTACH " link "RX_WRITEATTACH"}, @{" WRITEBCC " link "RX_WRITEBCC"}, @{" WRITECC " link "RX_WRITECC"}, @{" WRITEEDITOR " link "RX_WRITEEDITOR"}
     @{" WRITEFROM " link "RX_WRITEFROM"}, @{" WRITELETTER " link "RX_WRITELETTER"}, @{" WRITEMAILTO " link "RX_WRITEMAILTO"}, @{" WRITEOPTIONS " link "RX_WRITEOPTIONS"},
     @{" WRITEQUEUE " link "RX_WRITEQUEUE"}, @{" WRITEREPLYTO " link "RX_WRITEREPLYTO"}, @{" WRITESEND " link "RX_WRITESEND"}, @{" WRITESUBJECT" link "RX_WRITESUBJECT"}, and
     @{" WRITETO " link "RX_WRITETO"} commands will act when called, though strictly speaking
     this is only necessary when at least two Write windows are opened
     at the same time - in that case, "MAILWRITE WINDOW x" should be
     called before using any of these commands to ensure they act on
     the window they are supposed to.

     Regardless, note that manually activating a Write window using the
     GUI does @{b}not@{ub} magically make it the target of the above mentioned
     commands.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Start a new mail */

         MAILWRITE STEM st.
         win1 = st.window

         /* Start yet another mail */

         MAILWRITE STEM st.
         win2 = st.window

         /* Edit the first Write window */

         MAILWRITE WINDOW win1
         WRITETO boss\@example.com
         'WRITESUBJECT "I don't think I can go to work today"'
         WRITELETTER 'work:excuses.txt'

         /* Edit the second Write window */

         MAILWRITE WINDOW win2
         WRITETO peggy\@example.org
         'WRITESUBJECT "Stuffed at work, I'll be late"'

         /* Put the first email in the Outgoing queue */

         MAILWRITE WINDOW win1
         WRITEQUEUE

         /* Start a new email using an invisible Write window */

         MAILWRITE STEM st. QUIET
         win3 = st.window
         WRITETO sales\@example.com
         'WRITESUBJECT "Two with Mozzarella + lots of coke"'
         WRITELETTER 'dh5:priv/Snail_Linda.txt'

         /* Finish editing the second email and send it at once */

         MAILWRITE WINDOW win2
         WRITESEND

         /* Send the third email */

         MAILWRITE WINDOW win3
         WRITEOPTIONS DELETE   /* avoid leaving any traces */
         WRITESEND

@{b}BUGS@{ub}
     MAILWRITE would throw Enforcer hits if YAM was iconified and the
     external editor was configured to be launched immediately, or when
     the QUIET switch was used; this was fixed in V2.3.

@{b}SEE ALSO@{ub}

@endnode

@node "RX_NEWMAILFILE" "ARexx command: NEWMAILFILE"
@next "RX_QUIT"
@prev "RX_MAILWRITE"
@toc "REXX"

NEWMAILFILE
-----------

@{b}NAME@{ub}
     NewMailFile -- Return a valid, but unused message filename for
                    a folder.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,FOLDER

@{b}FUNCTION@{ub}
     Returns a valid but still unused message filename for a folder,
     based on the current date.  This is the filename that YAM will
     use when adding the next message to this folder.

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT
     STEM/K   - base name used for the stem where the filename will be
                returned
     FOLDER   - optional, name or number of the folder; if none if
                supplied, the current folder will be used

@{b}RETURNS@{ub}
     VAR            - filename returned, with path
     <STEM>FILENAME - filename returned, with path

     RC is set to 10 if the specified folder doesn't exist or a group
     is currently selected.

@{b}NOTES@{ub}
     The command works by trying to lock the first message slot usable for
     the current date (e.g. Work:YAM/folder_name/09097.001 for Nov 28, 2002)
     and then working from there until the lock fails.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_QUIT" "ARexx command: QUIT"
@next "RX_READCLOSE"
@prev "RX_NEWMAILFILE"
@toc "REXX"

QUIT
----

@{b}NAME@{ub}
     Quit -- Exit YAM.

@{b}TEMPLATE@{ub}
     FORCE/S

@{b}FUNCTION@{ub}
     Quits the application.

@{b}INPUTS@{ub}
     FORCE/S   - skip any safety requester, except for changes in the
                 address book done using the GUI

@{b}RETURNS@{ub}

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" RESTART " link "RX_RESTART"}

@endnode

@node "RX_READCLOSE" "ARexx command: READCLOSE"
@next "RX_READINFO"
@prev "RX_QUIT"
@toc "REXX"

READCLOSE
---------

@{b}NAME@{ub}
     ReadClose -- Close the active Read window.  (V2.0)

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Closes the active Read window as set by @{" MAILREAD " link "RX_MAILREAD"}.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}
     RC is set to 10 if no Read window was previously specified as
     "active" with @{" MAILREAD " link "RX_MAILREAD"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}
     The command used to blindly act upon the first Read window opened
     at any given time; this was changed in V2.4 to require the use
     of @{" MAILREAD " link "RX_MAILREAD"} to explicitely mark a window as "active".

@{b}SEE ALSO@{ub}
     @{" MAILREAD " link "RX_MAILREAD"}

@endnode

@node "RX_READINFO" "ARexx command: READINFO"
@next "RX_READPRINT"
@prev "RX_READCLOSE"
@toc "REXX"

READINFO
--------

@{b}NAME@{ub}
     ReadInfo -- Return information about the attachments of the message
                 in the active Read window.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K

@{b}FUNCTION@{ub}
     Returns information about the attachments of the message in the
     active Read window as set by @{" MAILREAD " link "RX_MAILREAD"}.

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT
     STEM/K   - base name used for the stems where the results will be
                stored

@{b}RETURNS@{ub}
     VAR                  - info returned by the query
     <STEM>FILENAME.COUNT - number of parts of the message, excluding
                            the first header block
     <STEM>FILENAME.NR    - filename of the nth part of the message, where
                            nr is a number between 0 and n-1 (0 = first part
                            after the headers, usually the body of the
                            message)
     <STEM>FILETYPE.NR    - content type of the nth part of the message,
                            where nr is a number between 0 and n-1
                            (0 = first part after the headers, usually
                            the body of the message)
     <STEM>FILESIZE.NR    - size of the nth part of the message, where
                            nr is a number between 0 and n-1 (0 = first
                            part after the headers, usually the body of
                            the message)
     <STEM>TEMPFILE.NR    - temporary file where the nth part of the message
                            is stored, nr being a number between 0 and n-1
                            (0 = first part after the headers, usually the
                            body of the message)

     RC is set to 10 if no Read window was previously specified as "active"
     with @{" MAILREAD " link "RX_MAILREAD"}.

@{b}NOTES@{ub}
     No filename is returned for the body of the message.

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Silently decode the current message */

         MAILREAD QUIET

         /* Get info about the message, then close the window */

         READINFO STEM ri.
         READCLOSE

         /* Display results */

         DO i = 0 TO ri.filename.count-1
            SAY 'Information about part #'i+1
            SAY '  File name: 'ri.filename.i
            SAY '  File type: 'ri.filetype.i
        SAY '  File size: 'ri.filesize.i
        SAY '  Stored in: 'ri.tempfile.i
     END

@{b}BUGS@{ub}
     The command used to blindly act upon the first Read window opened
     at any given time; this was changed in V2.4 to require the use
     of @{" MAILREAD " link "RX_MAILREAD"} to explicitely mark a window as "active".

@{b}SEE ALSO@{ub}
     @{" MAILREAD " link "RX_MAILREAD"}

@endnode

@node "RX_READPRINT" "ARexx command: READPRINT"
@next "RX_READSAVE"
@prev "RX_READINFO"
@toc "REXX"

READPRINT
---------

@{b}NAME@{ub}
     ReadPrint -- Print a part of the message in the active Read window
                  to the printer.  (V2.0)

@{b}TEMPLATE@{ub}
     PART/N

@{b}FUNCTION@{ub}
     Sends to the printer a part of the message in the active Read window,
     as set by @{" MAILREAD " link "RX_MAILREAD"}.

@{b}INPUTS@{ub}
     PART/N   - part of the message to send to the printer, possible values
                are 1 for the first part of the message (usually the body),
                2 or higher for further parts, or no value at all to get a
                printout of the visible part of the message

@{b}RETURNS@{ub}
     RC is set to 10 if the specified part does not exist or no Read window
     was previously specified as "active" with @{" MAILREAD " link "RX_MAILREAD"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Silently decode the current message */

         MAILREAD QUIET

         /* Print the body, then close the message */

         READPRINT 1
         READCLOSE

@{b}BUGS@{ub}
     The command used to blindly act upon the first Read window opened
     at any given time; this was changed in V2.4 to require the use
     of @{" MAILREAD " link "RX_MAILREAD"} to explicitely mark a window as "active".

@{b}SEE ALSO@{ub}
     @{" MAILREAD " link "RX_MAILREAD"}, @{" READINFO " link "RX_READINFO"}

@endnode

@node "RX_READSAVE" "ARexx command: READSAVE"
@next "RX_REQUEST"
@prev "RX_READPRINT"
@toc "REXX"

READSAVE
--------

@{b}NAME@{ub}
     ReadSave -- Save a part of the message in the active Read window
                 to a file.  (V2.0)

@{b}TEMPLATE@{ub}
     PART/N,FILENAME/K,OVERWRITE/S

@{b}FUNCTION@{ub}
     Saves a part of the message in the active Read window to a file.

@{b}INPUTS@{ub}
     PART/N        - part of the message to save, possible values are 1 for
                     the first part of the message (usually the body), 2 or
                     higher for further parts, or no value at all to get a
                     printout of the visible part of the message
     FILENAME/K    - filename to use
     OVERWRITE/S   - avoid any security requesters opened due to an
                     already existing file

@{b}RETURNS@{ub}
     RC is set to 10 if the specified part doesn't exist, if the file
     couldn't be written to or if no Read window was previously specified
     as "active" with @{" MAILREAD " link "RX_MAILREAD"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Silently decode the current message */

         MAILREAD QUIET

         /* Save the body to a file, then close the message */

         READSAVE 1 FILENAME 'mail:important'
         READCLOSE

@{b}BUGS@{ub}
     The command used to blindly act upon the first Read window opened
     at any given time; this was changed in V2.4 to require the use
     of @{" MAILREAD " link "RX_MAILREAD"} to explicitely mark a window as "active".

@{b}SEE ALSO@{ub}
     @{" MAILREAD " link "RX_MAILREAD"}, @{" READINFO " link "RX_READINFO"}

@endnode

@node "RX_REQUEST" "ARexx command: REQUEST"
@next "RX_REQUESTFILE"
@prev "RX_READSAVE"
@toc "REXX"

REQUEST
-------

@{b}NAME@{ub}
     Request -- Open a custom requester.  (V1.3.3)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,BODY/A,GADGETS/A

@{b}FUNCTION@{ub}
     Opens a requester containing the supplied body and gadgets, and
     returns the choice taken by the user.

@{b}INPUTS@{ub}
     VAR/K       - alternative variable to put the results into instead of
                   RESULT  (V2.0)
     STEM/K      - base name used for the stem where the result will be
                   stored  (V2.0)
     BODY/A      - a string containing the body of the requester
     GADGETS/A   - a string containing a vertical bar ("|") separated list
                   of gadget labels

@{b}RETURNS@{ub}
     VAR          - info returned by the query
     <STEM>RESULT - number of the selected gadget; may be 0 for the
                    rightmost gadget, 1 for the leftmost gadget, and
                    2..n for the second, etc. gadget from the left

@{b}NOTES@{ub}
     Following the MUI specs, every gadget can have a shortcut by
     inserting a '_' (underscore) character in front of the character
     that should be used as shortcut.  A default gadget can also be
     defined with a '*' (asterisk) character in front; the default
     gadget is activated when pressing the <Return> key.

     Styles can also be used.  See the MUI developer documentation
     for more info.

     Please respect the Amiga User Interface Style Guide when creating
     requesters.  For instance, the rightmost gadget will be triggered
     by the <Esc> key, and should always offer a safe way out.

@{b}EXAMPLE@{ub}
         /* Enable result codes */
         OPTIONS RESULTS

         /* Prepare the text for our requester.
          * Here we have to escape the single '*' (asterisk) via
          * an additional asterisk sign because an asterisk is
          * a reserved character for ARexx itself
          */
         body = '"Isn't YAM just great?"'
         gadgets = '"**_Yeah!|_No way, Outlook rules!|_What is YAM?"'

         /* Open a custom requester */
         REQUEST body gadgets

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_REQUESTFILE" "ARexx command: REQUESTFILE"
@next "RX_REQUESTFOLDER"
@prev "RX_REQUEST"
@toc "REXX"

REQUESTFILE
-------------

@{b}NAME@{ub}
     RequestFile -- Request the user to select a file.  (V2.6)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,TITLE/A,DRAWER,FILE,MULTISELECT/S,DRAWERSONLY/S,SAVEMODE/S

@{b}FUNCTION@{ub}
     Requests the user to select a file.

@{b}INPUTS@{ub}
     VAR/K             - alternative variable to put the results into
                         instead of RESULT
     STEM/K            - base name used for the stem where the result
                         will be stored
     TITLE/A           - the title of the file requester
     DRAWER            - initial drawer when opening the requester
     FILE              - initial file when opening the requester
     MULTISELECT/S     - enable multiselection
     DRAWERSONLY/S     - exclude files from selection
     SAVEMODE/S        - set requester to "save mode", no selection via
                         doubleclick will be possible then

@{b}RETURNS@{ub}
     VAR          - info returned by the query
     <STEM>DRAWER - name of the selected drawer
     <STEM>FILES  - names of the selected files

     RC is set to 1 if the user cancels the requester.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Enable result codes */
         OPTIONS RESULTS

         REQUESTFILE title="Please select a file" drawer="RAM:" STEM files.

         IF RC~= 0 THEN EXIT

         SAY "selected drawer is '" files.drawer "'"
         DO i=0 to files.COUNT-1
           SAY "selected file '" files.files.i "'"
         END

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_REQUESTFOLDER" "ARexx command: REQUESTFOLDER"
@next "RX_REQUESTSTRING"
@prev "RX_REQUESTFILE"
@toc "REXX"

REQUESTFOLDER
-------------

@{b}NAME@{ub}
     RequestFolder -- Request the user to select a folder.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,BODY/A,EXCLUDEACTIVE/S

@{b}FUNCTION@{ub}
     Requests the user to select a folder, perhaps excluding the
     current folder.

@{b}INPUTS@{ub}
     VAR/K             - alternative variable to put the results into
                         instead of RESULT
     STEM/K            - base name used for the stem where the result
                         will be stored
     BODY/A            - a string containing the body of the requester
     EXCLUDEACTIVE/S   - exclude the current folder from the list

@{b}RETURNS@{ub}
     VAR          - info returned by the query
     <STEM>FOLDER - name of the selected folder

     RC is set to 1 if the user cancels the requester.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" SETFOLDER " link "RX_SETFOLDER"}

@endnode

@node "RX_REQUESTSTRING" "ARexx command: REQUESTSTRING"
@next "RX_RESTART"
@prev "RX_REQUESTFOLDER"
@toc "REXX"

REQUESTSTRING
-------------

@{b}NAME@{ub}
     RequestString -- Open a requester asking the user to enter a
                      text string.  (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,BODY/A,STRING/K,SECRET/S

@{b}FUNCTION@{ub}
     Opens a requester asking the user to enter a text string.

@{b}INPUTS@{ub}
     VAR/K      - alternative variable to put the results into instead
                  of RESULT
     STEM/K     - base name used for the stem where the result will be
                  stored
     BODY/A     - a string containing the body of the requester
     STRING/K   - optional, text string used by default
     SECRET/S   - force characters to appear as asterisks ('*')

@{b}RETURNS@{ub}
     VAR          - info returned by the query
     <STEM>STRING - text entered in the requester

     RC is set to 1 if the user cancels the requester.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Request the user to type something */

         body = '"Please type your name"'
         default = '"Bill Clinton"'

         REQUESTSTRING body STRING default

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_RESTART" "ARexx command: RESTART"
@next "RX_SCREENTOBACK"
@prev "RX_REQUESTSTRING"
@toc "REXX"

RESTART
-------------

@{b}NAME@{ub}
     Restart -- Restart YAM (V2.7)

@{b}TEMPLATE@{ub}
     FORCE/S

@{b}FUNCTION@{ub}
     Restarts YAM, just as if the user had chosen "Restart" from the
     "Project" menu.

@{b}INPUTS@{ub}
     FORCE/S   - skip any safety requester, except for changes in the
                 address book done using the GUI

@{b}RETURNS@{ub}

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" QUIT " link "RX_QUIT"}

@endnode

@node "RX_SCREENTOBACK" "ARexx command: SCREENTOBACK"
@next "RX_SCREENTOFRONT"
@prev "RX_RESTART"
@toc "REXX"

SCREENTOBACK
------------

@{b}NAME@{ub}
     ScreenToBack -- Bring the YAM screen to the background.  (V2.0)

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Brings the screen where YAM is opened to the background.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}

@{b}NOTES@{ub}
     Only works if YAM is not iconified.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" SCREENTOFRONT " link "RX_SCREENTOFRONT"}

@endnode

@node "RX_SCREENTOFRONT" "ARexx command: SCREENTOFRONT"
@next "RX_SETFLAG"
@prev "RX_SCREENTOBACK"
@toc "REXX"

SCREENTOFRONT
-------------

@{b}NAME@{ub}
     ScreenToFront -- Bring the YAM screen to the foreground.  (V2.0)

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Brings the screen where YAM is opened to the foreground.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}

@{b}NOTES@{ub}
     Only works if YAM is not iconified.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" SCREENTOBACK " link "RX_SCREENTOBACK"}

@endnode

@node "RX_SETFLAG" "ARexx command: SETFLAG"
@next "RX_SETFOLDER"
@prev "RX_SCREENTOFRONT"
@toc "REXX"

SETFLAG
-------

@{b}NAME@{ub}
     SetFlag -- Set the PERmanent and VOLatile flags of the currently
                selected message.  (V2.0)

@{b}TEMPLATE@{ub}
     VOL/K/N,PER/K/N

@{b}FUNCTION@{ub}
     Sets the PERmanent and VOLatile flags of the currently selected
     message.  These flags aren't used internally, but may come in handy
     in complex ARexx scripts.

     The value of the permanent flag is stored in the message file
     comment to ensure it will survive a restart or index rescan.
     The value of the volatile flag is lost when any of these events
     happens.

@{b}INPUTS@{ub}
     VOL/K/N   - value of the VOLatile flag, may be between 0 and 7
     PER/K/N   - value of the PERmanent flag, may be between 0 and 7

@{b}RETURNS@{ub}
     RC is set to 10 if the supplied value is out of the acceptable
     range.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Set the permanent flag */

         SETFLAG PER 5

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILINFO " link "RX_MAILINFO"}

@endnode

@node "RX_SETFOLDER" "ARexx command: SETFOLDER"
@next "RX_SETMAIL"
@prev "RX_SETFLAG"
@toc "REXX"

SETFOLDER
---------

@{b}NAME@{ub}
     SetFolder -- Set the current folder.

@{b}TEMPLATE@{ub}
     FOLDER/A

@{b}FUNCTION@{ub}
     Makes the named folder the current folder.

@{b}INPUTS@{ub}
     FOLDER/A   - name, directory or number of the folder to turn into
                  the current folder; folder numbers start counting
                  from 0

@{b}RETURNS@{ub}
     RC is set to 10 if the specified folder doesn't exist.

@{b}NOTES@{ub}
     In YAM 1.0 - 1.3.2, SETFOLDER could only accept a folder number
     as argument.  This was changed in 1.3.3 to also accept folder names,
     and again in 2.2 to accept directory names, too.  Therefore, to be
     on the safe side scripts should check the YAM version in use before
     deciding to use the latter as argument.

     Also, bear in mind localization when referring to folders by their
     name.

@{b}EXAMPLE@{ub}
         /* Switch to the Outgoing folder */

         SETFOLDER Outgoing

         /* Switch to the first folder in the list */

         SETFOLDER 0

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" REQUESTFOLDER " link "RX_REQUESTFOLDER"}

@endnode

@node "RX_SETMAIL" "ARexx command: SETMAIL"
@next "RX_SETMAILFILE"
@prev "RX_SETFOLDER"
@toc "REXX"

SETMAIL
-------

@{b}NAME@{ub}
     SetMail -- Set the current message in the current folder by its
                position in the list.

@{b}TEMPLATE@{ub}
     NUM/N/A

@{b}FUNCTION@{ub}
     Sets the current message in the current folder by its position
     in the list.  The message list is redrawn if necessary to make the
     new current message visible, and all previously selected messages
     get deselected.

@{b}INPUTS@{ub}
     NUM/N/A   - position occupied by the message in the list, may be a
                 number between 0 and n-1

@{b}RETURNS@{ub}
     RC is set to 10 if the specified message doesn't exist.

@{b}NOTES@{ub}
     SETMAIL sets the current message, but doesn't *select* messages by
     itself; use @{" LISTSELECT " link "RX_LISTSELECT"} for that.

@{b}EXAMPLE@{ub}
         /* Make the third message in the list the current message */

         SETMAIL 2

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" LISTSELECT " link "RX_LISTSELECT"}, @{" SETMAILFILE " link "RX_SETMAILFILE"}

@endnode

@node "RX_SETMAILFILE" "ARexx command: SETMAILFILE"
@next "RX_SHOW"
@prev "RX_SETMAIL"
@toc "REXX"

SETMAILFILE
-----------

@{b}NAME@{ub}
     SetMailFile -- Set the current message in the current folder by
                    filename.  (V2.0)

@{b}TEMPLATE@{ub}
     MAILFILE/A

@{b}FUNCTION@{ub}
     Sets the current message in the current folder by filename.

@{b}INPUTS@{ub}
     MAILFILE/A   - filename where the message is stored

@{b}RETURNS@{ub}
     RC is set to 5 if the supplied filename can't be found.

@{b}NOTES@{ub}
     Path names are stripped.  For instance, if "09193.017" exists
     in the current folder and a bogus "foobar:bogus/09193.017"
     filename is supplied, the file will still be found.

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" SETMAIL " link "RX_SETMAIL"}

@endnode

@node "RX_SHOW" "ARexx command: SHOW"
@next "RX_USERINFO"
@prev "RX_SETMAILFILE"
@toc "REXX"

SHOW
----

@{b}NAME@{ub}
     Show -- Bring YAM from iconified state into full view.

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Brings YAM from iconified state into full view.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_USERINFO" "ARexx command: USERINFO"
@next "RX_WRITEATTACH"
@prev "RX_SHOW"
@toc "REXX"

USERINFO
--------

@{b}NAME@{ub}
     UserInfo -- Return details about the user currently logged in.
                 (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K

@{b}FUNCTION@{ub}
     Returns details about the user currently logged in.

@{b}INPUTS@{ub}
     VAR/K    - alternative variable to put the results into instead of
                RESULT
     STEM/K   - base name used for the stems where the results will be
                stored

@{b}RETURNS@{ub}
     VAR            - info returned by the query
     <STEM>USERNAME - user name of this user
     <STEM>EMAIL    - email address of this user
     <STEM>REALNAME - real name of this user
     <STEM>CONFIG   - configuration file of this user
     <STEM>MAILDIR  - mail directory of this user
     <STEM>FOLDERS  - current number of entries in the folder list;
                      groups will be ignored  (V2.1)

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}

@endnode

@node "RX_WRITEATTACH" "ARexx command: WRITEATTACH"
@next "RX_WRITEBCC"
@prev "RX_USERINFO"
@toc "REXX"

WRITEATTACH
-----------

@{b}NAME@{ub}
     WriteAttach -- Attach a file to a new message.

@{b}TEMPLATE@{ub}
     FILE/A,DESC,ENCMODE,CTYPE

@{b}FUNCTION@{ub}
     Attaches a file to a new message.

@{b}INPUTS@{ub}
     FILE/A    - filename to attach, with path
     DESC      - optional, string with a description for the file  (V1.3)
     ENCMODE   - optional, encoding type for the file; may be either
                 "uu" or "b64"  (V1.3)
     CTYPE     - optional, content type of the file  (V1.3)

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}
     By default, binary files are encoded as Base64 (MIME), whereas
     text files are UUencoded.

     The default content type is taken after scanning the built-in
     list of MIME types and then looking at the MIME types defined
     in the user configuration.  For instance, if the user has
     defined "application/pgs" as MIME type for files using the
     ".pgs" extension, all files attached bearing this extension
     will default to "application/pgs" unless CTYPE overrides this.
     If no suitable MIME type is found and no content type has been
     specified, YAM will fallback to "application/octet-stream".

@{b}EXAMPLE@{ub}
         /* Attach a file */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         WRITEATTACH 'Docs:Mag.pgs' ENCMODE 'b64' CTYPE 'application/pgs'

@{b}BUGS@{ub}
     No error is returned if the specified file was found but couldn't
     be opened.

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITEBCC" "ARexx command: WRITEBCC"
@next "RX_WRITECC"
@prev "RX_WRITEATTACH"
@toc "REXX"

WRITEBCC
--------

@{b}NAME@{ub}
     WriteBCC -- Enter one or more names, addresses or aliases into the
                 "Hidden copies to" field of the Write window.  (V2.0)

@{b}TEMPLATE@{ub}
     ADDRESS/A/M,ADD/S

@{b}FUNCTION@{ub}
     Enters one or more names, addresses or aliases into the
     "Hidden copies to" field of the Write window.  YAM will
     resolve names and aliases looking in the address book.

@{b}INPUTS@{ub}
     ADDRESS/A/M   - list of names/addresses/aliases
     ADD/S         - prevent the new data from replacing the old data
                     already present in the "Hidden copies to" field

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Adds some BCC recipients to a message */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         'WRITEBCC "George Bush" "j_doe" "carol\@example.com" ADD'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITECC" "ARexx command: WRITECC"
@next "RX_WRITEEDITOR"
@prev "RX_WRITEBCC"
@toc "REXX"

WRITECC
-------

@{b}NAME@{ub}
     WriteCC -- Enter one or more names, addresses or aliases into the
                "Copies to" field of the Write window.  (V2.0)

@{b}TEMPLATE@{ub}
     ADDRESS/A/M,ADD/S

@{b}FUNCTION@{ub}
     Enters one or more names, addresses or aliases into the "Copies to"
     field of the Write window.  YAM will resolve names and aliases
     looking in the address book.

@{b}INPUTS@{ub}
     ADDRESS/A/M   - list of names/addresses/aliases
     ADD/S         - prevent the new data from replacing the old data
                     already present in the "Copies to" field

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Adds some CC recipients to a message */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         'WRITECC "George Bush" "jdoe" "carol\@example.com" ADD'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITEEDITOR" "ARexx command: WRITEEDITOR"
@next "RX_WRITEFROM"
@prev "RX_WRITECC"
@toc "REXX"

WRITEEDITOR
-----------

@{b}NAME@{ub}
     WriteEditor -- Pass an ARexx command to the internal editor.
                    (V2.0)

@{b}TEMPLATE@{ub}
     VAR/K,STEM/K,COMMAND/A

@{b}FUNCTION@{ub}
     Passes an ARexx command to the internal editor to act upon the
     contents of a given Write window.

     Quoting the TextEditor.mcc class autodoc, the following commands
     are currently supported:

      CLEAR
      CUT
      COPY
      PASTE
      ERASE
      GOTOLINE       Template: /N/A
      GOTOCOLUMN     Template: /N/A
      CURSOR         Template: Up/S,Down/S,Left/S,Right/S
      LINE           Template: /N/A
      COLUMN         Template: /N/A
      NEXT           Template: Word/S,Sentence/S,Paragraph/S,Page/S
      PREVIOUS       Template: Word/S,Sentence/S,Paragraph/S,Page/S
      POSITION       Template: SOF/S,EOF/S,SOL/S,EOL/S,SOW/S,EOW/S,SOV/S,EOV/S
      SETBOOKMARK    Template: /N/A
      GOTOBOOKMARK   Template: /N/A
      TEXT           Template: /F
      UNDO
      REDO
      GETLINE
      GETCURSOR      Template: Line/S,Column/S
      MARK           Template: On/S,Off/S
      DELETE
      BACKSPACE
      KILLLINE
      TOUPPER
      TOLOWER

     Refer to the Amiga User Interface Style Guide for more info
     about these commands.

     Please note that because of the internal use of the ReadArgs() function,
     the ARexx Host requires to escape certain special characters like a newline
     (0x0a) or escape character (0x1b) if you want to pass it i.e. with an
     TEXT command to the texteditor.

     This means that you have to use the following escape sequences in your
     provided strings:

     *N substitutes to 0x0a
     *E substitutes to 0x1b
     ** substitutes to *
     *" substitutes to "

     Please have a look at the examples below for a short example on how to use
     these escape sequences properly.

@{b}INPUTS@{ub}
     VAR/K       - alternative variable to put the results into instead of
                   RESULT
     STEM/K      - base name used for the stem where the result will be
                   stored
     COMMAND/A   - the command string to be passed

@{b}RETURNS@{ub}
     VAR          - info returned by the query
     <STEM>RESULT - results of the command, if any

     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Enable result codes */

         OPTIONS RESULTS

         /* Start a new mail */

         MAILWRITE STEM st.
         win = st.window

         /* Edit the Write window */

         MAILWRITE WINDOW win
         WRITETO boss\@example.com
         'WRITESUBJECT "I don't think I can go to work today"'

         /* Clear the editor */

         WRITEEDITOR CLEAR

         /* Write some text into the editor */

         'WRITEEDITOR "TEXT Sorry, but I am sick today!"'

         /* Write some text containing a newline (*N) */

         'WRITEEDITOR "TEXT Hello Joe,*N I would like to meet you."'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITEFROM" "ARexx command: WRITEFROM"
@next "RX_WRITELETTER"
@prev "RX_WRITEEDITOR"
@toc "REXX"

WRITEFROM
---------

@{b}NAME@{ub}
     WriteFrom -- Enter a name, address or alias into the "From" field
                  of the Write window.  (V2.0)

@{b}TEMPLATE@{ub}
     ADDRESS/A

@{b}FUNCTION@{ub}
     Enters a name, address or alias into the "From" field of the Write
     window, replacing its old contents, if any.  YAM will resolve the
     name or alias looking in the address book.

@{b}INPUTS@{ub}
     ADDRESS/A   - name, address or alias

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as "active"
     with @{" MAILWRITE " link "RX_MAILWRITE"} or if an attempt is made to enter more than one
     sender.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Set the sender of a letter */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         WRITEFROM 'jdoe'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITELETTER" "ARexx command: WRITELETTER"
@next "RX_WRITEMAILTO"
@prev "RX_WRITEFROM"
@toc "REXX"

WRITELETTER
-----------

@{b}NAME@{ub}
     WriteLetter -- Load a file into the internal text editor.

@{b}TEMPLATE@{ub}
     FILE/A,NOSIG/S

@{b}FUNCTION@{ub}
     Loads a file into the internal text editor, completely replacing
     its current contents, if any.

@{b}INPUTS@{ub}
     FILE/A    - file to load; only a text file will be accepted
     NOSIG/S   - prevent the addition of any signature  (V2.0)

@{b}RETURNS@{ub}
     RC is set to 10 if the specified file could not be opened or
     if no Write window was previously specified as "active" with
     @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Load a file into the editor */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         WRITELETTER 'mail:templates/t2' NOSIG

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITEMAILTO" "ARexx command: WRITEMAILTO"
@next "RX_WRITEOPTIONS"
@prev "RX_WRITELETTER"
@toc "REXX"

WRITEMAILTO
-----------

@{b}NAME@{ub}
     WriteMailTo -- Enter one or more names, addresses or aliases
                    into the "To" field of the Write window.

@{b}TEMPLATE@{ub}
     ADDRESS/A/M

@{b}FUNCTION@{ub}
     Enters one or more names, addresses or aliases into the "To"
     field of the Write window, replacing whatever was already there.
     YAM will resolve names and aliases looking in the address book.

@{b}INPUTS@{ub}
     ADDRESS/A/M   - list of names/addresses/aliases

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}
     Superseded by @{" WRITETO " link "RX_WRITETO"} in V2.0+.

@{b}EXAMPLE@{ub}
         /* Set the primary recipients of a message */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         'WRITEMAILTO "George Bush" "jdoe" "carol\@example.com"'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITEOPTIONS" "ARexx command: WRITEOPTIONS"
@next "RX_WRITEQUEUE"
@prev "RX_WRITEMAILTO"
@toc "REXX"

WRITEOPTIONS
------------

@{b}NAME@{ub}
     WriteOptions -- Set the options of a new message.  (V2.0)

@{b}TEMPLATE@{ub}
     DELETE/S,RECEIPT/S,NOTIF/S,ADDINFO/S,IMPORTANCE/N,SIG/N,SECURITY/N

@{b}FUNCTION@{ub}
     Sets the options of a new message.

@{b}INPUTS@{ub}
     DELETE/S       - discard the message completely after sending
     RECEIPT/S      - ask for a return receipt
     NOTIF/S        - enable message tracking (MDN)
     ADDINFO/S      - add personal information
     IMPORTANCE/N   - importance of the message, possible values are

                         0 - high
                         1 - normal (default)
                         2 - low

     SIG/N          - signature to use, possible values are

                         0 - no signature
                         1 - default value taken from the Signature
                             configuration
                         2 - alt. signature #1
                         3 - alt. signature #2

     SECURITY/N     - security to use, possible values are

                         0 - none
                         1 - PGP signed
                         2 - PGP encrypted
                         3 - PGP signed & encrypted
                         4 - send anonymously
                         5 - default value for this recipient (default)

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}
     Defaults are taken from the program configuration; the default
     signature may vary depending on whether mailing list support is
     enabled or not for the current folder.  If anonymous send is
     specified, personal info and signatures are removed automatically.

@{b}EXAMPLE@{ub}
         /* Set a message to be sent anonymously */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         WRITEOPTIONS SECURITY 4

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITEQUEUE" "ARexx command: WRITEQUEUE"
@next "RX_WRITEREPLYTO"
@prev "RX_WRITEOPTIONS"
@toc "REXX"

WRITEQUEUE
----------

@{b}NAME@{ub}
     WriteQueue -- Put a new message into the Outgoing queue.

@{b}TEMPLATE@{ub}
     HOLD/S

@{b}FUNCTION@{ub}
     Puts a new, just composed message into the Outgoing queue.

@{b}INPUTS@{ub}
     HOLD/S   - mark the message as "Hold" to avoid sending it by
                mistake  (V2.0)

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* New mail */

         MAILWRITE
         WRITETO boss\@example.com
         'WRITESUBJECT "I don't think I can go to work today"'
         WRITELETTER 'work:excuses.txt'
         WRITEQUEUE

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE" link "RX_MAILWRITE"}, @{" WRITESEND " link "RX_WRITESEND"}

@endnode

@node "RX_WRITEREPLYTO" "ARexx command: WRITEREPLYTO"
@next "RX_WRITESEND"
@prev "RX_WRITEQUEUE"
@toc "REXX"

WRITEREPLYTO
------------

@{b}NAME@{ub}
     WriteReplyTo -- Enter a name, address or alias into the "Reply to"
                     field of the Write window.  (V2.0)

@{b}TEMPLATE@{ub}
     ADDRESS/A

@{b}FUNCTION@{ub}
     Enters a name, address or alias into the "Reply to" field of the
     Write window

@{b}INPUTS@{ub}
     ADDRESS/A   - name, address or alias

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"} or if an attempt is made to enter
     more than one sender.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Set Reply-To */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         WRITEREPLYTO jdoe\@example.net

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITESEND" "ARexx command: WRITESEND"
@next "RX_WRITESUBJECT"
@prev "RX_WRITEREPLYTO"
@toc "REXX"

WRITESEND
---------

@{b}NAME@{ub}
     WriteSend -- Send a new, just composed message.

@{b}TEMPLATE@{ub}

@{b}FUNCTION@{ub}
     Sends a new, just composed message.

@{b}INPUTS@{ub}

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* New mail */

         MAILWRITE
         WRITETO boss\@example.com
         'WRITESUBJECT "Sorry, but I am sick today!"'
         WRITELETTER 'work:excuses.txt'
         WRITESEND

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}, @{" WRITEQUEUE " link "RX_WRITEQUEUE"}

@endnode

@node "RX_WRITESUBJECT" "ARexx command: WRITESUBJECT"
@next "RX_WRITETO"
@prev "RX_WRITESEND"
@toc "REXX"

WRITESUBJECT
------------

@{b}NAME@{ub}
     WriteSubject -- Enter a subject into a new message.

@{b}TEMPLATE@{ub}
     SUBJECT/A

@{b}FUNCTION@{ub}
     Enters a subject into a new message.

@{b}INPUTS@{ub}
     SUBJECT/A   - subject of the message (upto 199 characters)

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}
     If the subject is longer than 199 characters, it will be truncated.

@{b}EXAMPLE@{ub}
         /* Set subject */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         'WRITESUBJECT "This is the subject"'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RX_WRITETO" "ARexx command: WRITETO"
@next "RX_ADDRDELETE"
@prev "RX_WRITESUBJECT"
@toc "REXX"

WRITETO
-------

@{b}NAME@{ub}
     WriteTo -- Enter one or more names, addresses or aliases into the
                "To" field of the Write window.  (V2.0)

@{b}TEMPLATE@{ub}
     ADDRESS/A/M,ADD/S

@{b}FUNCTION@{ub}
     Enters one or more names, addresses or aliases into the "To" field
     of the Write window.  YAM will resolve names and aliases looking
     in the address book.

@{b}INPUTS@{ub}
     ADDRESS/A/M   - list of names/addresses/aliases
     ADD/S         - prevent the new data from replacing the old data
                     already present in the "To" field

@{b}RETURNS@{ub}
     RC is set to 10 if no Write window was previously specified as
     "active" with @{" MAILWRITE " link "RX_MAILWRITE"}.

@{b}NOTES@{ub}

@{b}EXAMPLE@{ub}
         /* Set the primary recipients of a message */

         MAILWRITE WINDOW 0      /* Set the active Write window */
         'WRITETO "George Bush" "jdoe" "carol\@example.com"'

@{b}BUGS@{ub}

@{b}SEE ALSO@{ub}
     @{" MAILWRITE " link "RX_MAILWRITE"}

@endnode

@node "RF02" "Reference - Install structure"
@next "RF03"
@prev "RF01"
@toc "RF_W"

Reference - Install structure
=============================


   In the program directory for YAM the following files and
directories will be found:


 YAM               The program itself
 YAM.info          The program icon
 YAM.guide         This documentation in AmigaGuide format

 Themes/            @{" Themes " link "RF04"} used by YAM along its Graphical User Interface

 Rexx/             ARexx programs for YAM
 Gallery/          Pictures of people mentioned in the address book

 .config           the @{" configuration " link "CO_W"} file
 .folders          a list of the @{" folders " link "MA00"}
 .addressbook      the @{" address book " link "AB_W"}
 .glossary         the @{" glossary " link "DI_W"}
 .users            a list of the @{" YAM users " link "US_W"}
 .spamdata         YAM's spam training data
 .updatestate      information for the auto update mechanism
 .signature        your personal @{" signature " link "CO07"}
 .altsignature1    first alternative signature
 .altsignature2    second alternative signature
 .taglines         your collection of @{" taglines " link "CO07"}
 .autosave?.txt    @{" backup copies " link "CO_H"} of the editor contents
 .uidl             used to @{" avoid duplicates " link "CO02"}
 .emailcache       cache file used by the @{" email cache " link "CO05"} feature
 YAM.log           log file (if the @{" log feature " link "CO09"} has been set)

 incoming/         the incoming mailbox directory
 outgoing/         the outgoing mailbox directory
 sent/             the directory for sent mail
 trash/          the directory for mail marked for deletion

@endnode

@node "RF03" "Reference - Message storage"
@next "RF04"
@prev "RF02"
@toc "RF_W"

Reference - Message storage
===========================


   Each message is saved as a separate file of which the filename is constructed
by encoding certain information about the mail (date, status, etc) using the Base64
standard encoding. The resulting name is compatible to any filesystem. Every folder
contains an @{b}.index@{ub} file with the headers of every message in the
directory. There is also a configuration file called @{b}.fconfig@{ub} which holds
the settings for that particular folder.

@endnode

@node "RF04" "Reference - Theme handling"
@next "RF05"
@prev "RF03"
@toc "RF_W"

Reference - Theme handling
=========================


   YAM will use the icons and pictures in /Themes/default along its
Graphical User Interface.  There are several kinds of icons:


@{b}config/config_#?, config_#?_big@{ub}
     These images are what you see when you open Settings to
     configure YAM.


@{b}folder/folder_#?, folder_#?_new@{ub}
     These are the images used in front of the basic Incoming, Deleted,
     Outgoing and Sent folders.  Those with the "_new" suffix are used
     automatically whenever there is new or unread mail in the folder.

     The "folder_fold" and "folder_unfold" images are special: they are
     used as the icon for folder groups.

     A ".fimage" picture file in a folder overrides the default image.
     This is also the only method supported to have images displayed
     in front of custom folders.


@{b}icon/check.info, empty.info, new.info, old.info@{ub}
     Icons which show the status of the "Incoming" mailbox:

     check.info     YAM is checking for new mail
     empty.info     the mailbox is empty
     new.info       the mailbox has at least one new message
     old.info       the mailbox only holds "old" mail


@{b}status/status_#?@{ub}
     These are the @{" status icons " link "MA0S"} displayed by YAM to show the status
     of the messages.

     The "status_mark" icon used when messages are set to "marked"
     is special: if it is not present, YAM will mark the messages by
     displaying the sender/recipient data in bold letters.


@{b}toolbar/tb_#?, tb_#?_G, tb_#?_S@{ub}
     These are the images used to build the toolbars in the Main, Read,
     Write and Address book windows.  Those named "tb_#?_G" are the
     "ghosted" variety, i.e. they provide the images to be used when the
     icons must look ghosted.
     "tb_#?_S" are the "selected" variety, i.e. when you press a button.


@{b}.theme, logo, preview@{ub}
     .theme contains various important text variables that are needed
     for the theme engine to work.

     The "logo" is what you see when you start and quit YAM and also
     in the "about" window in YAM. (Note: only the default logo is
     displayed, no matter what theme you have selected.)

     The "preview" is a small preview that shows what that icon theme
     looks like in Settings/Look & Feel.

@endnode

@node "RF05" "Reference - Misc file formats"
@next "RF00"
@prev "RF04"
@toc "RF_W"

Reference - Misc file formats
=============================


 @{" The .addressbook file " link "RFAB"}  - Format of the ".addressbook" file
 @{" The .emailcache file  " link "RFCA"}  - Format of the ".emailcache" file
 @{" The .fconfig file     " link "RFFC"}  - Format of the ".fconfig" files
 @{" The .folders file     " link "RFFO"}  - Format of the ".folders" file
 @{" The .glossary file    " link "RFGL"}  - Format of the ".glossary" file
 @{" The .uidl file        " link "RFUI"}  - Format of the ".uidl" file
 @{" The .users file       " link "RFUS"}  - Format of the ".users" file
 @{" The log file          " link "RFLO"}  - Format of the log files

@endnode

@node "RFAB" "The .addressbook file"
@next "RFCA"
@prev "RFLO"
@toc "RF05"

The .addressbook file
---------------------

   This plain text file uses a hierarchical scheme following this general
format:


    YAB4 - YAM Addressbook                          - Identifier
    \@GROUP alias  ·································
    description                                   ·
    \@USER alias     -------------.                ·
    e-mail address               |                ·
    real name                    |                ·
    description                  |                ·
    phone #                      |                ·
    street address               |                ·
    ZIP/City                      > Person        ·
    country                      |                ·
    PGP ID                       |                ·
    birth date                   |                ·
    portrait                     |                 · GROUP
    homepage                     |                ·
    default security             |                ·
    \@ENDUSER        -------------'                ·
    \@LIST alias     >>>>>>>>>>>>>>>>>>>>>>>>>>                 ·
    return address               v                ·
    list name                    v                ·
    description                  v                ·
    member #1                     >> LIST          ·
    member #2                    ^                ·
    ...                          ^                ·
    member #n                    ^                ·
                                 ^                ·
    \@ENDLIST        >>>>>>>>>>>>>>>>>>>>>>>>>>                 ·
    \@ENDGROUP     ·································


   Groups, lists and people are started with \@GROUP <alias>, \@LIST <alias>
and \@USER <alias> and closed with \@ENDGROUP, \@ENDLIST and \@ENDUSER,
respectively.  Groups may include lists, and lists may include members.
Both lists and people may appear outside groups.  List members may be
either aliases, addresses or fully qualified "Real name <address>" pairs.

   GUI-wise, a group may be dragged&dropped onto a distribution list and
viceversa to get all its recipients added to the list.  Recursive loops
are watched and promptly avoided when appropriate - for instance, if a
group contanining a list is dragged&dropped on that list, only the items
available in the group other than the contents of the list itself are
added to it.

@endnode

@node "RFCA" "The .emailcache file"
@next "RFFC"
@prev "RFAB"
@toc "RF05"

The .emailcache file
--------------------

   This plain text file contains a list of the last n used recipients
who were not in the address book, in the format "Name <address>" (or
just "<address>" if the name is not available) with one entry per line.

   New entries get added at the top.  If the limit of entries set in the
configuration is exceeded, the oldest entry (i.e. the one at the bottom)
is dropped.

   If it is already in the cache when writing the mail, the entry is
moved to the top -- this way, the next time, the most recently used
recipient will be suggested first.  Entries in the address book will
still have priority over the cache, though.

@endnode

@node "RFFC" "The .fconfig file"
@next "RFFO"
@prev "RFCA"
@toc "RF05"

The .fconfig file
-----------------

   This plain text file exists in every folder and stores the settings
used therein, using this format:


    YFC1 - YAM Folder Configuration
    Name        = folder_name
    MaxAge      = age
    Password    = password
    Type        = folder_type
    XPKType     = type_number
    Sort1       = primary_sort
    Sort2       = secondary_sort
    Stats       = Y|N
    MLSupport   = Y|N
    MLFromAddr  = MLFrom_address
    MLRepToAddr = MLRepTo_address
    MLPattern   = ML_pattern
    MLAddress   = ML_address
    MLSignature = signature_number


where

   - @{b}Name@{ub} is the name of the folder, as it appears in the folder list

   - @{b}MaxAge@{ub} is the number of days the messages in the folder will be kept
     before removing them automatically, where 0 disables this feature
     (see @{" Configuration/Start/Quit " link "CO10"})

   - @{b}Password@{ub} is the encoded counterpart of the password used to protect
     this folder, if any

   - @{b}Type@{ub} is a number indicating which type this folder is (should be
     usually 0 for user folders - see the documentation for the @{" FOLDERINFO " link "RX_FOLDERINFO"}
     command)

   - @{b}XPKType@{ub} refers to the XPK mode used in the folder:

        0 = none
        1 = simple protection (password)
        2 = compressed
        3 = compressed with password

   - @{b}Sort1@{ub} refers to the primary sort criterion used in the folder,
     in negative form if the sort is reversed:

        1 = Message date
        2 = Date received
        3 = Sender
        4 = Recipient
        5 = Subject
        6 = Size
        7 = Status

   - @{b}Sort2@{ub} is just the same as Sort1, but referred to the secondary
     sort criterion

   - @{b}Stats@{ub} may be either Y or N depending on the status of the
     "AppIcon stats" flag

   - @{b}MLSupport@{ub} may be either Y or N depending on the status of the
     "Mailing list support" flag

   - @{b}MLFromAddr@{ub} shows the contents of the "From: address" field

   - @{b}MLRepToAddr@{ub} shows the contents of the "Reply-To: address" field

   - @{b}MLPattern@{ub} shows the contents of the "To: pattern" field

   - @{b}MLAddress@{ub} shows the contents of the "To: address" field

   - @{b}MLSignature@{ub} refers to the default signature to be used when posting
     messages to this mailing list:

        0 = none
        1 = default signature, i.e. PROGDIR:.signature
        2 = alt. signature #1
        3 = alt. signature #2

@endnode

@node "RFFO" "The .folders file"
@next "RFGL"
@prev "RFFC"
@toc "RF05"

The .folders file
-----------------

   This plain text file uses a hierarchical scheme following this general
format:


    YFO1 - YAM Folders                              - Identifier
    \@FOLDER name    ------------------.
    directory                          > Folder
    \@ENDFOLDER      ------------------'
    \@GROUP name              ································
    status                                                  ·
    \@FOLDER name    ------------------.                     ·
    directory                          > Folder             ·
    \@ENDFOLDER      ------------------'                     ·
    \@GROUP name              ······················         ·
    status                                        ·         ·
    \@FOLDER name    ------------------.           ·          · GROUP
    directory                          > Folder   ·         ·
    \@ENDFOLDER      ------------------'            · GROUP  ·
    \@FOLDER name    ------------------.           ·         ·
    directory                          > Folder   ·         ·
    \@ENDFOLDER      ------------------'           ·         ·
    \@ENDGROUP                ······················         ·
    \@ENDGROUP                ································


   where <status> may be either 0 or 1, the latter meaning that the
group is unfolded, e.g. its contents are being displayed.  Folders
may live both inside and outside groups, and groups may be nested.

   The order of the folder tree is saved on disk whenever the
@{" Folder/Order/Save " link "MAM2"} menu item is called.

@endnode

@node "RFGL" "The .glossary file"
@next "RFUI"
@prev "RFFO"
@toc "RF05"

The .glossary file
------------------

   This file contains a list of the definitions made in the @{" glossary " link "DI_W"}
using this format:


    YDI1 - YAM Dictionary
    \@ENTRY abbreviation
    contents
    \@ENDENTRY
    \@ENTRY abbreviation
    contents
    \@ENDENTRY
    ...

@endnode

@node "RFUI" "The .uidl file"
@next "RFUS"
@prev "RFGL"
@toc "RF05"

The .uidl file
--------------

   If "Avoid duplicates" is enabled in @{" Configuration/New mail " link "CO02"}, YAM
will use the UIDL POP3 command when connecting to your POP3 server to
request an @{b}U@{ub}nique @{b}ID@{ub} @{b}L@{ub}isting of the messages in your mail account.
The POP3 server is responsible for assigning an unique ID to every
message and put it into a "X-UIDL:" header.

   If the server doesn't support the UIDL POP3 command, YAM will fall
back to the TOP command and try using the "Message-ID:" header instead;
if this also fails, an error will be generated.

   The Unique ID Listing received from the server is compared against
the contents of the "PROGDIR:.uidl" file; if this file doesn't exist
yet, it will be created.  This is a plain text file with one ID per
line using the format <ID>\@<POP3 server>, e.g.


    9685\@mail.saug.org
    9686\@mail.saug.org
    9687\@mail.saug.org
    9688\@mail.saug.org
    (k5"!N1!"!RkI"!YT4"!\@pop.wanadoo.es
    9689\@mail.saug.org
    9690\@mail.saug.org
    9691\@mail.saug.org
    9692\@mail.saug.org


   Whenever an ID is already found in the "PROGDIR:.uidl" file, the
relevant message will be considered a duplicate, and thus it won't be
downloaded.  New IDs not yet in the "PROGDIR:.uidl" file will be added
to it as the corresponding messages are successfully downloaded.

@endnode

@node "RFUS" "The .users file"
@next "RFLO"
@prev "RFUI"
@toc "RF05"

The .users file
---------------

   This file contains a list of the users that can log in and use YAM.
YAM maintains this file by itself, so you shouldn't ever touch it,
unless maybe you are @{" moving YAM " link "TIP2"} to another place in your hard disk.

   The file uses the following format:


        1st line:   YUS2 - YAM Users
        2nd line:   \@USER <username>
        3rd line:   mail directory of this user, e.g.  Comm:YAM
        4th line:   number
        5th line:   encrypted password, if any
        6th line:   \@ENDUSER
   further lines:   next user definition, upto 16 maximum.


   where "number" is a value defining the status of this user combining
the following set of elements:


        No Supervisor privileges  = 4
        Share global address book = 2
        Share global glossary     = 1


   Thus, "3" would mean the user has Supervisor privileges and is sharing
the global address book and glossary.  This is the default value in a
single user setup.

@endnode

@node "RFLO" "The log file"
@next "RFAB"
@prev "RFUS"
@toc "RF05"

The log file
------------

   The log file used by YAM is an ASCII file storing one event per line.
Each line is saved in this format:

DD-MMM-YY HH:MM [code] Event description

   where @{b}code@{ub} is a two digit number and "Event description" is obviously
the event description, possibly localized.  Therefore, any computer-assisted
software meant to analyze the log file data should refer to the code of the
event.

   Events out of the 30<->49 range will only be printed if "Log all events"
is enabled in the @{" Security options " link "CO09"}.

   List of possible events:


 0 - YAM started
 1 - Logged in as user 'user_name'
 2 - Logged in as 'user_name', using configuration 'config_file' and
     mail directory 'folder_path'
10 - Wrote new message for 'recipient' about 'subject', including n
     attachment(s)
11 - Replied message from 'sender' about 'subject'
12 - Forwarded message from 'sender' about 'subject' to 'recipient'
13 - Bounced message from 'sender' about 'subject' to 'recipient'
14 - Edited message from 'sender' to 'recipient' about 'subject'
20 - Deleted n message(s) in folder 'folder'
21 - Deleted message from 'sender' about 'subject' in folder 'folder'
22 - Moved n message(s) from folder 'folder' to 'folder'
23 - Moved message from 'sender' about 'subject' from folder 'folder'
     to 'folder'
24 - Copied n message(s) from folder 'folder' to 'folder'
25 - Copied message from 'sender' about 'subject' from folder 'folder'
     to 'folder'
26 - Filtered n message(s) in folder 'folder': n match(es)
30 - Retrieved n message(s) from POP3 account 'user_id\@host'
31 - Logged in on POP3 account 'user_id\@host': n messages waiting
32 - Retrieved message from 'sender' about 'subject' (n bytes)
40 - Sent n message(s) using SMTP server 'host'
41 - Connected to SMTP server 'host'
42 - Sent message to 'recipient' about 'subject' (n bytes)
50 - Imported n message(s) from file 'filename' into folder 'folder'
51 - Exported n message(s) from folder 'folder' to file 'filename'
60 - Saved configuration file 'config_file'
62 - Saved user configuration
70 - Saved address book 'filename'
71 - Added address book entry 'alias'
80 - Saved attachment 'filename' of message 'mailfile' in folder 'folder'
81 - Cropped attachment(s) of message 'mailfile' in folder 'folder'
82 - Changed subject 'subject' of message 'mailfile' in folder 'folder'
     to 'subject'
99 - YAM terminated

@endnode

@node "TIPS" "Tips & tricks"
@next "PROB"
@prev "RF_W"
@toc "Main"

Tips & tricks
*************


 @{" Snapshotting the window positions and sizes      " link "TIP0"}
 @{" Avoiding context menus from getting on your way  " link "TIP1"}
 @{" Moving YAM to another partition or directory     " link "TIP2"}
 @{" Avoiding excessive disk trashing on startup      " link "TIP3"}
 @{" Using Mailing list support settings properly     " link "TIP4"}
 @{" Setting Daylight Savings time properly (AutoDST) " link "TIP5"}

@endnode

@node "TIP0" "Snapshotting the window positions and sizes"
@next "TIP1"
@prev "TIP5"
@toc "TIPS"

Snapshotting the window positions and sizes
-------------------------------------------

   Start the MUI settings interface by selecting "Settings/MUI...",
then go to the "Windows" section and make sure the third of the little
system gadget buttons is activated.  After saving the settings, every
window will have an additional system gadget in the upper right corner
- one click on this gadget will snapshot the actual size and position
of the window for future sessions.

@endnode

@node "TIP1" "Avoiding context menus from getting on your way"
@next "TIP2"
@prev "TIP0"
@toc "TIPS"

Avoiding context menus from getting on your way
-----------------------------------------------

   The context menus for the folder & message lists may get in your way
and prevent you from using the usual menu item shortcuts unless you move
the pointer outside the list.  Unfortunately this is a bug in MUI <=3.8,
which can only worked around by disabling the context menus themselves
in @{" Configuration/Lists " link "CO08"}.

   If your menu shortcuts still don't work, it's probably because the
NList context sensitive menus are enabled.  To disable them, start the
MUI settings interface, then select NListviews - Misc - Misc2 - Default
ContextMenu = Never.  Save your MUI settings and you're done.

@endnode

@node "TIP2" "Moving YAM to another partition or directory"
@next "TIP3"
@prev "TIP1"
@toc "TIPS"

Moving "YAM" program directory to another partition or directory
----------------------------------------------------------------

   Moving your YAM directory to another place is a procedure
requiring four steps:

  1. Quit YAM if it is currently running.

  2. Copy your YAM directory to the new place with a tool that allows
     you to preserve the original file protection bits, datestamps and
     comments. This is needed to prevent your mail archives from getting
     mangled in the process.  Example:

            1.RAM Disk:> copy YAM DH2:Comms/mail/YAM/ ALL QUIET CLONE

     The "CLONE" switch for Copy is paramount here, as it will prevent
     your mail from getting their status information (read, new, etc.)
     lost.

  3. Lastly, update your PROGDIR:.users file to make sure it points to the
     new mail directory.  If you fail to do so, YAM will keep trying to
     read/create/etc. the folders in the old place.  Beware!


   Finally, if you can run YAM again in the new place and all seems
to work fine, deleting YAM and all its files from the old place should
be a safe operation now.

@endnode

@node "TIP3" "Avoiding excessive disk trashing on startup"
@next "TIP4"
@prev "TIP2"
@toc "TIPS"

Avoiding excessive disk trashing on startup
-------------------------------------------

   On startup, YAM checks the indices of all its folders against the
datestamp of the directory where they are stored (the "Rebuilding
folders' indices" part).  Under normal circumstances, since filesystems
update a directory datestamp whenever its contents are modified, both
the index and the directory should have the same datestamp, and therefore
this stage shouldn't take too long.

   However, if for some reason an index is found to be older than the
directory where it is stored, YAM will assume that something has changed
in the folder without being written back to the index, so it will promptly
delete the current index and rescan the whole folder to create a new one,
which can indeed take a long time.

   Possible reasons for an index not to be in sync with the directory are:

     - Faulty or inexistant battery backed up clock, causing impredictable
       results especially if you are not aware of the problem or simply
       forget to set the system time manually.

     - A faulty filesystem, not updating a directory datestamp whenever
       its contents change.

@endnode

@node "TIP4" "Using Mailing list support settings properly"
@next "TIP5"
@prev "TIP3"
@toc "TIPS"

Using Mailing list support settings properly
--------------------------------------------

   YAM offers a set of settings meant to support mailing lists that
do not set the "Reply-To:" field correctly or require some sort of
special handling.  As of V2.4, the default signature selection is
also part of these settings.

   First and foremost, enter the mailing list address as a pattern in
the @{b}To: pattern@{ub} field, e.g. "#?mylist\@example.net#?" (without the quotes,
of course).  This way, these settings will be used whenever you start
a new message or reply to an already existing message while this is
the current folder.

   Let's see a few examples that demonstrate how you can use these
settings to your advantage.


   a) I want to use an alternate signature when posting to a certain
      mailing list.

   Just select the desired signature using the bottom gadget.  New messages
   started while this is the current folder will always use this signature,
   even if signatures are disabled in @{" Configuration/Signature " link "CO07"}.

   For replies to use this signature no matter which folder is currently
   selected, you need to fill the next gadget with the address to the
   mailing list.


   b) The mailing list server does not set a "Reply-To:" address and thus
      my replies end up being sent to the original sender.

   Just enter the mailing list address in the @{b}To: address@{ub} field.  This way
   all the replies will be sent here by default, no matter which folder
   is actually selected; a private reply can still be forced with
   <Shift> + [Reply].

   New messages started while this is the current folder will also be sent
   here by default.

   Please note that the stock phrases used in these messages are taken from
   @{" Configuration/Reply/Mailing list reply phrase " link "CO06"}.


   c) I need to email additional recipients when posting to a certain
      mailing list.

   Just add them to the contents of the @{b}To: address@{ub} field, and all of them
   will be put in the "To:" address of your message as well.  This way
   it is very easy to keep other people up to date on something, as it
   is sometimes needed when posting to certain development-orientated
   mailing lists.


   d) I want to use a specific "From:" and/or "Reply-To:" address when
      posting to a certain mailing list.

   Just enter those addresses in the @{b}From: address@{ub} and @{b}Reply-To: address@{ub}
   fields, respectively.  These addresses will be used automatically on
   replies to messages where the "To:" address matches the @{b}To: pattern@{ub},
   and in new messages started while this is the current folder.

   Please note that only one address can be entered into these fields.
   Also, some mail servers refuse to transmit messages apparently not
   originating from within their own domain.

@endnode

@node "TIP5" "Setting Daylight Savings time properly (AutoDST)"
@next "TIP0"
@prev "TIP4"
@toc "TIPS"

Setting Daylight Savings time properly (AutoDST)
------------------------------------------------

   Amiga systems are lacking one important feature concerning the
timezone handling - there is no method in Locale to indicate that a
system is currently operating within daylight saving time. It also lacks
the possibility to automatically detect the change from/to daylight saving.
This could lead to problems if you send emails while your timezone
settings are incorrect just because you forgot to set the DST settings
correct.

   As this is a common problem on AmigaOS systems, there are also some,
more or less, good third party solutions for automatic DST setting/switching.
YAM currently supports 4 methods to indicate if your system operates in
DST mode or not. While starting, YAM tries to find several environment
variables which are normally generated/modified by such AutoDST tools:

   1) SetDST (ENV:TZONE)
      [http://www.sfxsoft.de/de/setdst.html]

   2) FACTS (ENV:FACTS/DST)
      [http://www.unsatisfactory.freeserve.co.uk/facts/]

   3) SummerTimeGuard (ENV:SUMMERTIME)
      [http://us.aminet.net/pub/aminet/utils/time/sguard.lha]

   4) ENV:IXGMTOFFSET
      ixemul specific gmtoffset variable that is used/modified by the
			ixtimezone tools of the geekgadgets package.

   If YAM was able to find one of these four environment variables, it
will automatically adjust the Daylight Savings setting of the configuration
and disable the possibility to switch DST manually within YAM. Please note
that if such a AutoDST variant was found, YAM will also watch this variable
for any change, so that as soon as a AutoDST tool changes the DST settings,
YAM`s DST setting gets refresh accordingly.

   So if you want to get rid of all this manual DST back/forward switching
each year, simply install one of the above (or similar) AutoDST system and
you should never have to worry about all that timezone mess.

@endnode

@node "PROB" "Known problems"
@next "INFO"
@prev "TIPS"
@toc "Main"

Known problems
**************


   This chapter mentions some issues that most of the time are not
strictly related to YAM and therefore can't be addressed by the YAM
team.  See the @{" bug reporting " link "INF2"} chapter for how to find a list of bugs
reported about YAM itself.


The gauge in the mail transfer window looks wrong
-------------------------------------------------

   Due to a bug in @{" MUI " link "MUI"}, the gauge in the mail transfer window
may "overflow" its container when representing very high values,
typically around 8MB and beyond.  This bug is harmless, but an
updated MUI (3.9 or better) is necessary to properly address
this problem.  No such update was still available for 68K Amigas
at the time of writing this document.


Menu shortcuts don't work while context sensitive menus are enabled
-------------------------------------------------------------------

   See @{" Avoiding context menus from getting on your way " link "TIP1"}.


Enforcer hits when flushing memory after uniconifying YAM and its MUI prefs
---------------------------------------------------------------------------

   If you iconify YAM while its MUI prefs window is opened, then
you do an AVAIL FLUSH and then uniconify YAM, you get Enforcer hits.
Unfortunately, this is again a bug in MUI <=3.8.  The same problem
can be reproduced with any other MUI application.


The "Colored text" gadget in the Read configuration looks wrong the
first time I open this sheet
-------------------------------------------------------------------

   Yet another MUI bug, already fixed in 3.9+.


YAM is taking braces as in "[http://www.example.com]" as part of URLs
---------------------------------------------------------------------

   Despite the recommendation in RFC #1738 to encode such characters
when they are supposed to be part of URLs, a number of Internet
resources, entities and users keep using the "[]" braces in unencoded
form, and this used to make YAM stop parsing an URL as soon as such
characters were found, as in "<http://www.example.com/files[7]/myfile>".
As a workaround for this problem, since V2.4 YAM takes these characters
as part of the URL.

   Parenthesis are allowed in URLs in unencoded form, which again
negates the use of () to delimit URLs.  You are advised to use "<"
and ">" for this purpose.


The system hangs when deleting a block of text in the editor while
using a key qualifier
------------------------------------------------------------------

   Unfortunately, this is a bug in texteditor.mcc, and its sources
were lost.  A solution is being considered for a future YAM release.


YAM dies when the toolbar images are mixed up and I select "Fail" in
the requester that Toolbar.mcc puts up
--------------------------------------------------------------------

   Bug in Toolbar.mcc.  This problem will go away in the next YAM
version as Toolbar.mcc is replaced with a better class.


The layout of the prefs window doesn't adapt properly when reducing
its size
-------------------------------------------------------------------

   Yes, we know about it and will fix this in a future release.

@endnode

@node "DOSW" "AmigaDOS pattern matching"

AmigaDOS pattern matching
*************************


   The use of wildcards in patterns allows you to set up very powerful
searches.  The special wildcard characters are listed below.


  ?   Matches any single character
      so Y?M matches YAM, YUM, Y\@M etc.

  #   Matches zero or more occurrences of the following item
      so Y#AM matches YM, YAM, YAAM, YAAAM etc.

  #?  Matches anything at all (including nothing!)
      so #?YAM#? matches any string containing "YAM"

  %   Matches an empty string.  Not terribly useful by itself, but you
      could use it to find messages with blank "Subject:" headers.

  ()  Round brackets are used to group characters and expressions and show
      how to evaluate the expression.  Use them freely!
      Thus #(Re:)YAM matches YAM, Re:YAM, Re:Re:YAM ...

  []  Square brackets are used to indicate a list of alternatives
      so [YAM] matches any of the single letters Y, A or M but not YAM

  -   Indicates a range, so [0-9] matches any single digit
      and #[0-9] matches any integral number.

  ~   Means NOT, referring to the whole expression following,
      so ~Re: matches any string that does not start with "Re:"

  |   Means OR, referring to the expressions either side.  You have to
      enclose the whole expression in round brackets:
      e.g.  (#?YAM#?|#?MUI#?) finds strings including either "YAM" or
      "MUI".

  '   Removes the meaning of a special character.  For instance,
      '#'? matches the literal string "#?"

@{b}   WARNING!@{ub} It's not as easy as it looks!  For example, let's
construct a filter that will find references to YAM or YAM2, but will
disregard YAM1.  Try this one: #?YAM(~1)

   What does this say to do?  Reading a new string from the left, look
for the sequence @{b}YAM@{ub}.  If you find it, look at the following part: is it
equal to "1"?  If not, you've got a match.  The trouble is, "1.3.5" isn't
equal to "1" (it's too long), so YAM1.3.5 is included though we don't
want it.  The solution is to make it clear that the string following
"YAM" must not start with a "1".  So try: #?YAM(~1#?)

   This gets rid of 1.3.5 alright, but there's still a problem:
sometimes, people insert a space between YAM and the version number and
sometimes not.  So references to @{b}YAM 1@{ub} are still included.  So we must
say that any number of spaces may be present, like this: #?YAM# (~1#?)

   Another case -- suppose we want to find all the strings that
include @{b}YAM@{ub} but do not start with "Re:".  So we try: (~Re:)YAM#?

   This says to begin by comparing the start of the string to "Re:".
If we get a match, that string is discarded; if not, we look in the
rest of the string to find "YAM".  So what happens if the string starts
with "YAM"?  The first letter isn't @{b}R@{ub}, so the NOT condition is
satisfied.  But we've done the Y now, so we don't find the string @{b}YAM@{ub}!
To sort this out, we have to explain that the string in front of "YAM"
may be the null string (so that's what it is for!).  Like this:
(~Re:|%)YAM#?

   Question for computer buffs: what does ~((~#?YAM#?)|(~#?MUI#?))
mean? :-)

@endnode

@node "INFO" "Support"
@next "PLAN"
@prev "PROB"
@toc "Main"

Support
*******


 @{" YAM on the World Wide Web " link "INF0"}  - Where to look for more info about YAM on the WWW
 @{" Mailing lists             " link "INF1"}  - Join the YAM community!
 @{" Bug reporting             " link "INF2"}  - How to report a bug
 @{" Enhancement requests      " link "INF3"}  - Where to post them
 @{" Change requests           " link "INF4"}  - How to get something changed in YAM
 @{" SVN repository            " link "INF5"}  - Getting the current sources

@endnode

@node "INF0" "Support - YAM on the World Wide Web"
@next "INF1"
@prev "INF5"
@toc "INFO"

Support - YAM on the World Wide Web
===================================


@{b}The YAM homepage@{ub}

   In order to provide all users with up-to-date information about YAM,
Marcel Beck, its original author, made a homepage available on the
World Wide Web:  http://yam.ch/


@endnode

@node "INF1" "Support - mailing lists"
@next "INF2"
@prev "INF0"
@toc "INFO"

Support - mailing lists
=======================


@{b}The YAM mailing list@{ub}

   If you want to discuss YAM related issues with other users or be
notified about new releases, you can join the YAM users mailing list.
To subscribe, just send an email to <yam-request\@freelists.org>
with the subject "subscribe" (without the quotes).  Alternatively,
you can use the web based interface at http://www.freelists.org/list/yam
or review the list archive at http://www.freelists.org/archives/yam


@{b}The YAM Developers mailing list@{ub}

   If you want to contribute to the development of YAM, you are welcome
to join the YAMos-dev mailing list.  To subscribe, just send an email
to <yamos-dev-request\@freelists.org> with the subject "subscribe"
(without the quotes).  Alternatively, you can use the web based
interface at http://www.freelists.org/list/yamos-dev or review the
list archive at http://www.freelists.org/archives/yamos-dev

   Please note that subscriptions to YAMos-dev are not accepted unless
you contact the list owner or some YAMos developer stating how you are
going to contribute to the project.

@endnode

@node "INF2" "Support - bug reporting"
@next "INF3"
@prev "INF1"
@toc "INFO"

Support - bug reporting
=======================


   Please visit http://bugs.yam.ch/ to file bug reports or just browse
the online database of known bugs in YAM as reported by its users.

   If you want to file a bug report, please consider registering first
if you didn't already.  Having your own account enables you to be
automatically notified by email as the status of your bug report
changes, thus reducing turnaround times if further info about the
problem is needed from you, resulting in a quicker process until the
bug is eventually fixed.

   When submitting a bug you have found, *please* bear in mind these
points:

      1. Check the whole bug database to make sure the bug hasn't been
         reported yet, maybe using a wrong [short] description.  Duplicated
         reports take a lot of human time to process and the bug will take
         even more time to be fixed.

         1a.  If the bug *was* already reported, but you consider you have
              something useful to contribute to the current report, you
              are welcome to do so.

         1b.  Please note that the bug may already be fixed internally,
              and therefore not be listed in the default "Open bugs" list.
              You may want to check the ChangeLog to be sure.

      2. Try your best to enter a meaningful "Short description" of the
         problem.  *Don't forget* to state the version of YAM to whom this
         applies, i.e. use a template like "2.6: Doing xyz crashes YAM".

      3. Do not hesitate to be descriptive in your report, giving a
         step-by-step guide on how to reproduce the problem and stating
         your system specs, version of your Operating System, etc.
         This alone can make the difference between a fixed bug and
         an useless report.

      4. If Enforcer-like hits are involved, copy&paste them to the report.
         If applicable, do not forget to run SegTracker first, otherwise
         the debug output is likely to be useless.  SegTracker is
         distributed together with Enforcer -- look for them on Aminet.

   If you don't have access to the World Wide Web, remember you can still
report bugs to the @{" YAM mailing list " link "INF1"}, as it is monitored by the YAM
team.  Bugs reported there will either get filed in the bugtracker at a
later time or processed internally by us.

@endnode

@node "INF3" "Support - enhancement requests"
@next "INF4"
@prev "INF2"
@toc "INFO"

Support - enhancement requests
==============================


   You absolutely need YAM to do this and that?  File an enhancement request
at http://bugs.yam.ch/ then, and we'll consider it for a future release.

@endnode

@node "INF4" "Support - change requests"
@next "INF5"
@prev "INF3"
@toc "INFO"

Support - change requests
=========================


   Sometimes you may want a particular behavior of YAM to be slightly
changed, and neither a bug report or enhancement request fit the bill.

   This is where @{i}change requests @{ui}come in -- please visit
http://bugs.yam.ch/ and submit your change request there.

@endnode

@node "INF5" "Support - SVN repository"
@next "INF0"
@prev "INF4"
@toc "INFO"

Support - SVN repository
========================


   The YAM SVN repository is hosted freely and can be checked out
through anonymous SVN access. You can obtain the very latest source code of
YAM (from 'trunk') with the following command sequence:

     svn co https://svn.yam.ch/svn/yam/trunk yam

This will checkout the sources from our 'trunk' to your local directory
'yam'.

If you already have an existing version of any module checked out and want to update it:

$> cd <your module directory>
$> svn up

   If you want to get write access and contribute to the project, please
join the @{" YAM developers mailing list " link "INF1"} and ask there.

@endnode

@node "PLAN" "Future plans"
@next "CRED"
@prev "INFO"
@toc "Main"

Future plans
************


   More attractions coming (possibly) in future versions of YAM

   - HTML read mail support [optional] (via htmlview.mcc)
   - IMAPv4 protocol support
   - Completly reworked address book GUI
   - Multiple user identity support (similar to Thunderbird)
   - GnuPG support (via gpgme interface)
   - User-definable context menus
   - User-definable toolbars
   - Multiple SMTP server support
   - Rework and simplification of the mailing-list feature

@endnode

@node "CRED" "Credits"
@next "CRED"
@prev "PLAN"
@toc "Main"

Credits
*******


   The YAM 2.7 release was brought to you by:

      Jens Langner <Jens.Langner\@light-speed.de>
      Thore Boeckelmann <tboeckel\@gmx.de>
      Frank Weber <opionline\@yahoo.de>

   Contributors

      Gunther Nikl
      Matthias Rustler
      Alexey Ivanov
      David Rey
      Dirk Stoecker
      Christian Hattemer
      Jacob Laursen
      Joerg Strohmayer
      Andrew Bell
      Allan Odgaard
      Giles Burdett
      Olaf Barthel

   Localization contributors

      Alexandre Balaban
      Par Boberg
      Luca Longone
      Samir Hawamdeh
      Antonis Iliakis
      Vit Sindlar
      Johan Banis
      Mariusz Danilewicz
      Emilio Jimenez

   Third party software contributors

      Stefan Stuntz                  (MUI)
      Allan Odgaard,
      TextEditor Open Source Team &
      BetterString Open Source Team  (TextEditor.mcc, BetterString.mcc)
      Alfonso Ranieri &
      Thebar Open Source Team        (Thebar.mcc)
      Marcin Orlowski &
      Flexcat Open Source Team       (Flexcat)
      Gilles Masson,
      Carsten Scholling,
      Przemyslaw Gruchala,
      Sebastian Bauer,
      Jens Langner,
      Carsten Scholling &
      NList Open Source Team         (NList.mcc, NListview.mcc & NListtree.mcc)
      Andrija Antonijevic,
      Stefan Burstroem               (AmiSSL library)
      Urban Dominik Mueller,
      Bryan Ford,
      Christian Schneider,
      Christian von Roques &
      Dirk Stöcker                   (XPK)
      Alfonso Ranieri &
      Codesets library -
      Open Source Team               (Codesets library)
      Stephan Rupprecht              (NewReadArgs)
      Andrew Bell                    (GenClasses)
      Emmanuel Lesueur               (MorphOS starter tool)
      Ralf Gruner                    (GPatch)
      Troels Walsted Hansen,
      Alfonso Ranieri &
      OpenURL Open Source Team       (OpenURL)
      Alessandro Zumo                (NewMouse standard)
      Holger Kruse                   (Miami)
      NSDi                           (AmiTCP/Genesis)
      Ron Rivest &
      Colin Plumb                    (MD5 algorithm support)


   Original idea

      Marcel Beck


   Documentation

      David Rey
      Par Boberg


   Interim betas provided by

      Michael Trebilcock


   Standard folder images

      Philip A. Vedovatti <vedovatti\@u.washington.edu>


   MagicWB icons

      Pavel Narozny, Roman Patzner


   NewIcons

      Ash Thomas


   ProLite style icons

      Eric van Velthooveen, Trevor Morris


   GlowIcons

      Thomas Peterseim  <http://mitglied.lycos.de/IconDesigner/>
      Martin Merz       <http://www.masonicons.de/>


   YAM 1.0 - 2.2 betatesters

      Phil Beazley, Benjamin Busche, Mario Cattaneo, Patrick Ernst,
      Giuseppe Ghibo, Christian Just, Laurent Kempe, Peter Kromarek,
      Markus Lamers, Jens Langner, Richard Marti, Marco Musso,
      Benny Kjær Nielsen, Allan Odgaard, Marcin Orlowski, Roman Patzner,
      Lars Pisanec, Georgia Pristo, Christoph Rickers, Markus Roth,
      Thomas Schraitle, Ulf Seltier, Stefan Sommerfeld, Martin Sprenger,
      Peter Thiessen, Danny Thinnes, Walter Watzl, Piotr Wojciechowski,
      Michael Zaruba


   YAM 1.0 - 2.2 English guide translators

      Ulf Seltier, James Bridge, Tony P. Parr

@endnode

@node "NEWI" "NewIcons"

NewIcons
********


   The NewIcons provided with YAM were drawn by Ash Thomas.

   «I have provided a complete set with program icons, appicons and
toolbar icons all drawn in the standard 32 color palette, this means
that you won't loose any pens.  The icons do get updated, so if you email
me I will send you the latest version.  Suggestions and constructive
criticism is also appreciated.  You can also catch me on IRC (IRCNet
and ANet) on channel #amiga as Abstruse.

   Many thanks to Paul "lanky" Demark for all the emails, irc chats,
suggestions and improvements, I have also added status newicons (the
little icons) which complete the set.

   Before I get swamped with emails asking how I got a pattern into
the window borders on the preview picture: check out Birdie (currently
1.5) on aminet, or at http://www.vgr.com/birdie/

   This is version 0.8 of the icons (they aren't complete, as YAM
isn't complete either), but this version is much better than v7.
The icons don't move down and right a pixel, they animate just like
newicons do.  I have also drawn them so you can turn off text (via MUI)
and they will stay the same size.  Text wasn't needed (icons are supposed
to replace text) and they look very professional now.


                  eMAIL:  ash\@absurd.demon.co.uk
                    URL:  http://www.absurd.demon.co.uk

@endnode

@node "MUI"

MUI
***


                          This application uses

                        MUI - MagicUserInterface

                (c) Copyright 1993-2007 by Stefan Stuntz

MUI  is  a system to generate and maintain graphical user interfaces. With
the  aid  of  a  preferences  program,  the user of an application has the
ability to customize the installation according to personal taste.

MUI  is  distributed as shareware. To obtain a complete package containing
lots of examples and more information about registration please look for a
file  called  @{b}MUIXXusr.lha@{ub}  (XX shows the latest version number) on your
local bulletin boards or on public domain disks.

            If you want to register directly, feel free to send

                           DM 30.-  or  US$ 20.-

                                    to

                              Stefan Stuntz
                         Eduard-Spranger-Straße 7
                              80935 München
                                 GERMANY

              Support and online registration is available at

                           http://www.sasg.com/

@endnode

@node "Index"
@{CODE}

   A...

   @{" Accounts, Defining multiple POP3 " link "CO01"}
   @{" Additional headers " link "CO05"}
   @{" ADDRDELETE, ARexx command " link "RX_ADDRDELETE"}
   @{" ADDREDIT, ARexx command " link "RX_ADDREDIT"}
   @{" Address book " link "AB_W"}
   @{" Address book, Configuration " link "CO12"}
   @{" Address book - Menus " link "AB_M"}
   @{" Address book - toolbar " link "AB_B"}
   @{" ADDRFIND, ARexx command " link "RX_ADDRFIND"}
   @{" ADDRGOTO, ARexx command " link "RX_ADDRGOTO"}
   @{" ADDRINFO, ARexx command " link "RX_ADDRINFO"}
   @{" ADDRLOAD, ARexx command " link "RX_ADDRLOAD"}
   @{" ADDRNEW, ARexx command " link "RX_ADDRNEW"}
   @{" ADDRRESOLVE, ARexx command " link "RX_ADDRRESOLVE"}
   @{" ADDRSAVE, ARexx command " link "RX_ADDRSAVE"}
   @{" AmigaDOS Patterns and wildcards " link "DOSW"}
   @{" AmigaDOS scripts triggered by some events " link "CO13"}
   @{" APPBUSY, ARexx command " link "RX_APPBUSY"}
   @{" AppIcon, Defining the position and label of the " link "CO14"}
   @{" APPNOBUSY, ARexx command " link "RX_APPNOBUSY"}
   @{" Archiver, Setting one to archive attachments " link "CO14"}
   @{" ARexx commands supported, Alphabetical list of " link "REXX"}
   @{" ARexx commands supported, List sorted by function " link "REXL"}
   @{" ARexx, Defining macros launched by events " link "CO13"}
   @{" ATTACH, Tooltype " link "RF00"}
   @{" Authors " link "CRED"}
   @{" AutoDST " link "TIP5"}
   @{" Automatic charset translation " link "CO04"}
   @{" Automatic mail checking " link "CO02"}
   @{" Avoid duplicates " link "CO02"}

   B...

   @{" Bar, Status " link "CO08"}
   @{" Base64, MIME " link "MIME"}
   @{" Bug reporting " link "INF2"}

   C...

   @{" Cache, Email " link "CO05"}
   @{" Change requests " link "INF4"}
   @{" Charset conversion when reading " link "CO04"}
   @{" Charset conversion when writing " link "CO05"}
   @{" Charset, Automatic translation " link "CO04"}
   @{" Close gadget, Defining the behaviour of the " link "CO14"}
   @{" Closing phrase " link "CO05"}
   @{" Color for URLs " link "CO04"}
   @{" Colored text " link "CO04"}
   @{" Commands, ARexx " link "REXX"}
   @{" Configuration " link "CO_W"}
   @{" Configuration - Address book " link "CO12"}
   @{" Configuration - ARexx " link "CO13"}
   @{" Configuration - Filters " link "CO03"}
   @{" Configuration - First steps " link "CO00"}
   @{" Configuration - Hidden options " link "CO_H"}
   @{" Configuration - Lists " link "CO08"}
   @{" Configuration - Menus " link "CO_M"}
   @{" Configuration - MIME " link "CO11"}
   @{" Configuration - Miscellaneous " link "CO14"}
   @{" Configuration - New mail  " link "CO02"}
   @{" Configuration - Read " link "CO04"}
   @{" Configuration - Reply " link "CO06"}
   @{" Configuration - Security " link "CO09"}
   @{" Configuration - Signature " link "CO07"}
   @{" Configuration - Start/Quit " link "CO10"}
   @{" Configuration - TCP/IP " link "CO01"}
   @{" Configuration - Write " link "CO05"}
   @{" Context menus " link "CO08"}
   @{" Confirm deletion of X messages, Configuration " link "CO14"}
   @{" Credits " link "CRED"}

   D...

   @{" Daylight saving time, First Steps configuration " link "CO00"}
   @{" DEBUG, Tooltype " link "RF00"}
   @{" Default signature " link "CO07"}
   @{" Delete messages immediately " link "CO14"}
   @{" Deletion of X messages, Confirm " link "CO14"}
   @{" Directory for temporary files " link "CO14"}
   @{" Drag & Drop " link "Drag"}
   @{" Duplicates, Avoid " link "CO02"}

   E...

   @{" Editor features " link "EDIT"}
   @{" Electronic mail, What is it " link "MAIL"}
   @{" Email cache " link "CO05"}
   @{" Empty lines, Quote " link "CO06"}
   @{" Enhancement requests " link "INF3"}
   @{" Entering addresses, Address book " link "EA_W"}
   @{" Exporting a whole folder " link "MAM2"}
   @{" External editor " link "CO05"}
   @{" Extra headers, Defining default " link "CO05"}

   F...

   @{" Feature requests " link "INF3"}
   @{" File formats " link "RF05"}
   @{" Filters, Configuration " link "CO03"}
   @{" Finding messages " link "FI_W"}
   @{" Finding messages - Search criteria " link "FI_K"}
   @{" Folder list, Main window " link "MA00"}
   @{" Folder settings " link "FO_W"}
   @{" FLUSHINDEXES, ARexx command " link "RX_FLUSHINDEXES"}
   @{" FOLDERINFO, ARexx command " link "RX_FOLDERINFO"}
   @{" Format, Size " link "CO08"}
   @{" Forward settings " link "CO06"}
   @{" Function, Supported ARexx commands sorted by " link "REXL"}
   @{" Future plans " link "PLAN"}

   G...

   @{" GETFOLDERINFO, ARexx command " link "RX_GETFOLDERINFO"}
   @{" GETSELECTED, ARexx command " link "RX_GETSELECTED"}
   @{" Getting started " link "BEGI"}
   @{" GETURL, ARexx command " link "RX_GETURL"}
   @{" GPL " link "COPY"}

   H...

   @{" Headers, Selecting how many are displayed " link "CO04"}
   @{" Headers, What's that " link "HEAD"}
   @{" HELP, ARexx command " link "RX_HELP"}
   @{" HIDE, ARexx command " link "RX_HIDE"}
   @{" HIDE, Tooltype " link "RF00"}
   @{" How can I change the icons " link "RF04"}
   @{" How is email stored " link "RF03"}
   @{" HTTP proxy server, Configuration " link "CO12"}

   I...

   @{" Icon handling " link "RF04"}
   @{" Immediately, Delete messages " link "CO14"}
   @{" Importing email " link "MAM2"}
   @{" INFO, ARexx command " link "RX_INFO"}
   @{" Installation " link "INST"}
   @{" Internal editor " link "EDIT"}
   @{" Introduction " link "INTR"}
   @{" ISONLINE, ARexx command " link "RX_ISONLINE"}

   K...

   @{" Killfiles, Defining " link "CO03"}
   @{" Known problems " link "PROB"}

   L...

   @{" Large messages, Download " link "CO02"}
   @{" Legal issues " link "COPY"}
   @{" LETTER, Tooltype " link "RF00"}
   @{" Limit, Message size " link "CO02"}
   @{" List of all ARexx commands " link "REXX"}
   @{" LISTSELECT, ARexx command " link "RX_LISTSELECT"}
   @{" Log files, Using " link "CO09"}

   M...

   @{" Mail transfers " link "TR_W"}
   @{" Mail protocols " link "PROT"}
   @{" MAILARCHIVE, ARexx command " link "RX_MAILARCHIVE"}
   @{" MAILBOUNCE, ARexx command " link "RX_MAILBOUNCE"}
   @{" MAILCHANGESUBJECT, ARexx command " link "RX_MAILCHANGESUBJECT"}
   @{" MAILCHECK, ARexx command " link "RX_MAILCHECK"}
   @{" MAILCOPY, ARexx command " link "RX_MAILCOPY"}
   @{" MAILDELETE, ARexx command " link "RX_MAILDELETE"}
   @{" MAILDIR, Tooltype " link "RF00"}
   @{" MAILEDIT, ARexx command " link "RX_MAILEDIT"}
   @{" MAILEXPORT, ARexx command " link "RX_MAILEXPORT"}
   @{" MAILFILTER, ARexx command " link "RX_MAILFILTER"}
   @{" MAILFORWARD, ARexx command " link "RX_MAILFORWARD"}
   @{" MAILIMPORT, ARexx command " link "RX_MAILIMPORT"}
   @{" MAILINFO, ARexx command " link "RX_MAILINFO"}
   @{" Mailing list support settings, Examples " link "TIP4"}
   @{" Mailing lists, Support " link "INF1"}
   @{" MAILMOVE, ARexx command " link "RX_MAILMOVE"}
   @{" MAILREAD, ARexx command " link "RX_MAILREAD"}
   @{" MAILREPLY, ARexx command " link "RX_MAILREPLY"}
   @{" MAILSEND, ARexx command " link "RX_MAILSEND"}
   @{" MAILSENDALL, ARexx command " link "RX_MAILSENDALL"}
   @{" MAILSTATUS, ARexx command " link "RX_MAILSTATUS"}
   @{" MAILTO, Tooltype " link "RF00"}
   @{" MAILUPDATE, ARexx command " link "RX_MAILUPDATE"}
   @{" MAILWRITE, ARexx command " link "RX_MAILWRITE"}
   @{" Main window " link "MA_W"}
   @{" Main window - folder list " link "MA00"}
   @{" Main window - Folder menu " link "MAM2"}
   @{" Main window - message list " link "MA01"}
   @{" Main window - Message menu " link "MAM3"}
   @{" Main window - Project menu " link "MAM1"}
   @{" Main window - Scripts menu " link "MAM5"}
   @{" Main window - Settings menu " link "MAM4"}
   @{" Main window - toolbar " link "MA02"}
   @{" Make up of a message header " link "HEAD"}
   @{" Menus, Context " link "CO08"}
   @{" Message pre-selection " link "CO02"}
   @{" Message storage " link "RF03"}
   @{" Message tracking " link "CO14"}
   @{" MIME viewers, Defining " link "CO11"}
   @{" MUI " link "MUI"}
   @{" Multiple Read windows " link "CO04"}

   N...

   @{" Netiquette " link "NETI"}
   @{" NewIcons " link "NEWI"}
   @{" NEWMAILFILE, ARexx command " link "RX_NEWMAILFILE"}
   @{" NOCHECK, Tooltype " link "RF00"}
   @{" Notification " link "CO02"}

   O...

   @{" Organization, Setting the header " link "CO05"}

   P...

   @{" PASSWORD, Tooltype " link "RF00"}
   @{" Pattern matching " link "DOSW"}
   @{" Personal data, Exchanging " link "CO12"}
   @{" PGP, Encrypting with " link "PGP"}
   @{" PGP 2.6.x, Installing " link "PGP0"}
   @{" PGP 5.0i, Installing " link "PGP1"}
   @{" POP3 accounts, Defining multiple " link "CO01"}
   @{" PREFSFILE, Tooltype " link "RF00"}
   @{" Pre-selection, Message " link "CO02"}
   @{" Problems, Known " link "PROB"}
   @{" Proxy server, Defining an HTTP " link "CO12"}

   Q...

   @{" Quickstart " link "TUTO"}
   @{" QUIT, ARexx command " link "RX_QUIT"}
   @{" Quote empty lines " link "CO06"}
   @{" Quote message " link "CO06"}
   @{" Quoted-Printable, MIME " link "MIME"}
   @{" Quotes, Previous " link "CO04"}

   R...

   @{" Read window " link "RE_W"}
   @{" Read window - toolbar " link "RE_B"}
   @{" Read window - Message menu " link "REM1"}
   @{" Read window - Navigation menu " link "REM2"}
   @{" Read window - PGP menu " link "REM3"}
   @{" Read window - Settings menu " link "REM4"}
   @{" Read windows, Multiple " link "CO04"}
   @{" READCLOSE, ARexx command " link "RX_READCLOSE"}
   @{" READINFO, ARexx command " link "RX_READINFO"}
   @{" READPRINT, ARexx command " link "RX_READPRINT"}
   @{" READSAVE, ARexx command " link "RX_READSAVE"}
   @{" Reference " link "RF_W"}
   @{" Remailer, Using a " link "CO09"}
   @{" Remote filters " link "CO03"}
   @{" Reply-To: address " link "CO05"}
   @{" REQUEST, ARexx command " link "RX_REQUEST"}
   @{" REQUESTFILE, ARexx command " link "RX_REQUESTFILE"}
   @{" REQUESTFOLDER, ARexx command " link "RX_REQUESTFOLDER"}
   @{" REQUESTSTRING, ARexx command " link "RX_REQUESTSTRING"}
   @{" Requirements " link "REQS"}
   @{" RESTART, ARexx command " link "RX_RESTART"}

   S...

   @{" Save sent messages, Configuration " link "CO14"}
   @{" SCREENTOBACK, ARexx command " link "RX_SCREENTOBACK"}
   @{" SCREENTOFRONT, ARexx command " link "RX_SCREENTOFRONT"}
   @{" Scripts, Using ARexx " link "CO13"}
   @{" Searching messages " link "FI_W"}
   @{" Sent messages, Save " link "CO14"}
   @{" SETFLAG, ARexx command " link "RX_SETFLAG"}
   @{" SETFOLDER, ARexx command " link "RX_SETFOLDER"}
   @{" SETMAIL, ARexx command " link "RX_SETMAIL"}
   @{" SETMAILFILE, ARexx command " link "RX_SETMAILFILE"}
   @{" SHOW, ARexx command " link "RX_SHOW"}
   @{" SIGNATURE, Environment variable " link "CO07"}
   @{" Signature, Use " link "CO07"}
   @{" Signatures, How are they displayed " link "CO04"}
   @{" Size format " link "CO08"}
   @{" SMTP AUTH " link "CO01"}
   @{" SMTP server " link "CO01"}
   @{" Sources, Getting the " link "INF5"}
   @{" Spam " link "CO15"}
   @{" SSLv3, POP3 secure settings " link "CO01"}
   @{" Startup options " link "RF00"}
   @{" Status bar " link "CO08"}
   @{" Status Icons " link MA0S}
   @{" STLS, POP3 secure settings " link "CO01"}
   @{" Structure, Install " link "RF02"}
   @{" Styles, Text " link "CO04"}
   @{" SUBJECT, Tooltype " link "RF00"}
   @{" Subject, Warn when there's an empty " link "CO05"}
   @{" Support " link "INFO"}
   @{" SVN repository " link "INF5"}
   @{" Swatch Beats, Time unit " link "CO08"}

   T...

   @{" Taglines " link "CO07"}
   @{" Temporary files, Directory for " link "CO14"}
   @{" Text styles, Read window " link "CO04"}
   @{" Glossary " link "DI_W"}
   @{" Time zone, First Steps configuration " link "CO00"}
   @{" Tips & tricks " link "TIPS"}
   @{" TLSv1/SSLv3 POP3 settings " link "CO01"}
   @{" Tooltypes " link "RF00"}
   @{" Tracking, Message " link "CO14"}
   @{" Transfer window " link "CO02"}
   @{" Transfers, Mail " link "TR_W"}

   U...

   @{" Updates, Checking for " link "MAM1"}
   @{" URL color " link "CO04"}
   @{" Useful links " link "INFO"}
   @{" USER, Tooltype " link "RF00"}
   @{" USERINFO, ARexx command " link "RX_USERINFO"}
   @{" Users " link "US_W"}
   @{" UUencoding, MIME " link "MIME"}

   V...

   @{" Viewers, Defining MIME " link "CO11"}

   W...

   @{" Warn when there's an empty Subject " link "CO05"}
   @{" Welcome phrase " link "CO05"}
   @{" Wildcards " link "DOSW"}
   @{" Word wrapping " link "CO05"}
   @{" Write window " link "WR_W"}
   @{" Write window - Attachments  " link "WR01"}
   @{" Write window - Attachments menu " link "WRM3"}
   @{" Write window - Edit menu " link "WRM2"}
   @{" Write window - Message " link "WR00"}
   @{" Write window - Options " link "WR02"}
   @{" Write window - Text menu " link "WRM1"}
   @{" WRITEATTACH, ARexx command " link "RX_WRITEATTACH"}
   @{" WRITEBCC, ARexx command " link "RX_WRITEBCC"}
   @{" WRITECC, ARexx command " link "RX_WRITECC"}
   @{" WRITEEDITOR, ARexx command " link "RX_WRITEEDITOR"}
   @{" WRITEFROM, ARexx command " link "RX_WRITEFROM"}
   @{" WRITELETTER, ARexx command " link "RX_WRITELETTER"}
   @{" WRITEMAILTO, ARexx command " link "RX_WRITEMAILTO"}
   @{" WRITEOPTIONS, ARexx command " link "RX_WRITEOPTIONS"}
   @{" WRITEQUEUE, ARexx command " link "RX_WRITEQUEUE"}
   @{" WRITEREPLYTO, ARexx command " link "RX_WRITEREPLYTO"}
   @{" WRITESEND, ARexx command " link "RX_WRITESEND"}
   @{" WRITESUBJECT, ARexx command " link "RX_WRITESUBJECT"}
   @{" WRITETO, ARexx command " link "RX_WRITETO"}

   X...

   @{" XPK, Setting packer & efficiency " link "CO14"}
   @{" XPK, Enabling it to compress and protect folders " link "FO_W"}

   Y...

   @{" YAM - English documentation " link "Main"}
   @{" YAM in the World Wide Web " link "INF0"}
   @{" YAM team " link "CRED"}
@{BODY}
@endnode
